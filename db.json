{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/images/ipad副屏扩展/1685153282219.png","path":"images/ipad副屏扩展/1685153282219.png","modified":0,"renderable":0},{"_id":"source/images/ipad副屏扩展/1685153786552.png","path":"images/ipad副屏扩展/1685153786552.png","modified":0,"renderable":0},{"_id":"source/images/ipad副屏扩展/1685153636049.png","path":"images/ipad副屏扩展/1685153636049.png","modified":0,"renderable":0},{"_id":"source/images/ipad副屏扩展/1685156321847.png","path":"images/ipad副屏扩展/1685156321847.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680873666633.png","path":"images/Hexo&Github搭建个人博客/1680873666633.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680873683510.png","path":"images/Hexo&Github搭建个人博客/1680873683510.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680873809468.png","path":"images/Hexo&Github搭建个人博客/1680873809468.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680873944366.png","path":"images/Hexo&Github搭建个人博客/1680873944366.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680875583179.png","path":"images/Hexo&Github搭建个人博客/1680875583179.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680876607176.png","path":"images/Hexo&Github搭建个人博客/1680876607176.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680877252167.png","path":"images/Hexo&Github搭建个人博客/1680877252167.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680876225334.png","path":"images/Hexo&Github搭建个人博客/1680876225334.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680877644122.png","path":"images/Hexo&Github搭建个人博客/1680877644122.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680877867261.png","path":"images/Hexo&Github搭建个人博客/1680877867261.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680878108104.png","path":"images/Hexo&Github搭建个人博客/1680878108104.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680878256004.png","path":"images/Hexo&Github搭建个人博客/1680878256004.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680956631099.png","path":"images/Hexo&Github搭建个人博客/1680956631099.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680956656990.png","path":"images/Hexo&Github搭建个人博客/1680956656990.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680878360529.png","path":"images/Hexo&Github搭建个人博客/1680878360529.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680958520314.png","path":"images/配置博客/1680958520314.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680957120218.png","path":"images/Hexo&Github搭建个人博客/1680957120218.png","modified":0,"renderable":0},{"_id":"source/images/Hexo&Github搭建个人博客/1680956679681.png","path":"images/Hexo&Github搭建个人博客/1680956679681.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680958715749.png","path":"images/配置博客/1680958715749.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680963693171.png","path":"images/配置博客/1680963693171.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680964031232.png","path":"images/配置博客/1680964031232.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680964267170.png","path":"images/配置博客/1680964267170.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680964767983.png","path":"images/配置博客/1680964767983.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680964436969.png","path":"images/配置博客/1680964436969.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680964912309.png","path":"images/配置博客/1680964912309.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680965510560.png","path":"images/配置博客/1680965510560.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1683950862678.png","path":"images/配置博客/1683950862678.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680965379223.png","path":"images/配置博客/1680965379223.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1680965881830.png","path":"images/配置博客/1680965881830.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1683951027038.png","path":"images/配置博客/1683951027038.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1683951112541.png","path":"images/配置博客/1683951112541.png","modified":0,"renderable":0},{"_id":"source/images/配置博客/1683951226689.png","path":"images/配置博客/1683951226689.png","modified":0,"renderable":0},{"_id":"source/link/images/index/R-C.jpg","path":"link/images/index/R-C.jpg","modified":0,"renderable":0},{"_id":"source/link/images/index/android-chrome-384x384.png","path":"link/images/index/android-chrome-384x384.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/pills.svg","path":"images/pills.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/pills_16x16.png","path":"images/pills_16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/pills_180x180.png","path":"images/pills_180x180.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/pills_32x32.png","path":"images/pills_32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/placebo.jpg","path":"images/placebo.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/Hexo&Github搭建个人博客/1680873666633.png","path":"images/Hexo&Github搭建个人博客/1680873666633.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Hexo&Github个人博客配置撰写到美化.md","hash":"1358ec4b36d5b1610e3f456799007eae92727255","modified":1685719972694},{"_id":"source/_posts/Hexo&Github搭建个人博客.md","hash":"b9136020dc6cf4624c0e3015013b0d39e208ff51","modified":1685713624814},{"_id":"source/_posts/JavaScript学习路线.md","hash":"16045ae84ff1f85f79f1aff9eae8740cf08605d6","modified":1685721930811},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1680870609326},{"_id":"source/_posts/RT-Thread开源贡献入门级指南.md","hash":"15cda4ddcbfe6a369e6c68a7c651394ecfd38530","modified":1685723670595},{"_id":"source/_posts/ipad副屏扩展.md","hash":"68c77c2bf90084d1335965aea0ead74ef0ba820f","modified":1685721640790},{"_id":"source/categories/index.md","hash":"07da5d072aab6efa039262f1fa0f800fed9fc08d","modified":1683983234564},{"_id":"source/about/index.md","hash":"176ccdb3b5d4866a8cb9bcdf02a8e1209f357218","modified":1684067598362},{"_id":"source/link/index.md","hash":"5c5e794dcf691573b50afea6b0a953ad3a6746e8","modified":1684069251127},{"_id":"source/images/ipad副屏扩展/1685153282219.png","hash":"618562ee713e15b5088139d26169be4db2619ced","modified":1685153282250},{"_id":"source/tags/index.md","hash":"27d6994c195a95f317b1aedefc6aae3b0ae0be4a","modified":1683983110999},{"_id":"source/images/Hexo&Github搭建个人博客/1680873666633.png","hash":"c69d5b04f86453e0ad724aa469f209ae7d6ff5e6","modified":1685704541507},{"_id":"source/images/Hexo&Github搭建个人博客/1680873683510.png","hash":"9019d874900de856a8df215baecff0f5c3da73b6","modified":1680873683514},{"_id":"source/images/Hexo&Github搭建个人博客/1680873809468.png","hash":"b1afb78cec0d9a073599dcef293770689a0b79ff","modified":1685711314719},{"_id":"source/images/Hexo&Github搭建个人博客/1680875583179.png","hash":"730bf715842afd0e7bf6ccfc7c8815bff7119abb","modified":1685711772606},{"_id":"source/images/Hexo&Github搭建个人博客/1680876607176.png","hash":"ac78ab771f2e1d244dd210ccb0d55bd5075b8b08","modified":1685711782337},{"_id":"source/images/Hexo&Github搭建个人博客/1680877252167.png","hash":"630081ec704578f3963b03c28b48dc1a2bf5582a","modified":1685711787843},{"_id":"source/images/Hexo&Github搭建个人博客/1680876225334.png","hash":"565a8b9636b8fb45f400b3d61c7a6e32ef3796c0","modified":1685711777358},{"_id":"source/images/Hexo&Github搭建个人博客/1680877644122.png","hash":"e5e6ab94ba60e3458c510952c018664f562784f7","modified":1685711792709},{"_id":"source/images/Hexo&Github搭建个人博客/1680877867261.png","hash":"a77c2664302ab7aa4916d985ec061e7d813dab50","modified":1685711797730},{"_id":"source/images/Hexo&Github搭建个人博客/1680878256004.png","hash":"e112412ce9d4c060563013a4d3364102874719eb","modified":1685712079842},{"_id":"source/images/Hexo&Github搭建个人博客/1680878108104.png","hash":"6e9b0784d265447b7d4961f71144d8beb8ad5721","modified":1685711807403},{"_id":"source/images/Hexo&Github搭建个人博客/1680956631099.png","hash":"5a8f66c9413d3f324209e9c2df068ebaba46cc5b","modified":1685711902853},{"_id":"source/images/Hexo&Github搭建个人博客/1680956656990.png","hash":"2bec18c57512512f4cea11df65428da546c9434d","modified":1685711692219},{"_id":"source/images/配置博客/1680958520314.png","hash":"db4d69098f58855f0fd84b74ea080c6829a3e338","modified":1685719884283},{"_id":"source/images/Hexo&Github搭建个人博客/1680956679681.png","hash":"1b5aaf012baad97703a81ff96a760bcab85a7a60","modified":1685711754245},{"_id":"source/images/Hexo&Github搭建个人博客/1680957120218.png","hash":"7e66850a70ebe5ad474398a734d6aaba9538cfdf","modified":1685711765898},{"_id":"source/images/配置博客/1680958715749.png","hash":"c4c56ac085d0c713408f665222c31b6365f694ed","modified":1685719894181},{"_id":"source/images/配置博客/1680963693171.png","hash":"3b6232bacf50134367730753110d6e43bcc7b41c","modified":1685719899348},{"_id":"source/images/配置博客/1680964267170.png","hash":"2757ea162a3a83beeb8977c58b3117e3ba399830","modified":1685719911937},{"_id":"source/images/配置博客/1680964767983.png","hash":"260b13aaabd70d060af569e344c883fd57359674","modified":1685719910308},{"_id":"source/images/配置博客/1680964436969.png","hash":"06e052db9a078c9027dace5b34564e8a496242d5","modified":1685719917437},{"_id":"source/images/配置博客/1683950862678.png","hash":"d353af3178cd87cdf259fb8edfd1fb09881f2bcc","modified":1685719922418},{"_id":"source/images/配置博客/1680964912309.png","hash":"abff48b8ce07108e1237da2e130c52e562367f9f","modified":1685719920243},{"_id":"source/images/配置博客/1680965510560.png","hash":"c938ba9769636ee59a5c02d856b67393fc123d71","modified":1685719906858},{"_id":"source/images/配置博客/1680965379223.png","hash":"38558117a316c534d576baeab3db9ce0d0ea291e","modified":1685719932544},{"_id":"source/images/配置博客/1680965881830.png","hash":"ab8da8da6952f7269ac76603990bdf455ed073f8","modified":1685719914896},{"_id":"source/images/配置博客/1683951112541.png","hash":"8b9eb7c00e21bc54bd1f7a34bafc3f43b171f140","modified":1685719927434},{"_id":"source/images/配置博客/1683951027038.png","hash":"76af04d7c8e0d36b2f3de7e317e8112958e7123a","modified":1685719925148},{"_id":"source/images/配置博客/1683951226689.png","hash":"53b420a3060398a5e8bcb6912240014b948d5b4b","modified":1685719929520},{"_id":"source/link/images/index/R-C.jpg","hash":"fbf55ff878da12abb409d30fb1ebbbccb994700e","modified":1684068970381},{"_id":"source/images/ipad副屏扩展/1685156321847.png","hash":"a974e0dacb350e43bdcc5d1ede7d65aa2e289276","modified":1685156321887},{"_id":"source/images/ipad副屏扩展/1685153636049.png","hash":"66f7f1a1415b16fc7e63058e18bb3d7256fe666e","modified":1685153636082},{"_id":"source/images/Hexo&Github搭建个人博客/1680873944366.png","hash":"ae23ed3e1a1a4adcb90c663a9e3af463b450ec7c","modified":1685711378704},{"_id":"source/images/配置博客/1680964031232.png","hash":"1e67b773d838fa755c530afb5e52defdddeea1ad","modified":1685719902409},{"_id":"source/link/images/index/android-chrome-384x384.png","hash":"881cba4107f6cb26324c9f1794a156459aa7d041","modified":1684068785146},{"_id":"source/images/ipad副屏扩展/1685153786552.png","hash":"6e5b5ee7122c54fe4b42b1bd5252ab598a9ea391","modified":1685153786653},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1680965846404},{"_id":"themes/next/.gitignore","hash":"087b7677078303acb2acb47432165950e4d29b43","modified":1680965846417},{"_id":"themes/next/.eslintrc.json","hash":"611e15c3fcb41dc68fa8532ee595a1262a1b5a8a","modified":1680965846404},{"_id":"themes/next/.stylelintrc","hash":"c6b473cc7337d35b278cd9d85855c60ee2fead3e","modified":1680965846417},{"_id":"themes/next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1680965846405},{"_id":"themes/next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1680965846418},{"_id":"themes/next/README.md","hash":"fe1761cb3eab07a1742296c5976c30f2346073b7","modified":1680965846419},{"_id":"themes/next/_vendors.yml","hash":"07fbdce9d04ebc3edb1a13b34fe907bc7d46a628","modified":1680965846420},{"_id":"themes/next/.githooks/install.js","hash":"72757c6827909a5f2c217ddbbdf6034ca6fab74a","modified":1680965846406},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1680965846420},{"_id":"themes/next/package.json","hash":"3c7de45e04c617a6a214879e446c14a49f9645b1","modified":1680965846520},{"_id":"themes/next/_config.yml","hash":"bc27a3eeee5d433c23579137423df347f09649bb","modified":1684474130248},{"_id":"themes/next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1680965846521},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"2fdca1040427cabfe27cae6754ec5e027ec7092e","modified":1680965846407},{"_id":"themes/next/.githooks/pre-commit","hash":"b69b9d0b51e27d5d4c87c3242f5067c2cda26e44","modified":1680965846406},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"593ae64e72d43c020a697eac65b1f9c3483ff097","modified":1680965846407},{"_id":"themes/next/.github/config.yml","hash":"0956bf71b6f36632b63b14d26580458041a5abd2","modified":1680965846411},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"009b397b686bba7b63885da59d904144ff59b24e","modified":1680965846410},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1680965846411},{"_id":"themes/next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1680965846422},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1680965846421},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"a1aa85a2fc66ff0c52c65bd97b0fa282e297a73f","modified":1680965846412},{"_id":"themes/next/.github/labeler.yml","hash":"ff76a903609932a867082b8ccced906e9910533a","modified":1680965846412},{"_id":"themes/next/.github/release.yml","hash":"83b4dae3f8d76619e208d2110a247b3ccadd64d8","modified":1680965846412},{"_id":"themes/next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1680965846423},{"_id":"themes/next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1680965846426},{"_id":"themes/next/languages/ar.yml","hash":"c77fc13e0431e71eeb0f767a0a436284fc81df90","modified":1680965846427},{"_id":"themes/next/languages/bn.yml","hash":"f63980b95710fe19b19e6fbc09c7cb93b8f065ed","modified":1680965846427},{"_id":"themes/next/languages/de.yml","hash":"5101612f7cac38884206d28319532f1aab32fbe6","modified":1680965846428},{"_id":"themes/next/languages/es.yml","hash":"31c2a47d14cd5b804cae0c0b44d43bece069d3aa","modified":1680965846429},{"_id":"themes/next/languages/en.yml","hash":"5ca2c0b3c95dd87485f2d2b3477f88810ad1a63b","modified":1680965846429},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1680965846428},{"_id":"themes/next/languages/fa.yml","hash":"cc6ef3144b954daa29ce7d42f08191eafe052fab","modified":1680965846451},{"_id":"themes/next/languages/fr.yml","hash":"2ff880efe524ae557f27da89003da3c08edef3bd","modified":1680965846452},{"_id":"themes/next/languages/id.yml","hash":"bd2c30def05a37c66653900ca07952d52a142961","modified":1680965846452},{"_id":"themes/next/languages/it.yml","hash":"4969c4f17d88003135218de72ddf0bf8d894dc07","modified":1680965846453},{"_id":"themes/next/languages/ja.yml","hash":"e660ec12b9eade103492aba7aa9b23ef06d353a9","modified":1680965846453},{"_id":"themes/next/languages/ko.yml","hash":"04927e331652ee13f9c8a110fe12d7f936a6b0e6","modified":1680965846454},{"_id":"themes/next/languages/pt-BR.yml","hash":"ff9aa6a6549d07b7dc667094f34a06945e2c21b4","modified":1680965846454},{"_id":"themes/next/languages/nl.yml","hash":"4575f93c4ee4383bdfaca01ad6ffff5664cbbbae","modified":1680965846454},{"_id":"themes/next/languages/ru.yml","hash":"d726265bc5cf8bd4fb64f85b2d07b3326439bb00","modified":1680965846455},{"_id":"themes/next/languages/si.yml","hash":"07f98d6ca99bceef35254c60fc0e4401ff608557","modified":1680965846456},{"_id":"themes/next/languages/pt.yml","hash":"1fa9f4f4f208191afd0e6108ce89d91c657a6bd0","modified":1680965846455},{"_id":"themes/next/languages/th.yml","hash":"dc434da945d52dc7a8d26acc80b23e6922712f89","modified":1680965846456},{"_id":"themes/next/languages/tk.yml","hash":"7b9115e0520dc81a95a7c8e4f56a01fc84f74017","modified":1680965846457},{"_id":"themes/next/languages/tr.yml","hash":"822ec400a0a2bb2245abf31e9ed4f3af77b2814e","modified":1680965846457},{"_id":"themes/next/languages/uk.yml","hash":"10a2f2e7183410d1d10fa937e3e0198b46bf4930","modified":1680965846458},{"_id":"themes/next/languages/zh-CN.yml","hash":"cbb956fbef8f51f56c21c0b994102f66db53ba2d","modified":1684471978150},{"_id":"themes/next/languages/zh-HK.yml","hash":"6cfdc633870b814f3d75438e86f6ee5dba068987","modified":1680965846459},{"_id":"themes/next/languages/zh-TW.yml","hash":"198e3745b99ba5a2b75cc24d03f3412e272b7fa1","modified":1680965846460},{"_id":"themes/next/languages/vi.yml","hash":"8344cb90ee92a21a398faff3317c025a43446db5","modified":1680965846458},{"_id":"themes/next/layout/_layout.njk","hash":"0f2760cd7550ca30ffcc28e2dbd7f031a237b5a7","modified":1680965846460},{"_id":"themes/next/layout/page.njk","hash":"6d2f7e7cd9fe868e96765b82d17df49081379e27","modified":1680965846497},{"_id":"themes/next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1680965846496},{"_id":"themes/next/layout/index.njk","hash":"fa52c3049871e879980cb6abccdea3792ca4ce70","modified":1680965846497},{"_id":"themes/next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1680965846496},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"b87ffaf40820461159c891d0d41c87e00e312ff3","modified":1680965846414},{"_id":"themes/next/.github/workflows/codeql.yml","hash":"1e4e4a7ea522b76d6fc5947ddd07260f9fecbcf4","modified":1680965846413},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"bfea9b04e3ea7da31a2095277c4c23ae6bd14baa","modified":1680965846414},{"_id":"themes/next/.github/workflows/lock.yml","hash":"ea346568ab811fea4dacc69081af2d6177b5aafb","modified":1680965846415},{"_id":"themes/next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1680965846520},{"_id":"themes/next/layout/post.njk","hash":"6767de9702a07a2a4e16a8a6bc9c5919536c1e3f","modified":1680965846497},{"_id":"themes/next/.github/workflows/linter.yml","hash":"74ecdd99cc20a8f5103579210353de33536aa45c","modified":1680965846415},{"_id":"themes/next/.github/workflows/pr-reminder.yml","hash":"7d9f270dda6b28688b68118d9001ceaa4991d965","modified":1680965846416},{"_id":"themes/next/test/index.js","hash":"983a505399796b9d9e174ba46d89abbdde38f8ee","modified":1680965846655},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"daeedc5da2ee74ac31cf71846b766ca6499e9fc6","modified":1680965846409},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.yml","hash":"10eca518b91a19984f6a5a912d41222042f61d63","modified":1680965846410},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"fbc3062cd4591c8329fab9db72803746f0d11920","modified":1680965846410},{"_id":"themes/next/.github/workflows/tester.yml","hash":"dda18899fe62652c633f60c300a93df18f58862f","modified":1680965846416},{"_id":"themes/next/docs/ru/README.md","hash":"caf25da442d08b3d0a4e4503c6f4d6b68b1ac2f2","modified":1680965846423},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"3f19cbf0c2b2fee6bf3788870b842c9ccc1425ca","modified":1680965846408},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7befb4325b107dd668d9eae3d7e86a34910ce3f2","modified":1680965846424},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1680965846425},{"_id":"themes/next/docs/zh-CN/README.md","hash":"5500b0c6db58bf2e93e8ace98ae8da65de7e8318","modified":1680965846425},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"d9d8e6d7a6a8c80009dd5334cc17fd3e4977a008","modified":1680965846461},{"_id":"themes/next/layout/_partials/comments.njk","hash":"60f4620dd479da6d86d1d493440e9e2a28b6e132","modified":1680965846463},{"_id":"themes/next/layout/_macro/post.njk","hash":"fefa9d5f56607dbcbfd9b8d57b3f32c07167d847","modified":1680965846462},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1680965846478},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"b9fc0a6b02f0380de939d1ea2a7c7d2e6be9f462","modified":1680965846462},{"_id":"themes/next/layout/_partials/footer.njk","hash":"3c99c51cc6cfc74f1bdef8c953aa81d8a9ab48ac","modified":1680965846463},{"_id":"themes/next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1680965846468},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"c55167bc0dbe7e104d4f4d782e98fcabc7e07a35","modified":1680965846471},{"_id":"themes/next/layout/_scripts/index.njk","hash":"4eb65641b47ea9b23ed2ddfd69b18f21d7d8f214","modified":1680965846477},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"9471c4f3aeee101b9b9a8c2aae7d21ec7277574e","modified":1680965846476},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1680965846488},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1680965846491},{"_id":"themes/next/layout/_third-party/index.njk","hash":"489d0cd36c75555fafa9551cf58ff35cb75a91f4","modified":1680965846488},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1680965846490},{"_id":"themes/next/scripts/events/index.js","hash":"8ae618d4436dab49928c2bebc0837e5310dbe7de","modified":1680965846522},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1680965846531},{"_id":"themes/next/scripts/filters/post.js","hash":"e6cf4c94fc2291215a3345134ddbbc74d5091b00","modified":1680965846532},{"_id":"themes/next/scripts/filters/locals.js","hash":"87f3bff03fa9fd96cf0787a6442464a7ff57f76b","modified":1680965846531},{"_id":"themes/next/scripts/filters/minify.js","hash":"997fc7153a7055bdf278e93d16a17c2d0bd62b8f","modified":1680965846532},{"_id":"themes/next/scripts/helpers/engine.js","hash":"43568a872a93259fc1c497724a53914474ef83ae","modified":1680965846533},{"_id":"themes/next/scripts/helpers/font.js","hash":"0a6fa582a0890ecaf5f03f758a730936e48aeca1","modified":1680965846533},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"ad764d48715c5da87d33f048ad5f1ae8b4e2eb52","modified":1680965846534},{"_id":"themes/next/scripts/helpers/navigation.js","hash":"82f6e81bacf23d10cac71b09cff8708e47891ef3","modified":1680965846534},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"52acbc74c1ead8a77cd3bbcba4e033053683f7d0","modified":1680965846536},{"_id":"themes/next/scripts/helpers/next-paginator.js","hash":"2e8dcc12a52517bb4e00ea611720bcd298624112","modified":1680965846535},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1680965846537},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"483d75522e76c7e67c7e0dfd5cac8ab04784a04c","modified":1680965846535},{"_id":"themes/next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1680965846537},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1680965846537},{"_id":"themes/next/scripts/tags/index.js","hash":"255dd1090e8319b557eeca43571f0e4f8aab013b","modified":1680965846539},{"_id":"themes/next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1680965846539},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1c609312a71d47f838226346aad5c2e1c35f15dd","modified":1680965846538},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1680965846540},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"b3844e168b51a99d495ca05562ffac47677f5728","modified":1680965846540},{"_id":"themes/next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1680965846541},{"_id":"themes/next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1680965846541},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1680965846541},{"_id":"themes/next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1680965846540},{"_id":"themes/next/source/css/_colors.styl","hash":"a88430865c99f47ce1d8240f8895819b8b7b0c06","modified":1680965846543},{"_id":"themes/next/source/css/main.styl","hash":"c326550ce8b4deaa9b647bcfe3cdc04c100644e6","modified":1680965846619},{"_id":"themes/next/source/css/_mixins.styl","hash":"eacfdd1795ccc0138e194fbf9381d3a64b5ba130","modified":1680965846596},{"_id":"themes/next/source/css/noscript.styl","hash":"64b378a4d2f0b36bf666fba13b57c59da3a8ac83","modified":1680965846619},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1680965846620},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1680965846620},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1680965846621},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1680965846622},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1680965846621},{"_id":"themes/next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1680965846622},{"_id":"themes/next/source/images/pills.svg","hash":"d9635dead45f28d9a9955d6f2645325883a286b3","modified":1683977550463},{"_id":"themes/next/source/images/pills_180x180.png","hash":"0d5023f4cc28de3bd81268b4e849db2ee589c523","modified":1683976999256},{"_id":"themes/next/source/images/pills_16x16.png","hash":"0a08eccf53226c1d6ecd6c07e4b78db4b387a304","modified":1683976874716},{"_id":"themes/next/source/images/pills_32x32.png","hash":"ee94b8e58d6dfa3fb5b17d95731c4decb1ca21b6","modified":1683976934025},{"_id":"themes/next/source/js/bookmark.js","hash":"1457291a7244b7786ec35b949d97183e4fbd181d","modified":1680965846623},{"_id":"themes/next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1680965846623},{"_id":"themes/next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1680965846624},{"_id":"themes/next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1680965846624},{"_id":"themes/next/source/js/motion.js","hash":"d4c01d5317d45444e91a52236b751c9e9ab1bc16","modified":1680965846625},{"_id":"themes/next/source/js/pjax.js","hash":"c999bfc7cad747e3da0fe3d75c31dd933bf63016","modified":1680965846626},{"_id":"themes/next/source/js/next-boot.js","hash":"da11083557070d947da48d29d2d60988c8d628e9","modified":1680965846626},{"_id":"themes/next/source/js/schedule.js","hash":"4858233224756e3cadfabd8135f7c4b1e3673b44","modified":1680965846627},{"_id":"themes/next/source/js/utils.js","hash":"6b8152558a7c3b1ab6649cf3dfa897c7ada97138","modified":1680965846653},{"_id":"themes/next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1680965846654},{"_id":"themes/next/test/helpers/font.js","hash":"6f5076bd3f2724e47b46ca69028393a9b6275cd1","modified":1680965846654},{"_id":"themes/next/test/tags/button.js","hash":"a50ca44eaec3d91c2958e3157d624cd3e68828c7","modified":1680965846673},{"_id":"themes/next/test/helpers/next-url.js","hash":"08e84781f1cd54e5634b86877ad9cefae4a78e95","modified":1680965846655},{"_id":"themes/next/test/tags/caniuse.js","hash":"2852be850d9103c25114253a45e6c62e32517de4","modified":1680965846673},{"_id":"themes/next/test/tags/group-pictures.js","hash":"8f66d3c6f03fb11d85aa2ab05c9b3c9aa2b4e994","modified":1680965846674},{"_id":"themes/next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1680965846675},{"_id":"themes/next/test/tags/label.js","hash":"6cad7d84c42511459a89cda3971e8ea5cdee0125","modified":1680965846675},{"_id":"themes/next/test/tags/center-quote.js","hash":"2ac4b5a358681691a17e736de06fce0b640a7023","modified":1680965846674},{"_id":"themes/next/test/tags/link-grid.js","hash":"41730266306c02362258384cd73659223928361f","modified":1680965846675},{"_id":"themes/next/test/tags/tabs.js","hash":"b19d2592347eae5d6a7a97ca7e8cec03e8f25b51","modified":1680965846677},{"_id":"themes/next/test/tags/mermaid.js","hash":"f718a3d0e303d842e2ca5a3b162539a49e45a520","modified":1680965846676},{"_id":"themes/next/test/tags/note.js","hash":"161a81ce749e239d2403681372d48ecc1b51d7b9","modified":1680965846676},{"_id":"themes/next/test/tags/pdf.js","hash":"2d114596a8a180b2f3cd2a9c6528a328961f12d4","modified":1680965846677},{"_id":"themes/next/test/validate/index.js","hash":"560862194991c5963da5a411629d8e6c71d20ee2","modified":1680965846678},{"_id":"themes/next/test/tags/video.js","hash":"88db9a3a26cd35525c43c0339fcd1c5965ec9518","modified":1680965846678},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"7bf2b6ab499775355bbf8f3ae597ff7bc00e89e4","modified":1680965846465},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1680965846466},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"fd75652957c1c3668874fdfd16f4f56027be0d8b","modified":1680965846464},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"e016c3f80db433f17781caf26e44f2089a71550a","modified":1680965846465},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"1fe44a1e156cd30e3e9fd8313e1011ad30970f83","modified":1680965846469},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"20cb9c39bcdcfa3f710df7bc5838d6e62d4dd674","modified":1680965846467},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"62513f08e9e7f4abeaeedca91fd0af0861a2540f","modified":1680965846466},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1680965846469},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"828700af2a2f273d3e3e0554ffc60706d889d539","modified":1680965846467},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1680965846469},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1680965846470},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"f318d8fe2cf1b97877abb0648a9be85502df0cf1","modified":1680965846471},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"6ec9c97e91c793cc2eb5ac0f7c3c36fdaaf637d1","modified":1680965846470},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"ebe45ab38ace03ea74eed3f676ec1cb5805a3c8a","modified":1680965846472},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"9a7eda45ad0753d5f624c51a56e00277ba97c93d","modified":1680965846473},{"_id":"themes/next/layout/_partials/post/post-share.njk","hash":"d251532b76d4b44e84732f78e774b18e2415d7d9","modified":1680965846474},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1680965846472},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"fd6fde597ea2fb7b80cffd0a3553c8e73acb8ab2","modified":1680965846473},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"9766852e72c1809d8c1eea71ac6116b4cc0886d2","modified":1680965846475},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"93fbb449fbd599cb4315d7eb0daeb239811b233f","modified":1680965846474},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"f73d25a8ccfdd5d4ca2953dc434ff8ce36034c57","modified":1680965846475},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1680965846479},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"17173c45f0b740669ef45aaae1fe96eeb0a0ff52","modified":1680965846479},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1680965846480},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1680965846480},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"81abcf790cf97395cde9e3cd6d5d1aa5656bd134","modified":1680965846481},{"_id":"themes/next/layout/_third-party/analytics/matomo.njk","hash":"43238bc1bc2e88d707f8097814ef3ff830cbe641","modified":1680965846481},{"_id":"themes/next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"24719266662fcff63e88a21ee9b5b284abb8b37c","modified":1680965846482},{"_id":"themes/next/layout/_third-party/analytics/plausible.njk","hash":"64ed6fecae79f9f9c61e956d2bd077792473e069","modified":1680965846482},{"_id":"themes/next/layout/_third-party/analytics/umami.njk","hash":"724a58f5296ab4a12910c81f2e619e607b2b21a6","modified":1680965846482},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1680965846485},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1680965846485},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1680965846486},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1680965846487},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1680965846486},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1680965846487},{"_id":"themes/next/layout/_third-party/chat/gitter.njk","hash":"375a86f0b19e130cfa7707007e3a53d9ae7c9b64","modified":1680965846484},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"3de5c9676aaf6a2f7d837db275c56d15f9b74fb8","modified":1680965846476},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1680965846488},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1680965846483},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"67f67a77f27103177b9940446f43610229536d82","modified":1680965846492},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"d97790e4b442a1e3ded7d7b4f84b8ee6cdb6e8ea","modified":1680965846493},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1680965846484},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1680965846492},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1680965846490},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"1df65b1390add93b86ae3f9423d96a130b0ece04","modified":1680965846490},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1680965846489},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1680965846495},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1680965846496},{"_id":"themes/next/scripts/events/lib/config.js","hash":"7c29184a37222d6499c5220264fda6942afc03a9","modified":1680965846523},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1680965846494},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"00cec6980cafd417def885f496371856cd524a25","modified":1680965846523},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1680965846493},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1680965846494},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"65825c37e473c942095df05183424003d7263df5","modified":1680965846525},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1680965846524},{"_id":"themes/next/scripts/events/lib/navigation.js","hash":"0a2df7d40d64c61ce7e730bb8269b848b03526d1","modified":1680965846524},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"550cc7f57bc3ab3d093e34741e7860222851d4d4","modified":1680965846527},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"761760031e49edb77277bd4a8582774959240d6b","modified":1680965846526},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"a96050b0a9bcb49f1f6897660efc77991024790a","modified":1680965846525},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1680965846528},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"4dbe9652ae53a181c86eb7e9005a5255f0540055","modified":1680965846528},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1680965846527},{"_id":"themes/next/source/images/Hexo&Github搭建个人博客/1680873666633.png","hash":"c69d5b04f86453e0ad724aa469f209ae7d6ff5e6","modified":1680873666640},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1680965846529},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1680965846529},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1680965846530},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1680965846530},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1680965846616},{"_id":"themes/next/source/css/_variables/base.styl","hash":"c8b101c76b179877a22256922a56d30d0926bc51","modified":1680965846618},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5092cacdfbc482996d0bee9fdf2c37d8d3ae863c","modified":1680965846617},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"d3a8f6e71c86926d0c2a247a31d7446d829736d5","modified":1680965846617},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"8a847a7bbdbc0086dd1de12b82107a854b43f5e5","modified":1680965846646},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"77d9c468897283223cdc922eb7e146ca7a83420c","modified":1680965846618},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"5b0197e061f57e00875be3636ba372a67693abe0","modified":1680965846648},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"969c3797d4315a2873aa143d0674d251fa0c5703","modified":1680965846544},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1680965846648},{"_id":"themes/next/source/js/schemes/muse.js","hash":"aa84bdd853a9b0646ad9157e26df949ba0ec57c3","modified":1680965846627},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e728caca94567b4d4215402d01e449e23969e7e1","modified":1680965846606},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"49c3063b46d65796003a822deed971abee41675e","modified":1680965846544},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1680965846579},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1680965846570},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"2db4462e9cb87b8aef3f50f850fed407de16da3e","modified":1680965846580},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"1239f1b432a6932b2bb9ebcfbaabf724b8f4e59a","modified":1680965846586},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1680965846586},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1680965846588},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"be9d0e9493802c22f16a0645a59d0c2b556c1c3c","modified":1680965846606},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"fd4a2d2303f107a021837aa6e3d977c2f9d14c42","modified":1680965846589},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1680965846587},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1680965846590},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"aa34abe71ad476922a0371bcac82cd8e5b45d383","modified":1680965846595},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1680965846589},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"82311a531e26ca5a6ad17cf14959da75d4ac6106","modified":1680965846607},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"2db5ada757f7ffb9a36b06400cf30d80ec039b6e","modified":1680965846607},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"68f8d30071516913a7a958e01d010e8a93f7aa24","modified":1680965846608},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"ec5d4e8ffe74722a092a69ace2f8dec7776466a8","modified":1680965846611},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"2f19fe2aba8f63fc99641e50bcb96cc9a4feb8a4","modified":1680965846610},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1680965846612},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1680965846609},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"e6e8892fccb02bff163d9b574984e0440a00d756","modified":1680965846610},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1680965846612},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"6630a642ad2311ec09466c962963c006c4df4c38","modified":1680965846613},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"06835446a1c7353f434a9527889a53d6be69766c","modified":1680965846611},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5393f045f12b1eb9373c421627727f40f5b148e7","modified":1680965846613},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e06e0fd44e39838ce22ac7829a2421f8c9e1b12d","modified":1680965846615},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1d29eca70fa686d895f8e98a283e4a159e40905a","modified":1680965846614},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1680965846615},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1680965846631},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1680965846615},{"_id":"themes/next/source/js/third-party/chat/gitter.js","hash":"14b024c920a8b359777d79dd8e1a849387f8f3ad","modified":1680965846631},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"07e0038b221b9a4fd8ccac75093de3dee1f8315e","modified":1680965846643},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1680965846632},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"5673d28509a8e837a512da490a88b7bf5162fc49","modified":1680965846643},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1680965846644},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"b4cb06fdf531292e2361398a98d75a4ca2b8473a","modified":1680965846632},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1680965846644},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1680965846645},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1680965846628},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1680965846646},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1680965846629},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"d77d4934d959e7125128754b568f1d041c3fbfff","modified":1680965846629},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","hash":"f24604710002234f18a7b5cfe9ccdf3ed6e725a8","modified":1680965846630},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"e9fffe2a14751e86aed5e84a5e96514413eac2dc","modified":1680965846652},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1680965846647},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1680965846647},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1680965846652},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"e927000b375e79e2d173bdc6b8b45e67364fad4a","modified":1680965846649},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"e6361ed3d5fa959e11e90f7dab8fdaff398b4425","modified":1680965846650},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"80595d274f593b321c0b644a06f3165fe07b16f5","modified":1680965846550},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"ce12b5007c9aa997738641c06a1c081c357e27bd","modified":1680965846650},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"7db3233f0b33870943ce1547326a67f9e628b411","modified":1680965846651},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1680965846545},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1680965846550},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1680965846551},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1680965846564},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"aa04527f76de7646573ea327d4f6145200d6070d","modified":1680965846565},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"eebe3013a9a976011570dce2d04dfeae4c31d790","modified":1680965846566},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"4790d37a40b80f7278ec55274f017dad21791038","modified":1680965846567},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"268e0a4cf638b9ce4db07268031ab34c5f31ac65","modified":1680965846566},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"7245d8364092c2d184e658e801ba94815a2a1f81","modified":1680965846567},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"4d29b6ae7ed3dc44b10df851a4128b6441efa8be","modified":1680965846568},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1680965846568},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"777efaacbabb623f1d77fac5dd784401f8dea4cd","modified":1680965846569},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"65dde3ba925ac19b0bfcb7fa70cf4157bec02576","modified":1680965846569},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"a2ffaa06c963514a79fda52665e707af6e8e2f5e","modified":1680965846571},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1680965846569},{"_id":"themes/next/source/css/_common/components/third-party/gitter.styl","hash":"7b36f776c41fbb744572c5de2c8d49b35656ec21","modified":1680965846572},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"406c03be3cf8a8411227bc1fecf942ca368f7e2a","modified":1680965846571},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"49c26184580fde8a732899a4de5aae8662e289b8","modified":1680965846574},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1680965846573},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"08d609b0534b9a5151cab7e6d54c0dec6a8dad8c","modified":1680965846572},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1680965846574},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1680965846576},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"038625515ba4760e4dda6792549bddc0db5a3d20","modified":1680965846577},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"39066b4e2e914d85736c9c33fa51f21a3f86c0e4","modified":1680965846575},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"dce8ea62d7d7b08a0444fbb2f617be30bfcfc152","modified":1680965846578},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1680965846579},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"06d551ef6e26d426bb3ffb4638714488c7cbce66","modified":1680965846578},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1680965846576},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"bdfef8d2363bc199dfbcc23ee833edca27cc9fcf","modified":1680965846581},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2c2bfbc34b6f19d262ae7c041474985e12f4f4ad","modified":1680965846582},{"_id":"themes/next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b3689beb90cda64cafecaf6b25981fe8a9525992","modified":1680965846581},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"cbc6b0938a2e60f35a5df32210904fb16e4938da","modified":1680965846584},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1680965846582},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"f8a97aad14e0b16b555ee0048da5402f818f9693","modified":1680965846583},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"509bad7d1d6b5c6f24a3f205b2ed7b65a2326dd4","modified":1680965846585},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"63d8f5f169c2b1c969928fc79244c5fe89ee484e","modified":1680965846583},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1680965846585},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"047bf8176ea24e277b1a4f6e6ad599033f1d1a44","modified":1680965846588},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"8f82d5141a18f6319e0609a3f6e4fcca6d442203","modified":1680965846584},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1680965846591},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"a3ea8e3d2347f417ec163d191c9d7c1e9d606c1e","modified":1680965846588},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1680965846591},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1680965846592},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1680965846594},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"e22fde6f1657d311d46f64d868c4491d535c8caa","modified":1680965846592},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1680965846593},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7075dd32dd70da1e161e4bd14b46f1e8be62fa3c","modified":1680965846593},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"3324e9d09faf3903bc9815358bda4000bbb691fa","modified":1680965846594},{"_id":"source/images/Hexo&Github搭建个人博客/1680878360529.png","hash":"3eaae0ae12f019d820f6994039c993ccf5aad500","modified":1685712096024},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f71b2022094c5bc8c74b4ed049639f7262e0b182","modified":1680965846595},{"_id":"themes/next/source/images/placebo.jpg","hash":"e16fd5c15773fd16afa461e3c15027810663c802","modified":1684066430437},{"_id":"themes/next/source/images/avatar.jpeg","hash":"b4b10fe73c9aaddfbe9199f22112c0c52e66247e","modified":1684319483378},{"_id":"public/about/index.html","hash":"42c8cb8bf13048b72395af764ed25f61e760faf9","modified":1685723689122},{"_id":"public/categories/index.html","hash":"4c72d7f21f4c207161f2d07d5c7e4b4d96ab5f57","modified":1685723689122},{"_id":"public/link/index.html","hash":"0629413816430d5b8b0a80a865bf3193cedc055b","modified":1685723689122},{"_id":"public/tags/index.html","hash":"7329127ed7be1c62b3e34d8f7f391e7b2667e14d","modified":1685723689122},{"_id":"public/2023/05/12/hello-world/index.html","hash":"65040d696d84beb0f7a5e2b75b4d9f45fe3e57bc","modified":1685723689122},{"_id":"public/archives/index.html","hash":"b35015e0884ca2f482af4efb2940c40c4467d47b","modified":1685723689122},{"_id":"public/archives/2023/index.html","hash":"038aabef20155d868b33acc7a35c58885e825adf","modified":1685723689122},{"_id":"public/archives/2023/05/index.html","hash":"cc144629d4a5a6921ad77a27850c154abcb2eebb","modified":1685723689122},{"_id":"public/archives/2023/06/index.html","hash":"0d0b28b89e3882eca7e609f3b45af55c4e95ff67","modified":1685723689122},{"_id":"public/categories/Blog/index.html","hash":"a8d93cbc4f7bf57b90c5a422d2b5003803c31d68","modified":1685723689122},{"_id":"public/categories/前端/index.html","hash":"ffe547ac84a78fc90b8f45aec655a4d7d480bac0","modified":1685723689122},{"_id":"public/categories/开源社区贡献/index.html","hash":"c6d137640b4b11644fe5cd889ece66c60ce0ebfc","modified":1685723689122},{"_id":"public/categories/工具/index.html","hash":"1e770c5843e15c4a3cd229b9cdab4a3ffafb9339","modified":1685723689122},{"_id":"public/categories/前端/JavaScript/index.html","hash":"fdad888f2421b3af0f8e6f1b2d9369118cb9dd7f","modified":1685723689122},{"_id":"public/tags/Hexo/index.html","hash":"2be118e98b8fd466e73485660d46c9944e067d4d","modified":1685723689122},{"_id":"public/tags/Github/index.html","hash":"c71e015cd32962506206af8342babf38890feaaa","modified":1685723689122},{"_id":"public/tags/JavaScript/index.html","hash":"a8c37e6327190d6f25f861e6f792139d68ef8f57","modified":1685723689122},{"_id":"public/tags/github/index.html","hash":"cdf1e1d89ce088edf893e1d9e614ec7bb79438f6","modified":1685723689122},{"_id":"public/tags/rt-thread/index.html","hash":"4fc21039881cf43a03300eac025411a54a26e831","modified":1685723689122},{"_id":"public/tags/ipad/index.html","hash":"b12cc5d5b7d317c11ac73780447af873d1e6e4a1","modified":1685723689122},{"_id":"public/tags/Spacedesk/index.html","hash":"98e39dfd25018d78a6c69d4a92024b260b53061a","modified":1685723689122},{"_id":"public/2023/06/03/RT-Thread开源贡献入门级指南/index.html","hash":"050b05758e3d5a3afc89e6879a607c3cf0a3e583","modified":1685723689122},{"_id":"public/2023/06/03/JavaScript学习路线/index.html","hash":"1edecd5ef27b9c310f018f228c132cf35d9cb28f","modified":1685723689122},{"_id":"public/2023/06/02/ipad副屏扩展/index.html","hash":"7fd55dd45fb108ff0f535725a78278130daa8eb4","modified":1685723689122},{"_id":"public/2023/06/02/Hexo&Github个人博客配置撰写到美化/index.html","hash":"b4ab69d74fb616ba0e9961ee416aebd6f66cf910","modified":1685723689122},{"_id":"public/index.html","hash":"4eed5256d333cb73b6172b679b3a6ddba5fafb15","modified":1685723689122},{"_id":"public/2023/05/12/Hexo&Github搭建个人博客/index.html","hash":"0a53bdcc61181d0bc1b317ff7f4889249da35a1c","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680873666633.png","hash":"c69d5b04f86453e0ad724aa469f209ae7d6ff5e6","modified":1685723689122},{"_id":"public/images/ipad副屏扩展/1685153282219.png","hash":"618562ee713e15b5088139d26169be4db2619ced","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680873683510.png","hash":"9019d874900de856a8df215baecff0f5c3da73b6","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680875583179.png","hash":"730bf715842afd0e7bf6ccfc7c8815bff7119abb","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680873809468.png","hash":"b1afb78cec0d9a073599dcef293770689a0b79ff","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680877252167.png","hash":"630081ec704578f3963b03c28b48dc1a2bf5582a","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680876607176.png","hash":"ac78ab771f2e1d244dd210ccb0d55bd5075b8b08","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680876225334.png","hash":"565a8b9636b8fb45f400b3d61c7a6e32ef3796c0","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680877644122.png","hash":"e5e6ab94ba60e3458c510952c018664f562784f7","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680877867261.png","hash":"a77c2664302ab7aa4916d985ec061e7d813dab50","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680878256004.png","hash":"e112412ce9d4c060563013a4d3364102874719eb","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680878108104.png","hash":"6e9b0784d265447b7d4961f71144d8beb8ad5721","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680956631099.png","hash":"5a8f66c9413d3f324209e9c2df068ebaba46cc5b","modified":1685723689122},{"_id":"public/images/配置博客/1680958520314.png","hash":"db4d69098f58855f0fd84b74ea080c6829a3e338","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680956656990.png","hash":"2bec18c57512512f4cea11df65428da546c9434d","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680957120218.png","hash":"7e66850a70ebe5ad474398a734d6aaba9538cfdf","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680956679681.png","hash":"1b5aaf012baad97703a81ff96a760bcab85a7a60","modified":1685723689122},{"_id":"public/images/配置博客/1680958715749.png","hash":"c4c56ac085d0c713408f665222c31b6365f694ed","modified":1685723689122},{"_id":"public/images/配置博客/1680963693171.png","hash":"3b6232bacf50134367730753110d6e43bcc7b41c","modified":1685723689122},{"_id":"public/images/配置博客/1680964267170.png","hash":"2757ea162a3a83beeb8977c58b3117e3ba399830","modified":1685723689122},{"_id":"public/images/配置博客/1680964436969.png","hash":"06e052db9a078c9027dace5b34564e8a496242d5","modified":1685723689122},{"_id":"public/images/配置博客/1680964767983.png","hash":"260b13aaabd70d060af569e344c883fd57359674","modified":1685723689122},{"_id":"public/images/配置博客/1680964912309.png","hash":"abff48b8ce07108e1237da2e130c52e562367f9f","modified":1685723689122},{"_id":"public/images/配置博客/1680965510560.png","hash":"c938ba9769636ee59a5c02d856b67393fc123d71","modified":1685723689122},{"_id":"public/images/配置博客/1683950862678.png","hash":"d353af3178cd87cdf259fb8edfd1fb09881f2bcc","modified":1685723689122},{"_id":"public/images/配置博客/1680965881830.png","hash":"ab8da8da6952f7269ac76603990bdf455ed073f8","modified":1685723689122},{"_id":"public/images/配置博客/1680965379223.png","hash":"38558117a316c534d576baeab3db9ce0d0ea291e","modified":1685723689122},{"_id":"public/link/images/index/R-C.jpg","hash":"fbf55ff878da12abb409d30fb1ebbbccb994700e","modified":1685723689122},{"_id":"public/images/配置博客/1683951027038.png","hash":"76af04d7c8e0d36b2f3de7e317e8112958e7123a","modified":1685723689122},{"_id":"public/images/配置博客/1683951226689.png","hash":"53b420a3060398a5e8bcb6912240014b948d5b4b","modified":1685723689122},{"_id":"public/images/配置博客/1683951112541.png","hash":"8b9eb7c00e21bc54bd1f7a34bafc3f43b171f140","modified":1685723689122},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1685723689122},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1685723689122},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1685723689122},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1685723689122},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1685723689122},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1685723689122},{"_id":"public/images/pills.svg","hash":"d9635dead45f28d9a9955d6f2645325883a286b3","modified":1685723689122},{"_id":"public/images/pills_16x16.png","hash":"0a08eccf53226c1d6ecd6c07e4b78db4b387a304","modified":1685723689122},{"_id":"public/images/ipad副屏扩展/1685153636049.png","hash":"66f7f1a1415b16fc7e63058e18bb3d7256fe666e","modified":1685723689122},{"_id":"public/images/ipad副屏扩展/1685156321847.png","hash":"a974e0dacb350e43bdcc5d1ede7d65aa2e289276","modified":1685723689122},{"_id":"public/images/pills_32x32.png","hash":"ee94b8e58d6dfa3fb5b17d95731c4decb1ca21b6","modified":1685723689122},{"_id":"public/images/pills_180x180.png","hash":"0d5023f4cc28de3bd81268b4e849db2ee589c523","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680873944366.png","hash":"ae23ed3e1a1a4adcb90c663a9e3af463b450ec7c","modified":1685723689122},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1685723689122},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1685723689122},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1685723689122},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1685723689122},{"_id":"public/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1685723689122},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1685723689122},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1685723689122},{"_id":"public/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1685723689122},{"_id":"public/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1685723689122},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1685723689122},{"_id":"public/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1685723689122},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1685723689122},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1685723689122},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1685723689122},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1685723689122},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1685723689122},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1685723689122},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1685723689122},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1685723689122},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1685723689122},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1685723689122},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1685723689122},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1685723689122},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1685723689122},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1685723689122},{"_id":"public/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1685723689122},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1685723689122},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1685723689122},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1685723689122},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1685723689122},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1685723689122},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1685723689122},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1685723689122},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1685723689122},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1685723689122},{"_id":"public/css/main.css","hash":"9c869f69df28e1cf0749c4372b0a8e383bd6609a","modified":1685723689122},{"_id":"public/js/utils.js","hash":"5e1cf39de050964e97fb3ba0825aeec7f4bc36dd","modified":1685723689122},{"_id":"public/images/配置博客/1680964031232.png","hash":"1e67b773d838fa755c530afb5e52defdddeea1ad","modified":1685723689122},{"_id":"public/link/images/index/android-chrome-384x384.png","hash":"881cba4107f6cb26324c9f1794a156459aa7d041","modified":1685723689122},{"_id":"public/images/ipad副屏扩展/1685153786552.png","hash":"6e5b5ee7122c54fe4b42b1bd5252ab598a9ea391","modified":1685723689122},{"_id":"public/images/placebo.jpg","hash":"e16fd5c15773fd16afa461e3c15027810663c802","modified":1685723689122},{"_id":"public/images/Hexo&Github搭建个人博客/1680878360529.png","hash":"3eaae0ae12f019d820f6994039c993ccf5aad500","modified":1685723689122},{"_id":"public/images/avatar.jpeg","hash":"b4b10fe73c9aaddfbe9199f22112c0c52e66247e","modified":1685723689122}],"Category":[{"name":"Blog","_id":"cliesczs10004dcfy21icbgcq"},{"name":"前端","_id":"cliesczs8000edcfygwgv4ch3"},{"name":"开源社区贡献","_id":"cliesczsa000kdcfy5uph6q0n"},{"name":"工具","_id":"cliesczsa000ndcfy0b7bb2ue"},{"name":"JavaScript","parent":"cliesczs8000edcfygwgv4ch3","_id":"cliesczsb000sdcfy7rjia872"}],"Data":[],"Page":[{"title":"关于我","date":"2023-05-13T13:03:41.000Z","type":"about","_content":"\n# 飞跃疯人院\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-05-13 21:03:41\ntype: \"about\"\n---\n\n# 飞跃疯人院\n\n","updated":"2023-05-14T12:33:18.362Z","path":"about/index.html","comments":1,"layout":"page","_id":"cliesczru0000dcfy0cjg99y9","content":"<h1 id=\"飞跃疯人院\"><a href=\"#飞跃疯人院\" class=\"headerlink\" title=\"飞跃疯人院\"></a>飞跃疯人院</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"飞跃疯人院\"><a href=\"#飞跃疯人院\" class=\"headerlink\" title=\"飞跃疯人院\"></a>飞跃疯人院</h1>"},{"title":"分类","date":"2023-05-13T13:03:22.000Z","type":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-05-13 21:03:22\ntype: \"categories\"\n---\n\n","updated":"2023-05-13T13:07:14.564Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cliesczrz0002dcfy2sev6gq7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"友情链接","date":"2023-05-13T13:03:32.000Z","type":"link","_content":"\n## Placebo' s blog\n\n 交换友链可在下方评论，或者QQ联系我\n\n![Placebo](https://placebo27.github.io/images/placebo.jpg)\n\n### [Placebo](https://placebo27.github.io/)\n\n#### 个人简介： 🍣 飞跃疯人院💤\n\n---------------------------------------------------------------------------------------------------------------------------\n\n # 友人帐\n\n- ## [Plucky](https://plucky923.github.io/)\n\n![Plucky](images/index/R-C.jpg)\n\n- ### 简介：饥饿艺术家\n\n-----------------------------------------------------------------------------------------------------------------------------\n\n- ## [Solar1s](https://solar1s.t0nkov.site/)\n\n![Solar1s](images/index/android-chrome-384x384.png)\n\n- ### 简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.\n\n","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2023-05-13 21:03:32\ntype: \"link\"\n---\n\n## Placebo' s blog\n\n 交换友链可在下方评论，或者QQ联系我\n\n![Placebo](https://placebo27.github.io/images/placebo.jpg)\n\n### [Placebo](https://placebo27.github.io/)\n\n#### 个人简介： 🍣 飞跃疯人院💤\n\n---------------------------------------------------------------------------------------------------------------------------\n\n # 友人帐\n\n- ## [Plucky](https://plucky923.github.io/)\n\n![Plucky](images/index/R-C.jpg)\n\n- ### 简介：饥饿艺术家\n\n-----------------------------------------------------------------------------------------------------------------------------\n\n- ## [Solar1s](https://solar1s.t0nkov.site/)\n\n![Solar1s](images/index/android-chrome-384x384.png)\n\n- ### 简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.\n\n","updated":"2023-05-14T13:00:51.127Z","path":"link/index.html","comments":1,"layout":"page","_id":"cliesczs30006dcfy3s6212rp","content":"<h2 id=\"Placebo’-s-blog\"><a href=\"#Placebo’-s-blog\" class=\"headerlink\" title=\"Placebo’ s blog\"></a>Placebo’ s blog</h2><p> 交换友链可在下方评论，或者QQ联系我</p>\n<p><img src=\"https://placebo27.github.io/images/placebo.jpg\" alt=\"Placebo\"></p>\n<h3 id=\"Placebo\"><a href=\"#Placebo\" class=\"headerlink\" title=\"Placebo\"></a><a href=\"https://placebo27.github.io/\">Placebo</a></h3><h4 id=\"个人简介：-🍣-飞跃疯人院💤\"><a href=\"#个人简介：-🍣-飞跃疯人院💤\" class=\"headerlink\" title=\"个人简介： 🍣 飞跃疯人院💤\"></a>个人简介： 🍣 飞跃疯人院💤</h4><hr>\n<h1 id=\"友人帐\"><a href=\"#友人帐\" class=\"headerlink\" title=\"友人帐\"></a>友人帐</h1><ul>\n<li><h2 id=\"Plucky\"><a href=\"#Plucky\" class=\"headerlink\" title=\"Plucky\"></a><a href=\"https://plucky923.github.io/\">Plucky</a></h2></li>\n</ul>\n<p><img src=\"images/index/R-C.jpg\" alt=\"Plucky\"></p>\n<ul>\n<li><h3 id=\"简介：饥饿艺术家\"><a href=\"#简介：饥饿艺术家\" class=\"headerlink\" title=\"简介：饥饿艺术家\"></a>简介：饥饿艺术家</h3></li>\n</ul>\n<hr>\n<ul>\n<li><h2 id=\"Solar1s\"><a href=\"#Solar1s\" class=\"headerlink\" title=\"Solar1s\"></a><a href=\"https://solar1s.t0nkov.site/\">Solar1s</a></h2></li>\n</ul>\n<p><img src=\"images/index/android-chrome-384x384.png\" alt=\"Solar1s\"></p>\n<ul>\n<li><h3 id=\"简介：A-postgraduate-student-of-School-of-Cyber-Science-and-Engineering-SouthEast-University-in-Nanjing\"><a href=\"#简介：A-postgraduate-student-of-School-of-Cyber-Science-and-Engineering-SouthEast-University-in-Nanjing\" class=\"headerlink\" title=\"简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.\"></a>简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.</h3></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Placebo’-s-blog\"><a href=\"#Placebo’-s-blog\" class=\"headerlink\" title=\"Placebo’ s blog\"></a>Placebo’ s blog</h2><p> 交换友链可在下方评论，或者QQ联系我</p>\n<p><img src=\"https://placebo27.github.io/images/placebo.jpg\" alt=\"Placebo\"></p>\n<h3 id=\"Placebo\"><a href=\"#Placebo\" class=\"headerlink\" title=\"Placebo\"></a><a href=\"https://placebo27.github.io/\">Placebo</a></h3><h4 id=\"个人简介：-🍣-飞跃疯人院💤\"><a href=\"#个人简介：-🍣-飞跃疯人院💤\" class=\"headerlink\" title=\"个人简介： 🍣 飞跃疯人院💤\"></a>个人简介： 🍣 飞跃疯人院💤</h4><hr>\n<h1 id=\"友人帐\"><a href=\"#友人帐\" class=\"headerlink\" title=\"友人帐\"></a>友人帐</h1><ul>\n<li><h2 id=\"Plucky\"><a href=\"#Plucky\" class=\"headerlink\" title=\"Plucky\"></a><a href=\"https://plucky923.github.io/\">Plucky</a></h2></li>\n</ul>\n<p><img src=\"images/index/R-C.jpg\" alt=\"Plucky\"></p>\n<ul>\n<li><h3 id=\"简介：饥饿艺术家\"><a href=\"#简介：饥饿艺术家\" class=\"headerlink\" title=\"简介：饥饿艺术家\"></a>简介：饥饿艺术家</h3></li>\n</ul>\n<hr>\n<ul>\n<li><h2 id=\"Solar1s\"><a href=\"#Solar1s\" class=\"headerlink\" title=\"Solar1s\"></a><a href=\"https://solar1s.t0nkov.site/\">Solar1s</a></h2></li>\n</ul>\n<p><img src=\"images/index/android-chrome-384x384.png\" alt=\"Solar1s\"></p>\n<ul>\n<li><h3 id=\"简介：A-postgraduate-student-of-School-of-Cyber-Science-and-Engineering-SouthEast-University-in-Nanjing\"><a href=\"#简介：A-postgraduate-student-of-School-of-Cyber-Science-and-Engineering-SouthEast-University-in-Nanjing\" class=\"headerlink\" title=\"简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.\"></a>简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.</h3></li>\n</ul>\n"},{"title":"标签","date":"2023-05-13T13:03:07.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2023-05-13 21:03:07\ntype: \"tags\"\n---\n\n","updated":"2023-05-13T13:05:10.999Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cliesczs40008dcfycvd74wv9","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo&Github个人博客配置撰写到美化","typora-root-url":"../","date":"2023-06-02T15:29:35.000Z","_content":"\n# Hexo&Github个人博客配置撰写到美化\n\n## 配置博客\n\n- `hexo cl` 是 `hexo clean`的简写。意思是清除本地的缓存，实际上就是把博客文件夹下的`public`文件夹删除掉了。这个`public`是基于本地的文件生成的、用于上传到仓库或者其他网站服务器上的文件夹，可以理解为本地文件上网的中转站、交通工具，删掉了也不影响本地的内容。\n- `hexo g` 是`hexo generate`的简写，意思是生成public文件夹。\n- `hexo d`是`hexo deploy`的简写，意思是将生成的public文件夹部署到网上，我们这里是部署到github上面。为了顺利部署，我们前面也提到过，要在站点文件夹下`_config.yml`文件中修改一些内容，如下：\n\n### 博客文件夹\n\n我们打开自己的博客根目录，了解一下里面的这些文件（夹）都是干什么的：\n\n![1680958520314](/images/配置博客/1680958520314.png)\n\n- `_config.yml`：俗称**站点配置文件**，很多与博客网站的格式、内容相关的设置都需要在里面改。\n- `node_modules`:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。\n- `package.json`：别问我，我也不知道干嘛的。\n- `scaffolds`：模板文件夹，里面的`post.md`文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。\n- `source`：非常重要。所有的个人文件都在里面！\n- `themes`：主题文件夹，可以从[Hexo主题官网](https://hexo.io/themes/)或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！\n\n接下来重点介绍`source`文件夹。新建的博客中，`source`文件夹下默认只有一个子文件夹——`_posts`。我们写的博客都放在这个子文件夹里面。我们还可以在`source`里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。\n\n![1680958715749](/images/配置博客/1680958715749.png)\n\n### 新建博客文件\n\n博客文件格式为`.md`（Markdown格式文件，建议使用[Typora软件](https://www.typora.io/)进行编辑）。**注意**：不要新建`.md`文件，一定要用代码建立新的博客 ：\n\n```\nhexo new \"新建文件名\"\n或者hexo n \"文件名\"\n```\n\n写好内容后，在命令行进行hexo三部曲：\n\n> 'hexo cl'命令用于清除缓存文件（db.json）和已生成的静态文件（public）。例如：在更换主题后，如果发现站点更改不生效，可以运行该命令。\n\n```cobol\nhexo cl\n```\n\n```\nhexo g\n```\n\n```cobol\nhexo s\n```\n\n然后随便打开一个浏览器，在网址栏输入`localhost:4000/`，就能发现自己的网站更新了！不过这只是在本地进行了更新，要想部署到网上（Github上），输入如下代码：\n\n```\nhexo d\n```\n\n然后在浏览器地址栏输入`https://yourname.github.io`，或者`yourname.github.io`就能在网上浏览自己的博客了！\n\n> 注意：本地调试其实并不用每次都要hexo三部曲，只需要`hexo s`，就可以用`localhost:4000`来查看修改效果，可以节省大量时间 \n\n以上，我们的博客网站1.0版本就搭建完成了，如果没有更多的需求，做到这里基本上就可以了。如果有更多的要求，还需要进一步的精耕细作！\n\n### 修改博客信息\n\n首先打开`_config.yml`**站点配置文件**，找到**Site**注释的地方，这里是博客的基本信息。\n\n![1680963693171](/images/配置博客/1680963693171.png)\n\n这些都按照个人需要修改，下面是所有配置的释义：\n\ntitle: # 标题\nsubtitle: # 副标题\ndescription: # 站点描述（可以写简介或格言）\nkeywords: # 搜索关键词\nauthor: # 作者\nlanguage: zh-CN # 语言（这里按你的主题themes中languages文件夹下的文件名填写）\ntimezone: Asia/Shanghai # 时区（中国时区）\n\n### 更改主题\n\n这个388主题，说实话太难看了，因此要去找一个好看的主题，Hexo官方专门提供了一个主题库，可以找到非常多的Hexo主题，并下载更换。\n\n个人觉得**NexT**主题挺好看的，主要是简约，所以我就拿NexT主题为例更换吧。\n\n首先，打开[主题库](https://hexo.io/themes/),搜索NexT， 点击主题的名字，就可以跳转到主题的下载页面 \n\n![1680964031232](/images/配置博客/1680964031232.png)\n\n 往下滑找到**安装**标签，这包含了主题的下载安装方法。 \n\n![1680965510560](/images/配置博客/1680965510560.png)\n\n 这里我们选择较快的npm下载。首先，切换到博客的根目录，也就是Blog文件夹中，输入`npm install hexo-theme-next`就可以安装NexT主题了，npm安装的NexT主题的目录在**node_modules**文件夹下的**hexo-theme-next**文件夹中，里面包含了NexT的配置文件。 \n\n![1680964267170](/images/配置博客/1680964267170.png)\n\n![1680964767983](/images/配置博客/1680964767983.png)\n\n也可以使用git，通过git命令进行下载（克隆）\n\n```\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n![1680965881830](/images/配置博客/1680965881830.png)\n\n如果不会使用git命令，就在github上进行下载\n\n![1680964436969](/images/配置博客/1680964436969.png)\n\n 把这个文件下载到本地之后，修改配置文件。首先找到自己博客文件夹的地址，将下载的文件夹放到 \n\n`.\\Blog\\themes`目录下，然后返回上级目录。\n\n最后，要记得修改`_config.yml`配置文件 中的theme主题\n\n![1680964912309](/images/配置博客/1680964912309.png)\n\n## NEXT主题优化\n\n对于next的主题优化可以说是耗时耗力的，建议以个人需求为主，无需将所有内容添加进个人博客，这部分建议结合个人需求适当挑选其中内容进行配置。\n\n### 更改NEXT主题\n\nnext主题有四种：Muse、Mist、Pisces、Gemini，如下图所示\n\nMuse：![1683950862678](/images/配置博客/1683950862678.png)\n\nMist：![1683951027038](/images/配置博客/1683951027038.png)\n\nPisces：![1683951112541](/images/配置博客/1683951112541.png)\n\nGemini：![1683951226689](/images/配置博客/1683951226689.png)\n\n- Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白\n- Mist - Muse 的紧凑版本，整洁有序的单栏外观\n- Pisces - 双栏 Scheme，小家碧玉似的清新\n- Gemini - 左侧网站信息及目录，块+片段结构布局\n\n打开博客目录Blog/themes/next/下的_config.yml（**主题配置文件**），只要将你所选主题前的注释`#`剪切到当前主题就行了：\n\n```text\n# Schemes\nscheme: Muse\t    #这是默认主题\n#scheme: Mist\n#scheme: Pisces\n#scheme: Gemini\n```\n\n接下来同更新博客操作，打开git bash在命令行一键三连：\n\n```\nhexo cl && hexo g && hexo s\n```\n\n然后打开浏览器，在网址栏输入`localhost:4000/`，就能发现自己的网站更新了！![1680965379223](/images/配置博客/1680965379223.png)\n\n若要部署到Github上：\n\n```bash\nhexo d\n```\n\n### 设置博客icon\n\n图标素材：[iconfont-阿里巴巴矢量图标库](https://www.iconfont.cn/) \n\n选择合适的icon，分别下载16，32，180大小png格式及400大小svg格式的图标，放置在 `/themes/next/source/imges/` 文件夹中。\n\n修改**主题配置文件**中 `favicon` 中的内容，依次替换`small`，`medium`，`apple_touch_icon`，`safari_pinned_tab`字段的图片名；如果是直接替换原来的图标文件则不需要修改。\n\n### 设置导航菜单\n\n#### 导航菜单展示\n\n第一种方法比较麻烦，打开**主题配置文件**，修改 `menu` 中的内容，编辑想要展示的内容，可参考下方示例：\n\n```yaml\nmenu:\n  home: / || fa fa-home                      #首页\n  tags: /tags/ || fa fa-tags                 #标签\n  categories: /categories/ || fa fa-th       #分类\n  archives: /archives/ || fa fa-archive      #归档\n  #schedule: /schedule/ || fa fa-calendar    #日历\n  #sitemap: /sitemap.xml || fa fa-sitemap    #站点地图，供搜索引擎爬取\n  #commonweal: /404/ || fa fa-heartbeat      #腾讯公益404\n  # List||fas fa-list:\n  #   Music: /music/ || fas fa-music\n  #   Movie: /movies/ || fas fa-video\n  link: /link/ || fas fa-link                #友情链接\n  about: /about/ || fa fa-user\t\t\t    #关于\n\n# Enable / Disable menu icons / item badges.    \nmenu_settings:\n  icons: true       # 是否显示各个页面的图标\n  badges: true      # 是否显示分类/标签/归档页的内容量\n```\n\n“||”前面的是目标链接，后面的是图标名称，next使用的图标全是[图标库 - Font Awesome 中文网](https://link.zhihu.com/?target=http%3A//www.fontawesome.com.cn/faicons/%23web-application)这一网站的，有想用的图标直接在该网站上面找图标的名称就行。\n\n新添加的菜单需要翻译对应的中文，打开`theme/next/languages/zh-CN.yml`，在`menu`下设置：\n\n```yml\nmenu:\n  home: 首页\n  archives: 归档\n  categories: 分类\n  tags: 标签\n  about: 关于我\n  search: 搜索\n  schedule: 日程表\n  sitemap: 站点地图\n  commonweal: 公益 404\n  link: 友人帐\n```\n\n第二种方法可以直接在第一步中的**主题配置文件**一步到位（但是以后更改language时菜单内容依然会是如下中文）：\n\n```yml\nmenu:\n  首页: / || fa fa-home\n  标签: /tags/ || fa fa-tags\n  分类: /categories/ || fa fa-th\n  归档: /archives/ || fa fa-archive\n  #schedule: /schedule/ || fa fa-calendar\n  #sitemap: /sitemap.xml || fa fa-sitemap\n  #commonweal: /404/ || fa fa-heartbeat\n  # List||fas fa-list:\n  #   Music: /music/ || fas fa-music\n  #   Movie: /movies/ || fas fa-video\n  友人帐: /link/ || fas fa-link\n  关于我: /about/ || fa fa-user\n  \n# Enable / Disable menu icons / item badges.    \nmenu_settings:\n  icons: true       # 是否显示各个页面的图标\n  badges: true      # 是否显示分类/标签/归档页的内容量\n```\n\n#### 生成菜单栏关键页面\n\n进入 Hexo 博客的根目录，右键`Bash`：\n\n##### 标签页\n\n```bash\nhexo new page tags\n```\n\n打开 `source/tags/index.md` 文件，修改如下：\n\n```markdown\n---\ntitle: 标签\ndate: 2023-05-13 21:03:07\ntype: \"tags\"\n---\n```\n\n**给文章添加\"tags\"属性**\n\n打开需要添加标签的文章，为其添加`tags`属性。下方的`tags: - Hexo - Github`\n就是这篇文章的多个标签。\n\n```\n---\ntitle: Hexo&Github搭建个人博客\ndate: 2023-05-12 20:46:38\ntags: \n- Hexo\n- Github\n---\n```\n\n至此，成功给文章添加标签，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了`tags: xxx`的文章才会被收录到首页的“标签”中。\n\n##### 分类页\n\n```bash\nhexo new page categories\n```\n\n打开 `source/categories/index.md 文件`，修改如下： \n\n```\n---\ntitle: 分类\ndate: 2023-05-13 21:03:22\ntype: \"categories\"\n---\n```\n\n**给文章添加分类\"categories\"属性**\n\n打开需要添加分类的文章，为其添加`categories`属性。下方的`categories: - Blog`表示添加这篇文章到“Blog”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- Blog”下方添加了“- xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- Blog”下的 “- xxx”分类）。\n\n```\n---\ntitle: Hexo&Github搭建个人博客\ndate: 2023-05-12 20:46:38\ntags: \n- Hexo\n- Github\ncategories: \n- Blog\n---\n```\n\n至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了`categories: xxx`的文章才会被收录到首页的“分类”中。\n\n打开博客目录下的`scaffolds/post.md`文件，在`tages:`下面加入`categories:`，保存，以后执行`hexo new \"文章名\"`命令生成的文件页面里就有`categories:`项了。\n\nscaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。\n\n##### 友情链接\n\n```\nhexo new page link\n```\n\n打开 `source/link/index.md` 文件，修改如下： \n\n```\n---\ntitle: 友情链接\ndate: 2023-05-13 21:03:32\ntype: \"link\"\n---\n```\n\n**添加友情链接**\n\n在上述`index.md`文件内容下方，根据个人喜好填写其中内容：\n\n```yml\n # 友人帐\n\n- ## [Plucky](https://plucky923.github.io/)\n\n![Plucky](images/index/R-C.jpg)\n\n- ### 简介：饥饿艺术家\n\n-----------------------------------------------------------------------------------------------------------------------------\n\n- ## [Solar1s](https://solar1s.t0nkov.site/)\n\n![Solar1s](images/index/android-chrome-384x384.png)\n\n- ### 简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.\n```\n\n##### 关于我\n\n```\nhexo new page about\n```\n\n打开 `source/about-me/index.md` 文件，修改如下：\n\n```\n---\ntitle: 关于我\ndate: 2023-05-13 21:03:41\ntype: \"about\"\n---\n# 下方填写一些个人公开信息\n```\n\n>  注意：如果有启用评论，默认页面带有评论。需要关闭的话，添加字段`comments`并将值设置为false。 \n\n### 设置阅读原文按钮\n\nNexT主题下的首页默认是显示每一篇文章的全文的，如果文章很长就要往下拉很远才能看到下一篇文章，而我们要设置成每一篇文章只预览前5行，然后底部显示一个阅读原文的按钮，点击可以进入阅读全文。\n\n首先安装插件，打开站点根目录，右键Bash：\n\n```\nnpm install hexo-excerpt --save\n```\n\n打开**站点配置文件**`_config.yml`添加：\n\n```\nexcerpt:\t\t\t# 一定要顶格写，注意格式\n  depth: 5\t\t\t# 他的大小就是全文阅读预览长度设置\n  excerpt_excludes: []\n  more_excludes: []\n  hideWholePostExcerpts: true\n```\n\n打开NexT主题的**主题配置文件**，即站点根目录`\\themes\\next\\_config.yml`，搜索`excerpt_description`，然后改为true：\n\n```\n# Use `description` in front-matter to specify post excerpt.\nexcerpt_description: true\n```\n\n### 设置已读进度条\n\n修改**主题配置文件**，将`reading_progress` 的`enable`设置为`true`即可，位置颜色和高度都可以自行调整。\n\n### 边角的 GitHub banner\n\n在**主题配置文件**中修改 `github_banner` 字段：\n\n```\ngithub_banner:\n  enable: true\n  permalink: https://github.com/你的用户名\n```\n\n### 设置头像\n\n编辑**主题配置文件**，修改字段`avatar`，头像图片放在 `/themes/source/images/` 中，其中可以设置头像的地址 ，头像的形状，以及旋转动画：\n\n```\navatar:\n  url: #/images/avatar.jpeg   #图片的位置，也可以是http://xxx.com/avatar.png\n  rounded: true               #头像框为圆形\n  rotated: true\t\t\t\t #头像随光标旋转\n```\n\n\n\n## github备份本地文件\n\n### 本地博客站点备份\n\n因为站点实际上是部署在本地的，现在在 GitHub 上只有一些静态文件，一旦本地文件丢失或者损坏，就要重新搭建网站，甚至文章也会丢失，为了在这种情况发生的情况下能够快速恢复本地站点，可以在 GitHub 上新建分支，用于备份本地站点文件。\n\n> **注：**该部分根据个人需要自行选择。除用作备份，还可解决多个PC设备间站点同步问题，如实现办公和个人电脑间站点的同步。\n\n之前我们的本地站点文件夹为 `Blog` ，在其他合适的位置新建文件夹 `Hexo`，将GitHub远程仓库复制到本地，右键启用`Git Bash Here`：\n\n```bash\ngit clone 你的仓库地址 Hexo \n```\n\n删除除了版本控制 `.git` 之外的所有文件\n\n```bash\ncd Hexo && rm -r *\n```\n\n将 `Blog` 文件夹下的所有文件复制到 `Hexo` 文件夹\n\n如果使用的主题是从Github克隆的，那么手动或者使用命令删除它的Git文件（以next主题为例），否则无法将主题文件`push`\n\n```bash\nrm -r themes/next/.git\n```\n\n### github配置\n\n创建新分支 `hexo`\n\n```bash\ngit checkout -b hexo\n```\n\n推送到`hexo`分支\n\n```bash\ngit add . # 保存到暂存区\ngit commit -m \"Hexo branch\" # 提交信息为hexo分支\ngit push --set-upstream origin hexo # 设置为上游分支\n```\n\n那么到此原来的 `Blog` 文件夹就可以删除了，当然也可以作为本地备份。\n\n### 博客站点及备份更新\n\n#### 博客站点更新\n\n更新到 `master/main` 分支\n\n```bash\nhexo g -d # 生成并部署失败则反复hexo d即可\n```\n\n#### 博客备份更新\n\n备份到 `hexo` 分支，更新远程仓库的本地备份\n\n```bash\ngit add . \ngit commit -m \"提交信息\" \ngit push\n```\n\n","source":"_posts/Hexo&Github个人博客配置撰写到美化.md","raw":"---\ntitle: Hexo&Github个人博客配置撰写到美化\ntags: \n- Hexo\n- Github\ncategories: \n- Blog\ntypora-root-url: ../\ndate: 2023-06-02 23:29:35\n---\n\n# Hexo&Github个人博客配置撰写到美化\n\n## 配置博客\n\n- `hexo cl` 是 `hexo clean`的简写。意思是清除本地的缓存，实际上就是把博客文件夹下的`public`文件夹删除掉了。这个`public`是基于本地的文件生成的、用于上传到仓库或者其他网站服务器上的文件夹，可以理解为本地文件上网的中转站、交通工具，删掉了也不影响本地的内容。\n- `hexo g` 是`hexo generate`的简写，意思是生成public文件夹。\n- `hexo d`是`hexo deploy`的简写，意思是将生成的public文件夹部署到网上，我们这里是部署到github上面。为了顺利部署，我们前面也提到过，要在站点文件夹下`_config.yml`文件中修改一些内容，如下：\n\n### 博客文件夹\n\n我们打开自己的博客根目录，了解一下里面的这些文件（夹）都是干什么的：\n\n![1680958520314](/images/配置博客/1680958520314.png)\n\n- `_config.yml`：俗称**站点配置文件**，很多与博客网站的格式、内容相关的设置都需要在里面改。\n- `node_modules`:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。\n- `package.json`：别问我，我也不知道干嘛的。\n- `scaffolds`：模板文件夹，里面的`post.md`文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。\n- `source`：非常重要。所有的个人文件都在里面！\n- `themes`：主题文件夹，可以从[Hexo主题官网](https://hexo.io/themes/)或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！\n\n接下来重点介绍`source`文件夹。新建的博客中，`source`文件夹下默认只有一个子文件夹——`_posts`。我们写的博客都放在这个子文件夹里面。我们还可以在`source`里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。\n\n![1680958715749](/images/配置博客/1680958715749.png)\n\n### 新建博客文件\n\n博客文件格式为`.md`（Markdown格式文件，建议使用[Typora软件](https://www.typora.io/)进行编辑）。**注意**：不要新建`.md`文件，一定要用代码建立新的博客 ：\n\n```\nhexo new \"新建文件名\"\n或者hexo n \"文件名\"\n```\n\n写好内容后，在命令行进行hexo三部曲：\n\n> 'hexo cl'命令用于清除缓存文件（db.json）和已生成的静态文件（public）。例如：在更换主题后，如果发现站点更改不生效，可以运行该命令。\n\n```cobol\nhexo cl\n```\n\n```\nhexo g\n```\n\n```cobol\nhexo s\n```\n\n然后随便打开一个浏览器，在网址栏输入`localhost:4000/`，就能发现自己的网站更新了！不过这只是在本地进行了更新，要想部署到网上（Github上），输入如下代码：\n\n```\nhexo d\n```\n\n然后在浏览器地址栏输入`https://yourname.github.io`，或者`yourname.github.io`就能在网上浏览自己的博客了！\n\n> 注意：本地调试其实并不用每次都要hexo三部曲，只需要`hexo s`，就可以用`localhost:4000`来查看修改效果，可以节省大量时间 \n\n以上，我们的博客网站1.0版本就搭建完成了，如果没有更多的需求，做到这里基本上就可以了。如果有更多的要求，还需要进一步的精耕细作！\n\n### 修改博客信息\n\n首先打开`_config.yml`**站点配置文件**，找到**Site**注释的地方，这里是博客的基本信息。\n\n![1680963693171](/images/配置博客/1680963693171.png)\n\n这些都按照个人需要修改，下面是所有配置的释义：\n\ntitle: # 标题\nsubtitle: # 副标题\ndescription: # 站点描述（可以写简介或格言）\nkeywords: # 搜索关键词\nauthor: # 作者\nlanguage: zh-CN # 语言（这里按你的主题themes中languages文件夹下的文件名填写）\ntimezone: Asia/Shanghai # 时区（中国时区）\n\n### 更改主题\n\n这个388主题，说实话太难看了，因此要去找一个好看的主题，Hexo官方专门提供了一个主题库，可以找到非常多的Hexo主题，并下载更换。\n\n个人觉得**NexT**主题挺好看的，主要是简约，所以我就拿NexT主题为例更换吧。\n\n首先，打开[主题库](https://hexo.io/themes/),搜索NexT， 点击主题的名字，就可以跳转到主题的下载页面 \n\n![1680964031232](/images/配置博客/1680964031232.png)\n\n 往下滑找到**安装**标签，这包含了主题的下载安装方法。 \n\n![1680965510560](/images/配置博客/1680965510560.png)\n\n 这里我们选择较快的npm下载。首先，切换到博客的根目录，也就是Blog文件夹中，输入`npm install hexo-theme-next`就可以安装NexT主题了，npm安装的NexT主题的目录在**node_modules**文件夹下的**hexo-theme-next**文件夹中，里面包含了NexT的配置文件。 \n\n![1680964267170](/images/配置博客/1680964267170.png)\n\n![1680964767983](/images/配置博客/1680964767983.png)\n\n也可以使用git，通过git命令进行下载（克隆）\n\n```\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n![1680965881830](/images/配置博客/1680965881830.png)\n\n如果不会使用git命令，就在github上进行下载\n\n![1680964436969](/images/配置博客/1680964436969.png)\n\n 把这个文件下载到本地之后，修改配置文件。首先找到自己博客文件夹的地址，将下载的文件夹放到 \n\n`.\\Blog\\themes`目录下，然后返回上级目录。\n\n最后，要记得修改`_config.yml`配置文件 中的theme主题\n\n![1680964912309](/images/配置博客/1680964912309.png)\n\n## NEXT主题优化\n\n对于next的主题优化可以说是耗时耗力的，建议以个人需求为主，无需将所有内容添加进个人博客，这部分建议结合个人需求适当挑选其中内容进行配置。\n\n### 更改NEXT主题\n\nnext主题有四种：Muse、Mist、Pisces、Gemini，如下图所示\n\nMuse：![1683950862678](/images/配置博客/1683950862678.png)\n\nMist：![1683951027038](/images/配置博客/1683951027038.png)\n\nPisces：![1683951112541](/images/配置博客/1683951112541.png)\n\nGemini：![1683951226689](/images/配置博客/1683951226689.png)\n\n- Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白\n- Mist - Muse 的紧凑版本，整洁有序的单栏外观\n- Pisces - 双栏 Scheme，小家碧玉似的清新\n- Gemini - 左侧网站信息及目录，块+片段结构布局\n\n打开博客目录Blog/themes/next/下的_config.yml（**主题配置文件**），只要将你所选主题前的注释`#`剪切到当前主题就行了：\n\n```text\n# Schemes\nscheme: Muse\t    #这是默认主题\n#scheme: Mist\n#scheme: Pisces\n#scheme: Gemini\n```\n\n接下来同更新博客操作，打开git bash在命令行一键三连：\n\n```\nhexo cl && hexo g && hexo s\n```\n\n然后打开浏览器，在网址栏输入`localhost:4000/`，就能发现自己的网站更新了！![1680965379223](/images/配置博客/1680965379223.png)\n\n若要部署到Github上：\n\n```bash\nhexo d\n```\n\n### 设置博客icon\n\n图标素材：[iconfont-阿里巴巴矢量图标库](https://www.iconfont.cn/) \n\n选择合适的icon，分别下载16，32，180大小png格式及400大小svg格式的图标，放置在 `/themes/next/source/imges/` 文件夹中。\n\n修改**主题配置文件**中 `favicon` 中的内容，依次替换`small`，`medium`，`apple_touch_icon`，`safari_pinned_tab`字段的图片名；如果是直接替换原来的图标文件则不需要修改。\n\n### 设置导航菜单\n\n#### 导航菜单展示\n\n第一种方法比较麻烦，打开**主题配置文件**，修改 `menu` 中的内容，编辑想要展示的内容，可参考下方示例：\n\n```yaml\nmenu:\n  home: / || fa fa-home                      #首页\n  tags: /tags/ || fa fa-tags                 #标签\n  categories: /categories/ || fa fa-th       #分类\n  archives: /archives/ || fa fa-archive      #归档\n  #schedule: /schedule/ || fa fa-calendar    #日历\n  #sitemap: /sitemap.xml || fa fa-sitemap    #站点地图，供搜索引擎爬取\n  #commonweal: /404/ || fa fa-heartbeat      #腾讯公益404\n  # List||fas fa-list:\n  #   Music: /music/ || fas fa-music\n  #   Movie: /movies/ || fas fa-video\n  link: /link/ || fas fa-link                #友情链接\n  about: /about/ || fa fa-user\t\t\t    #关于\n\n# Enable / Disable menu icons / item badges.    \nmenu_settings:\n  icons: true       # 是否显示各个页面的图标\n  badges: true      # 是否显示分类/标签/归档页的内容量\n```\n\n“||”前面的是目标链接，后面的是图标名称，next使用的图标全是[图标库 - Font Awesome 中文网](https://link.zhihu.com/?target=http%3A//www.fontawesome.com.cn/faicons/%23web-application)这一网站的，有想用的图标直接在该网站上面找图标的名称就行。\n\n新添加的菜单需要翻译对应的中文，打开`theme/next/languages/zh-CN.yml`，在`menu`下设置：\n\n```yml\nmenu:\n  home: 首页\n  archives: 归档\n  categories: 分类\n  tags: 标签\n  about: 关于我\n  search: 搜索\n  schedule: 日程表\n  sitemap: 站点地图\n  commonweal: 公益 404\n  link: 友人帐\n```\n\n第二种方法可以直接在第一步中的**主题配置文件**一步到位（但是以后更改language时菜单内容依然会是如下中文）：\n\n```yml\nmenu:\n  首页: / || fa fa-home\n  标签: /tags/ || fa fa-tags\n  分类: /categories/ || fa fa-th\n  归档: /archives/ || fa fa-archive\n  #schedule: /schedule/ || fa fa-calendar\n  #sitemap: /sitemap.xml || fa fa-sitemap\n  #commonweal: /404/ || fa fa-heartbeat\n  # List||fas fa-list:\n  #   Music: /music/ || fas fa-music\n  #   Movie: /movies/ || fas fa-video\n  友人帐: /link/ || fas fa-link\n  关于我: /about/ || fa fa-user\n  \n# Enable / Disable menu icons / item badges.    \nmenu_settings:\n  icons: true       # 是否显示各个页面的图标\n  badges: true      # 是否显示分类/标签/归档页的内容量\n```\n\n#### 生成菜单栏关键页面\n\n进入 Hexo 博客的根目录，右键`Bash`：\n\n##### 标签页\n\n```bash\nhexo new page tags\n```\n\n打开 `source/tags/index.md` 文件，修改如下：\n\n```markdown\n---\ntitle: 标签\ndate: 2023-05-13 21:03:07\ntype: \"tags\"\n---\n```\n\n**给文章添加\"tags\"属性**\n\n打开需要添加标签的文章，为其添加`tags`属性。下方的`tags: - Hexo - Github`\n就是这篇文章的多个标签。\n\n```\n---\ntitle: Hexo&Github搭建个人博客\ndate: 2023-05-12 20:46:38\ntags: \n- Hexo\n- Github\n---\n```\n\n至此，成功给文章添加标签，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了`tags: xxx`的文章才会被收录到首页的“标签”中。\n\n##### 分类页\n\n```bash\nhexo new page categories\n```\n\n打开 `source/categories/index.md 文件`，修改如下： \n\n```\n---\ntitle: 分类\ndate: 2023-05-13 21:03:22\ntype: \"categories\"\n---\n```\n\n**给文章添加分类\"categories\"属性**\n\n打开需要添加分类的文章，为其添加`categories`属性。下方的`categories: - Blog`表示添加这篇文章到“Blog”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- Blog”下方添加了“- xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- Blog”下的 “- xxx”分类）。\n\n```\n---\ntitle: Hexo&Github搭建个人博客\ndate: 2023-05-12 20:46:38\ntags: \n- Hexo\n- Github\ncategories: \n- Blog\n---\n```\n\n至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了`categories: xxx`的文章才会被收录到首页的“分类”中。\n\n打开博客目录下的`scaffolds/post.md`文件，在`tages:`下面加入`categories:`，保存，以后执行`hexo new \"文章名\"`命令生成的文件页面里就有`categories:`项了。\n\nscaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。\n\n##### 友情链接\n\n```\nhexo new page link\n```\n\n打开 `source/link/index.md` 文件，修改如下： \n\n```\n---\ntitle: 友情链接\ndate: 2023-05-13 21:03:32\ntype: \"link\"\n---\n```\n\n**添加友情链接**\n\n在上述`index.md`文件内容下方，根据个人喜好填写其中内容：\n\n```yml\n # 友人帐\n\n- ## [Plucky](https://plucky923.github.io/)\n\n![Plucky](images/index/R-C.jpg)\n\n- ### 简介：饥饿艺术家\n\n-----------------------------------------------------------------------------------------------------------------------------\n\n- ## [Solar1s](https://solar1s.t0nkov.site/)\n\n![Solar1s](images/index/android-chrome-384x384.png)\n\n- ### 简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.\n```\n\n##### 关于我\n\n```\nhexo new page about\n```\n\n打开 `source/about-me/index.md` 文件，修改如下：\n\n```\n---\ntitle: 关于我\ndate: 2023-05-13 21:03:41\ntype: \"about\"\n---\n# 下方填写一些个人公开信息\n```\n\n>  注意：如果有启用评论，默认页面带有评论。需要关闭的话，添加字段`comments`并将值设置为false。 \n\n### 设置阅读原文按钮\n\nNexT主题下的首页默认是显示每一篇文章的全文的，如果文章很长就要往下拉很远才能看到下一篇文章，而我们要设置成每一篇文章只预览前5行，然后底部显示一个阅读原文的按钮，点击可以进入阅读全文。\n\n首先安装插件，打开站点根目录，右键Bash：\n\n```\nnpm install hexo-excerpt --save\n```\n\n打开**站点配置文件**`_config.yml`添加：\n\n```\nexcerpt:\t\t\t# 一定要顶格写，注意格式\n  depth: 5\t\t\t# 他的大小就是全文阅读预览长度设置\n  excerpt_excludes: []\n  more_excludes: []\n  hideWholePostExcerpts: true\n```\n\n打开NexT主题的**主题配置文件**，即站点根目录`\\themes\\next\\_config.yml`，搜索`excerpt_description`，然后改为true：\n\n```\n# Use `description` in front-matter to specify post excerpt.\nexcerpt_description: true\n```\n\n### 设置已读进度条\n\n修改**主题配置文件**，将`reading_progress` 的`enable`设置为`true`即可，位置颜色和高度都可以自行调整。\n\n### 边角的 GitHub banner\n\n在**主题配置文件**中修改 `github_banner` 字段：\n\n```\ngithub_banner:\n  enable: true\n  permalink: https://github.com/你的用户名\n```\n\n### 设置头像\n\n编辑**主题配置文件**，修改字段`avatar`，头像图片放在 `/themes/source/images/` 中，其中可以设置头像的地址 ，头像的形状，以及旋转动画：\n\n```\navatar:\n  url: #/images/avatar.jpeg   #图片的位置，也可以是http://xxx.com/avatar.png\n  rounded: true               #头像框为圆形\n  rotated: true\t\t\t\t #头像随光标旋转\n```\n\n\n\n## github备份本地文件\n\n### 本地博客站点备份\n\n因为站点实际上是部署在本地的，现在在 GitHub 上只有一些静态文件，一旦本地文件丢失或者损坏，就要重新搭建网站，甚至文章也会丢失，为了在这种情况发生的情况下能够快速恢复本地站点，可以在 GitHub 上新建分支，用于备份本地站点文件。\n\n> **注：**该部分根据个人需要自行选择。除用作备份，还可解决多个PC设备间站点同步问题，如实现办公和个人电脑间站点的同步。\n\n之前我们的本地站点文件夹为 `Blog` ，在其他合适的位置新建文件夹 `Hexo`，将GitHub远程仓库复制到本地，右键启用`Git Bash Here`：\n\n```bash\ngit clone 你的仓库地址 Hexo \n```\n\n删除除了版本控制 `.git` 之外的所有文件\n\n```bash\ncd Hexo && rm -r *\n```\n\n将 `Blog` 文件夹下的所有文件复制到 `Hexo` 文件夹\n\n如果使用的主题是从Github克隆的，那么手动或者使用命令删除它的Git文件（以next主题为例），否则无法将主题文件`push`\n\n```bash\nrm -r themes/next/.git\n```\n\n### github配置\n\n创建新分支 `hexo`\n\n```bash\ngit checkout -b hexo\n```\n\n推送到`hexo`分支\n\n```bash\ngit add . # 保存到暂存区\ngit commit -m \"Hexo branch\" # 提交信息为hexo分支\ngit push --set-upstream origin hexo # 设置为上游分支\n```\n\n那么到此原来的 `Blog` 文件夹就可以删除了，当然也可以作为本地备份。\n\n### 博客站点及备份更新\n\n#### 博客站点更新\n\n更新到 `master/main` 分支\n\n```bash\nhexo g -d # 生成并部署失败则反复hexo d即可\n```\n\n#### 博客备份更新\n\n备份到 `hexo` 分支，更新远程仓库的本地备份\n\n```bash\ngit add . \ngit commit -m \"提交信息\" \ngit push\n```\n\n","slug":"Hexo&Github个人博客配置撰写到美化","published":1,"updated":"2023-06-02T15:32:52.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliesczrw0001dcfy8qbqeb2o","content":"<h1 id=\"Hexo-amp-Github个人博客配置撰写到美化\"><a href=\"#Hexo-amp-Github个人博客配置撰写到美化\" class=\"headerlink\" title=\"Hexo&amp;Github个人博客配置撰写到美化\"></a>Hexo&amp;Github个人博客配置撰写到美化</h1><h2 id=\"配置博客\"><a href=\"#配置博客\" class=\"headerlink\" title=\"配置博客\"></a>配置博客</h2><ul>\n<li><code>hexo cl</code> 是 <code>hexo clean</code>的简写。意思是清除本地的缓存，实际上就是把博客文件夹下的<code>public</code>文件夹删除掉了。这个<code>public</code>是基于本地的文件生成的、用于上传到仓库或者其他网站服务器上的文件夹，可以理解为本地文件上网的中转站、交通工具，删掉了也不影响本地的内容。</li>\n<li><code>hexo g</code> 是<code>hexo generate</code>的简写，意思是生成public文件夹。</li>\n<li><code>hexo d</code>是<code>hexo deploy</code>的简写，意思是将生成的public文件夹部署到网上，我们这里是部署到github上面。为了顺利部署，我们前面也提到过，要在站点文件夹下<code>_config.yml</code>文件中修改一些内容，如下：</li>\n</ul>\n<h3 id=\"博客文件夹\"><a href=\"#博客文件夹\" class=\"headerlink\" title=\"博客文件夹\"></a>博客文件夹</h3><p>我们打开自己的博客根目录，了解一下里面的这些文件（夹）都是干什么的：</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680958520314.png\" alt=\"1680958520314\"></p>\n<ul>\n<li><code>_config.yml</code>：俗称<strong>站点配置文件</strong>，很多与博客网站的格式、内容相关的设置都需要在里面改。</li>\n<li><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</li>\n<li><code>package.json</code>：别问我，我也不知道干嘛的。</li>\n<li><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</li>\n<li><code>source</code>：非常重要。所有的个人文件都在里面！</li>\n<li><code>themes</code>：主题文件夹，可以从<a href=\"https://hexo.io/themes/\">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</li>\n</ul>\n<p>接下来重点介绍<code>source</code>文件夹。新建的博客中，<code>source</code>文件夹下默认只有一个子文件夹——<code>_posts</code>。我们写的博客都放在这个子文件夹里面。我们还可以在<code>source</code>里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680958715749.png\" alt=\"1680958715749\"></p>\n<h3 id=\"新建博客文件\"><a href=\"#新建博客文件\" class=\"headerlink\" title=\"新建博客文件\"></a>新建博客文件</h3><p>博客文件格式为<code>.md</code>（Markdown格式文件，建议使用<a href=\"https://www.typora.io/\">Typora软件</a>进行编辑）。<strong>注意</strong>：不要新建<code>.md</code>文件，一定要用代码建立新的博客 ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;新建文件名&quot;</span><br><span class=\"line\">或者hexo n &quot;文件名&quot;</span><br></pre></td></tr></table></figure>\n\n<p>写好内容后，在命令行进行hexo三部曲：</p>\n<blockquote>\n<p>‘hexo cl’命令用于清除缓存文件（db.json）和已生成的静态文件（public）。例如：在更换主题后，如果发现站点更改不生效，可以运行该命令。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>然后随便打开一个浏览器，在网址栏输入<code>localhost:4000/</code>，就能发现自己的网站更新了！不过这只是在本地进行了更新，要想部署到网上（Github上），输入如下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>然后在浏览器地址栏输入<code>https://yourname.github.io</code>，或者<code>yourname.github.io</code>就能在网上浏览自己的博客了！</p>\n<blockquote>\n<p>注意：本地调试其实并不用每次都要hexo三部曲，只需要<code>hexo s</code>，就可以用<code>localhost:4000</code>来查看修改效果，可以节省大量时间 </p>\n</blockquote>\n<p>以上，我们的博客网站1.0版本就搭建完成了，如果没有更多的需求，做到这里基本上就可以了。如果有更多的要求，还需要进一步的精耕细作！</p>\n<h3 id=\"修改博客信息\"><a href=\"#修改博客信息\" class=\"headerlink\" title=\"修改博客信息\"></a>修改博客信息</h3><p>首先打开<code>_config.yml</code><strong>站点配置文件</strong>，找到<strong>Site</strong>注释的地方，这里是博客的基本信息。</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680963693171.png\" alt=\"1680963693171\"></p>\n<p>这些都按照个人需要修改，下面是所有配置的释义：</p>\n<p>title: # 标题<br>subtitle: # 副标题<br>description: # 站点描述（可以写简介或格言）<br>keywords: # 搜索关键词<br>author: # 作者<br>language: zh-CN # 语言（这里按你的主题themes中languages文件夹下的文件名填写）<br>timezone: Asia/Shanghai # 时区（中国时区）</p>\n<h3 id=\"更改主题\"><a href=\"#更改主题\" class=\"headerlink\" title=\"更改主题\"></a>更改主题</h3><p>这个388主题，说实话太难看了，因此要去找一个好看的主题，Hexo官方专门提供了一个主题库，可以找到非常多的Hexo主题，并下载更换。</p>\n<p>个人觉得<strong>NexT</strong>主题挺好看的，主要是简约，所以我就拿NexT主题为例更换吧。</p>\n<p>首先，打开<a href=\"https://hexo.io/themes/\">主题库</a>,搜索NexT， 点击主题的名字，就可以跳转到主题的下载页面 </p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964031232.png\" alt=\"1680964031232\"></p>\n<p> 往下滑找到<strong>安装</strong>标签，这包含了主题的下载安装方法。 </p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680965510560.png\" alt=\"1680965510560\"></p>\n<p> 这里我们选择较快的npm下载。首先，切换到博客的根目录，也就是Blog文件夹中，输入<code>npm install hexo-theme-next</code>就可以安装NexT主题了，npm安装的NexT主题的目录在<strong>node_modules</strong>文件夹下的<strong>hexo-theme-next</strong>文件夹中，里面包含了NexT的配置文件。 </p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964267170.png\" alt=\"1680964267170\"></p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964767983.png\" alt=\"1680964767983\"></p>\n<p>也可以使用git，通过git命令进行下载（克隆）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680965881830.png\" alt=\"1680965881830\"></p>\n<p>如果不会使用git命令，就在github上进行下载</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964436969.png\" alt=\"1680964436969\"></p>\n<p> 把这个文件下载到本地之后，修改配置文件。首先找到自己博客文件夹的地址，将下载的文件夹放到 </p>\n<p><code>.\\Blog\\themes</code>目录下，然后返回上级目录。</p>\n<p>最后，要记得修改<code>_config.yml</code>配置文件 中的theme主题</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964912309.png\" alt=\"1680964912309\"></p>\n<h2 id=\"NEXT主题优化\"><a href=\"#NEXT主题优化\" class=\"headerlink\" title=\"NEXT主题优化\"></a>NEXT主题优化</h2><p>对于next的主题优化可以说是耗时耗力的，建议以个人需求为主，无需将所有内容添加进个人博客，这部分建议结合个人需求适当挑选其中内容进行配置。</p>\n<h3 id=\"更改NEXT主题\"><a href=\"#更改NEXT主题\" class=\"headerlink\" title=\"更改NEXT主题\"></a>更改NEXT主题</h3><p>next主题有四种：Muse、Mist、Pisces、Gemini，如下图所示</p>\n<p>Muse：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683950862678.png\" alt=\"1683950862678\"></p>\n<p>Mist：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683951027038.png\" alt=\"1683951027038\"></p>\n<p>Pisces：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683951112541.png\" alt=\"1683951112541\"></p>\n<p>Gemini：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683951226689.png\" alt=\"1683951226689\"></p>\n<ul>\n<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>\n<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>\n<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>\n<li>Gemini - 左侧网站信息及目录，块+片段结构布局</li>\n</ul>\n<p>打开博客目录Blog/themes/next/下的_config.yml（<strong>主题配置文件</strong>），只要将你所选主题前的注释<code>#</code>剪切到当前主题就行了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">scheme: Muse\t    #这是默认主题</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">#scheme: Gemini</span><br></pre></td></tr></table></figure>\n\n<p>接下来同更新博客操作，打开git bash在命令行一键三连：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n\n<p>然后打开浏览器，在网址栏输入<code>localhost:4000/</code>，就能发现自己的网站更新了！<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680965379223.png\" alt=\"1680965379223\"></p>\n<p>若要部署到Github上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置博客icon\"><a href=\"#设置博客icon\" class=\"headerlink\" title=\"设置博客icon\"></a>设置博客icon</h3><p>图标素材：<a href=\"https://www.iconfont.cn/\">iconfont-阿里巴巴矢量图标库</a> </p>\n<p>选择合适的icon，分别下载16，32，180大小png格式及400大小svg格式的图标，放置在 <code>/themes/next/source/imges/</code> 文件夹中。</p>\n<p>修改<strong>主题配置文件</strong>中 <code>favicon</code> 中的内容，依次替换<code>small</code>，<code>medium</code>，<code>apple_touch_icon</code>，<code>safari_pinned_tab</code>字段的图片名；如果是直接替换原来的图标文件则不需要修改。</p>\n<h3 id=\"设置导航菜单\"><a href=\"#设置导航菜单\" class=\"headerlink\" title=\"设置导航菜单\"></a>设置导航菜单</h3><h4 id=\"导航菜单展示\"><a href=\"#导航菜单展示\" class=\"headerlink\" title=\"导航菜单展示\"></a>导航菜单展示</h4><p>第一种方法比较麻烦，打开<strong>主题配置文件</strong>，修改 <code>menu</code> 中的内容，编辑想要展示的内容，可参考下方示例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span>                      <span class=\"comment\">#首页</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span>                 <span class=\"comment\">#标签</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span>       <span class=\"comment\">#分类</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span>      <span class=\"comment\">#归档</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || fa fa-calendar    #日历</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || fa fa-sitemap    #站点地图，供搜索引擎爬取</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || fa fa-heartbeat      #腾讯公益404</span></span><br><span class=\"line\">  <span class=\"comment\"># List||fas fa-list:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Music: /music/ || fas fa-music</span></span><br><span class=\"line\">  <span class=\"comment\">#   Movie: /movies/ || fas fa-video</span></span><br><span class=\"line\">  <span class=\"attr\">link:</span> <span class=\"string\">/link/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-link</span>                <span class=\"comment\">#友情链接</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span>\t\t\t    <span class=\"comment\">#关于</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable / Disable menu icons / item badges.    </span></span><br><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">true</span>       <span class=\"comment\"># 是否显示各个页面的图标</span></span><br><span class=\"line\">  <span class=\"attr\">badges:</span> <span class=\"literal\">true</span>      <span class=\"comment\"># 是否显示分类/标签/归档页的内容量</span></span><br></pre></td></tr></table></figure>\n\n<p>“||”前面的是目标链接，后面的是图标名称，next使用的图标全是<a href=\"https://link.zhihu.com/?target=http://www.fontawesome.com.cn/faicons/%23web-application\">图标库 - Font Awesome 中文网</a>这一网站的，有想用的图标直接在该网站上面找图标的名称就行。</p>\n<p>新添加的菜单需要翻译对应的中文，打开<code>theme/next/languages/zh-CN.yml</code>，在<code>menu</code>下设置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">首页</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">归档</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">分类</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">标签</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">关于我</span></span><br><span class=\"line\">  <span class=\"attr\">search:</span> <span class=\"string\">搜索</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span> <span class=\"string\">日程表</span></span><br><span class=\"line\">  <span class=\"attr\">sitemap:</span> <span class=\"string\">站点地图</span></span><br><span class=\"line\">  <span class=\"attr\">commonweal:</span> <span class=\"string\">公益</span> <span class=\"number\">404</span></span><br><span class=\"line\">  <span class=\"attr\">link:</span> <span class=\"string\">友人帐</span></span><br></pre></td></tr></table></figure>\n\n<p>第二种方法可以直接在第一步中的<strong>主题配置文件</strong>一步到位（但是以后更改language时菜单内容依然会是如下中文）：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"string\">首页:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"string\">标签:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">  <span class=\"string\">分类:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span></span><br><span class=\"line\">  <span class=\"string\">归档:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class=\"line\">  <span class=\"comment\"># List||fas fa-list:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Music: /music/ || fas fa-music</span></span><br><span class=\"line\">  <span class=\"comment\">#   Movie: /movies/ || fas fa-video</span></span><br><span class=\"line\">  <span class=\"string\">友人帐:</span> <span class=\"string\">/link/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-link</span></span><br><span class=\"line\">  <span class=\"string\">关于我:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># Enable / Disable menu icons / item badges.    </span></span><br><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">true</span>       <span class=\"comment\"># 是否显示各个页面的图标</span></span><br><span class=\"line\">  <span class=\"attr\">badges:</span> <span class=\"literal\">true</span>      <span class=\"comment\"># 是否显示分类/标签/归档页的内容量</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成菜单栏关键页面\"><a href=\"#生成菜单栏关键页面\" class=\"headerlink\" title=\"生成菜单栏关键页面\"></a>生成菜单栏关键页面</h4><p>进入 Hexo 博客的根目录，右键<code>Bash</code>：</p>\n<h5 id=\"标签页\"><a href=\"#标签页\" class=\"headerlink\" title=\"标签页\"></a>标签页</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/tags/index.md</code> 文件，修改如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2023-05-13 21:03:07</span><br><span class=\"line\"><span class=\"section\">type: &quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加”tags”属性</strong></p>\n<p>打开需要添加标签的文章，为其添加<code>tags</code>属性。下方的<code>tags: - Hexo - Github</code><br>就是这篇文章的多个标签。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo&amp;Github搭建个人博客</span><br><span class=\"line\">date: 2023-05-12 20:46:38</span><br><span class=\"line\">tags: </span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- Github</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>至此，成功给文章添加标签，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</p>\n<h5 id=\"分类页\"><a href=\"#分类页\" class=\"headerlink\" title=\"分类页\"></a>分类页</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/categories/index.md 文件</code>，修改如下： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2023-05-13 21:03:22</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加分类”categories”属性</strong></p>\n<p>打开需要添加分类的文章，为其添加<code>categories</code>属性。下方的<code>categories: - Blog</code>表示添加这篇文章到“Blog”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- Blog”下方添加了“- xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- Blog”下的 “- xxx”分类）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo&amp;Github搭建个人博客</span><br><span class=\"line\">date: 2023-05-12 20:46:38</span><br><span class=\"line\">tags: </span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- Github</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- Blog</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p>\n<p>打开博客目录下的<code>scaffolds/post.md</code>文件，在<code>tages:</code>下面加入<code>categories:</code>，保存，以后执行<code>hexo new &quot;文章名&quot;</code>命令生成的文件页面里就有<code>categories:</code>项了。</p>\n<p>scaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</p>\n<h5 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page link</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/link/index.md</code> 文件，修改如下： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 友情链接</span><br><span class=\"line\">date: 2023-05-13 21:03:32</span><br><span class=\"line\">type: &quot;link&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>添加友情链接</strong></p>\n<p>在上述<code>index.md</code>文件内容下方，根据个人喜好填写其中内容：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># 友人帐</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">## [Plucky](https://plucky923.github.io/)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">![Plucky](images/index/R</span><span class=\"string\">-C.jpg)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">### 简介：饥饿艺术家</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">-----------------------------------------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">## [Solar1s](https://solar1s.t0nkov.site/)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">![Solar1s](images/index/android</span><span class=\"string\">-chrome-384x384.png)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">### 简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/about-me/index.md</code> 文件，修改如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 关于我</span><br><span class=\"line\">date: 2023-05-13 21:03:41</span><br><span class=\"line\">type: &quot;about&quot;</span><br><span class=\"line\">---</span><br><span class=\"line\"># 下方填写一些个人公开信息</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 注意：如果有启用评论，默认页面带有评论。需要关闭的话，添加字段<code>comments</code>并将值设置为false。 </p>\n</blockquote>\n<h3 id=\"设置阅读原文按钮\"><a href=\"#设置阅读原文按钮\" class=\"headerlink\" title=\"设置阅读原文按钮\"></a>设置阅读原文按钮</h3><p>NexT主题下的首页默认是显示每一篇文章的全文的，如果文章很长就要往下拉很远才能看到下一篇文章，而我们要设置成每一篇文章只预览前5行，然后底部显示一个阅读原文的按钮，点击可以进入阅读全文。</p>\n<p>首先安装插件，打开站点根目录，右键Bash：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>\n\n<p>打开<strong>站点配置文件</strong><code>_config.yml</code>添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">excerpt:\t\t\t# 一定要顶格写，注意格式</span><br><span class=\"line\">  depth: 5\t\t\t# 他的大小就是全文阅读预览长度设置</span><br><span class=\"line\">  excerpt_excludes: []</span><br><span class=\"line\">  more_excludes: []</span><br><span class=\"line\">  hideWholePostExcerpts: true</span><br></pre></td></tr></table></figure>\n\n<p>打开NexT主题的<strong>主题配置文件</strong>，即站点根目录<code>\\themes\\next\\_config.yml</code>，搜索<code>excerpt_description</code>，然后改为true：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Use `description` in front-matter to specify post excerpt.</span><br><span class=\"line\">excerpt_description: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置已读进度条\"><a href=\"#设置已读进度条\" class=\"headerlink\" title=\"设置已读进度条\"></a>设置已读进度条</h3><p>修改<strong>主题配置文件</strong>，将<code>reading_progress</code> 的<code>enable</code>设置为<code>true</code>即可，位置颜色和高度都可以自行调整。</p>\n<h3 id=\"边角的-GitHub-banner\"><a href=\"#边角的-GitHub-banner\" class=\"headerlink\" title=\"边角的 GitHub banner\"></a>边角的 GitHub banner</h3><p>在<strong>主题配置文件</strong>中修改 <code>github_banner</code> 字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github_banner:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  permalink: https://github.com/你的用户名</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h3><p>编辑<strong>主题配置文件</strong>，修改字段<code>avatar</code>，头像图片放在 <code>/themes/source/images/</code> 中，其中可以设置头像的地址 ，头像的形状，以及旋转动画：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">  url: #/images/avatar.jpeg   #图片的位置，也可以是http://xxx.com/avatar.png</span><br><span class=\"line\">  rounded: true               #头像框为圆形</span><br><span class=\"line\">  rotated: true\t\t\t\t #头像随光标旋转</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"github备份本地文件\"><a href=\"#github备份本地文件\" class=\"headerlink\" title=\"github备份本地文件\"></a>github备份本地文件</h2><h3 id=\"本地博客站点备份\"><a href=\"#本地博客站点备份\" class=\"headerlink\" title=\"本地博客站点备份\"></a>本地博客站点备份</h3><p>因为站点实际上是部署在本地的，现在在 GitHub 上只有一些静态文件，一旦本地文件丢失或者损坏，就要重新搭建网站，甚至文章也会丢失，为了在这种情况发生的情况下能够快速恢复本地站点，可以在 GitHub 上新建分支，用于备份本地站点文件。</p>\n<blockquote>\n<p><strong>注：</strong>该部分根据个人需要自行选择。除用作备份，还可解决多个PC设备间站点同步问题，如实现办公和个人电脑间站点的同步。</p>\n</blockquote>\n<p>之前我们的本地站点文件夹为 <code>Blog</code> ，在其他合适的位置新建文件夹 <code>Hexo</code>，将GitHub远程仓库复制到本地，右键启用<code>Git Bash Here</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> 你的仓库地址 Hexo </span><br></pre></td></tr></table></figure>\n\n<p>删除除了版本控制 <code>.git</code> 之外的所有文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> Hexo &amp;&amp; <span class=\"built_in\">rm</span> -r *</span><br></pre></td></tr></table></figure>\n\n<p>将 <code>Blog</code> 文件夹下的所有文件复制到 <code>Hexo</code> 文件夹</p>\n<p>如果使用的主题是从Github克隆的，那么手动或者使用命令删除它的Git文件（以next主题为例），否则无法将主题文件<code>push</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -r themes/next/.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"github配置\"><a href=\"#github配置\" class=\"headerlink\" title=\"github配置\"></a>github配置</h3><p>创建新分支 <code>hexo</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo</span><br></pre></td></tr></table></figure>\n\n<p>推送到<code>hexo</code>分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . <span class=\"comment\"># 保存到暂存区</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Hexo branch&quot;</span> <span class=\"comment\"># 提交信息为hexo分支</span></span><br><span class=\"line\">git push --set-upstream origin hexo <span class=\"comment\"># 设置为上游分支</span></span><br></pre></td></tr></table></figure>\n\n<p>那么到此原来的 <code>Blog</code> 文件夹就可以删除了，当然也可以作为本地备份。</p>\n<h3 id=\"博客站点及备份更新\"><a href=\"#博客站点及备份更新\" class=\"headerlink\" title=\"博客站点及备份更新\"></a>博客站点及备份更新</h3><h4 id=\"博客站点更新\"><a href=\"#博客站点更新\" class=\"headerlink\" title=\"博客站点更新\"></a>博客站点更新</h4><p>更新到 <code>master/main</code> 分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d <span class=\"comment\"># 生成并部署失败则反复hexo d即可</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"博客备份更新\"><a href=\"#博客备份更新\" class=\"headerlink\" title=\"博客备份更新\"></a>博客备份更新</h4><p>备份到 <code>hexo</code> 分支，更新远程仓库的本地备份</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . </span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;提交信息&quot;</span> </span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hexo-amp-Github个人博客配置撰写到美化\"><a href=\"#Hexo-amp-Github个人博客配置撰写到美化\" class=\"headerlink\" title=\"Hexo&amp;Github个人博客配置撰写到美化\"></a>Hexo&amp;Github个人博客配置撰写到美化</h1><h2 id=\"配置博客\"><a href=\"#配置博客\" class=\"headerlink\" title=\"配置博客\"></a>配置博客</h2><ul>\n<li><code>hexo cl</code> 是 <code>hexo clean</code>的简写。意思是清除本地的缓存，实际上就是把博客文件夹下的<code>public</code>文件夹删除掉了。这个<code>public</code>是基于本地的文件生成的、用于上传到仓库或者其他网站服务器上的文件夹，可以理解为本地文件上网的中转站、交通工具，删掉了也不影响本地的内容。</li>\n<li><code>hexo g</code> 是<code>hexo generate</code>的简写，意思是生成public文件夹。</li>\n<li><code>hexo d</code>是<code>hexo deploy</code>的简写，意思是将生成的public文件夹部署到网上，我们这里是部署到github上面。为了顺利部署，我们前面也提到过，要在站点文件夹下<code>_config.yml</code>文件中修改一些内容，如下：</li>\n</ul>\n<h3 id=\"博客文件夹\"><a href=\"#博客文件夹\" class=\"headerlink\" title=\"博客文件夹\"></a>博客文件夹</h3><p>我们打开自己的博客根目录，了解一下里面的这些文件（夹）都是干什么的：</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680958520314.png\" alt=\"1680958520314\"></p>\n<ul>\n<li><code>_config.yml</code>：俗称<strong>站点配置文件</strong>，很多与博客网站的格式、内容相关的设置都需要在里面改。</li>\n<li><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</li>\n<li><code>package.json</code>：别问我，我也不知道干嘛的。</li>\n<li><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</li>\n<li><code>source</code>：非常重要。所有的个人文件都在里面！</li>\n<li><code>themes</code>：主题文件夹，可以从<a href=\"https://hexo.io/themes/\">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</li>\n</ul>\n<p>接下来重点介绍<code>source</code>文件夹。新建的博客中，<code>source</code>文件夹下默认只有一个子文件夹——<code>_posts</code>。我们写的博客都放在这个子文件夹里面。我们还可以在<code>source</code>里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680958715749.png\" alt=\"1680958715749\"></p>\n<h3 id=\"新建博客文件\"><a href=\"#新建博客文件\" class=\"headerlink\" title=\"新建博客文件\"></a>新建博客文件</h3><p>博客文件格式为<code>.md</code>（Markdown格式文件，建议使用<a href=\"https://www.typora.io/\">Typora软件</a>进行编辑）。<strong>注意</strong>：不要新建<code>.md</code>文件，一定要用代码建立新的博客 ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;新建文件名&quot;</span><br><span class=\"line\">或者hexo n &quot;文件名&quot;</span><br></pre></td></tr></table></figure>\n\n<p>写好内容后，在命令行进行hexo三部曲：</p>\n<blockquote>\n<p>‘hexo cl’命令用于清除缓存文件（db.json）和已生成的静态文件（public）。例如：在更换主题后，如果发现站点更改不生效，可以运行该命令。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>然后随便打开一个浏览器，在网址栏输入<code>localhost:4000/</code>，就能发现自己的网站更新了！不过这只是在本地进行了更新，要想部署到网上（Github上），输入如下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>然后在浏览器地址栏输入<code>https://yourname.github.io</code>，或者<code>yourname.github.io</code>就能在网上浏览自己的博客了！</p>\n<blockquote>\n<p>注意：本地调试其实并不用每次都要hexo三部曲，只需要<code>hexo s</code>，就可以用<code>localhost:4000</code>来查看修改效果，可以节省大量时间 </p>\n</blockquote>\n<p>以上，我们的博客网站1.0版本就搭建完成了，如果没有更多的需求，做到这里基本上就可以了。如果有更多的要求，还需要进一步的精耕细作！</p>\n<h3 id=\"修改博客信息\"><a href=\"#修改博客信息\" class=\"headerlink\" title=\"修改博客信息\"></a>修改博客信息</h3><p>首先打开<code>_config.yml</code><strong>站点配置文件</strong>，找到<strong>Site</strong>注释的地方，这里是博客的基本信息。</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680963693171.png\" alt=\"1680963693171\"></p>\n<p>这些都按照个人需要修改，下面是所有配置的释义：</p>\n<p>title: # 标题<br>subtitle: # 副标题<br>description: # 站点描述（可以写简介或格言）<br>keywords: # 搜索关键词<br>author: # 作者<br>language: zh-CN # 语言（这里按你的主题themes中languages文件夹下的文件名填写）<br>timezone: Asia/Shanghai # 时区（中国时区）</p>\n<h3 id=\"更改主题\"><a href=\"#更改主题\" class=\"headerlink\" title=\"更改主题\"></a>更改主题</h3><p>这个388主题，说实话太难看了，因此要去找一个好看的主题，Hexo官方专门提供了一个主题库，可以找到非常多的Hexo主题，并下载更换。</p>\n<p>个人觉得<strong>NexT</strong>主题挺好看的，主要是简约，所以我就拿NexT主题为例更换吧。</p>\n<p>首先，打开<a href=\"https://hexo.io/themes/\">主题库</a>,搜索NexT， 点击主题的名字，就可以跳转到主题的下载页面 </p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964031232.png\" alt=\"1680964031232\"></p>\n<p> 往下滑找到<strong>安装</strong>标签，这包含了主题的下载安装方法。 </p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680965510560.png\" alt=\"1680965510560\"></p>\n<p> 这里我们选择较快的npm下载。首先，切换到博客的根目录，也就是Blog文件夹中，输入<code>npm install hexo-theme-next</code>就可以安装NexT主题了，npm安装的NexT主题的目录在<strong>node_modules</strong>文件夹下的<strong>hexo-theme-next</strong>文件夹中，里面包含了NexT的配置文件。 </p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964267170.png\" alt=\"1680964267170\"></p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964767983.png\" alt=\"1680964767983\"></p>\n<p>也可以使用git，通过git命令进行下载（克隆）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680965881830.png\" alt=\"1680965881830\"></p>\n<p>如果不会使用git命令，就在github上进行下载</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964436969.png\" alt=\"1680964436969\"></p>\n<p> 把这个文件下载到本地之后，修改配置文件。首先找到自己博客文件夹的地址，将下载的文件夹放到 </p>\n<p><code>.\\Blog\\themes</code>目录下，然后返回上级目录。</p>\n<p>最后，要记得修改<code>_config.yml</code>配置文件 中的theme主题</p>\n<p><img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680964912309.png\" alt=\"1680964912309\"></p>\n<h2 id=\"NEXT主题优化\"><a href=\"#NEXT主题优化\" class=\"headerlink\" title=\"NEXT主题优化\"></a>NEXT主题优化</h2><p>对于next的主题优化可以说是耗时耗力的，建议以个人需求为主，无需将所有内容添加进个人博客，这部分建议结合个人需求适当挑选其中内容进行配置。</p>\n<h3 id=\"更改NEXT主题\"><a href=\"#更改NEXT主题\" class=\"headerlink\" title=\"更改NEXT主题\"></a>更改NEXT主题</h3><p>next主题有四种：Muse、Mist、Pisces、Gemini，如下图所示</p>\n<p>Muse：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683950862678.png\" alt=\"1683950862678\"></p>\n<p>Mist：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683951027038.png\" alt=\"1683951027038\"></p>\n<p>Pisces：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683951112541.png\" alt=\"1683951112541\"></p>\n<p>Gemini：<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1683951226689.png\" alt=\"1683951226689\"></p>\n<ul>\n<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>\n<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>\n<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>\n<li>Gemini - 左侧网站信息及目录，块+片段结构布局</li>\n</ul>\n<p>打开博客目录Blog/themes/next/下的_config.yml（<strong>主题配置文件</strong>），只要将你所选主题前的注释<code>#</code>剪切到当前主题就行了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">scheme: Muse\t    #这是默认主题</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">#scheme: Gemini</span><br></pre></td></tr></table></figure>\n\n<p>接下来同更新博客操作，打开git bash在命令行一键三连：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n\n<p>然后打开浏览器，在网址栏输入<code>localhost:4000/</code>，就能发现自己的网站更新了！<img src=\"/images/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/1680965379223.png\" alt=\"1680965379223\"></p>\n<p>若要部署到Github上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置博客icon\"><a href=\"#设置博客icon\" class=\"headerlink\" title=\"设置博客icon\"></a>设置博客icon</h3><p>图标素材：<a href=\"https://www.iconfont.cn/\">iconfont-阿里巴巴矢量图标库</a> </p>\n<p>选择合适的icon，分别下载16，32，180大小png格式及400大小svg格式的图标，放置在 <code>/themes/next/source/imges/</code> 文件夹中。</p>\n<p>修改<strong>主题配置文件</strong>中 <code>favicon</code> 中的内容，依次替换<code>small</code>，<code>medium</code>，<code>apple_touch_icon</code>，<code>safari_pinned_tab</code>字段的图片名；如果是直接替换原来的图标文件则不需要修改。</p>\n<h3 id=\"设置导航菜单\"><a href=\"#设置导航菜单\" class=\"headerlink\" title=\"设置导航菜单\"></a>设置导航菜单</h3><h4 id=\"导航菜单展示\"><a href=\"#导航菜单展示\" class=\"headerlink\" title=\"导航菜单展示\"></a>导航菜单展示</h4><p>第一种方法比较麻烦，打开<strong>主题配置文件</strong>，修改 <code>menu</code> 中的内容，编辑想要展示的内容，可参考下方示例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span>                      <span class=\"comment\">#首页</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span>                 <span class=\"comment\">#标签</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span>       <span class=\"comment\">#分类</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span>      <span class=\"comment\">#归档</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || fa fa-calendar    #日历</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || fa fa-sitemap    #站点地图，供搜索引擎爬取</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || fa fa-heartbeat      #腾讯公益404</span></span><br><span class=\"line\">  <span class=\"comment\"># List||fas fa-list:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Music: /music/ || fas fa-music</span></span><br><span class=\"line\">  <span class=\"comment\">#   Movie: /movies/ || fas fa-video</span></span><br><span class=\"line\">  <span class=\"attr\">link:</span> <span class=\"string\">/link/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-link</span>                <span class=\"comment\">#友情链接</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span>\t\t\t    <span class=\"comment\">#关于</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable / Disable menu icons / item badges.    </span></span><br><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">true</span>       <span class=\"comment\"># 是否显示各个页面的图标</span></span><br><span class=\"line\">  <span class=\"attr\">badges:</span> <span class=\"literal\">true</span>      <span class=\"comment\"># 是否显示分类/标签/归档页的内容量</span></span><br></pre></td></tr></table></figure>\n\n<p>“||”前面的是目标链接，后面的是图标名称，next使用的图标全是<a href=\"https://link.zhihu.com/?target=http://www.fontawesome.com.cn/faicons/%23web-application\">图标库 - Font Awesome 中文网</a>这一网站的，有想用的图标直接在该网站上面找图标的名称就行。</p>\n<p>新添加的菜单需要翻译对应的中文，打开<code>theme/next/languages/zh-CN.yml</code>，在<code>menu</code>下设置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">首页</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">归档</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">分类</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">标签</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">关于我</span></span><br><span class=\"line\">  <span class=\"attr\">search:</span> <span class=\"string\">搜索</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span> <span class=\"string\">日程表</span></span><br><span class=\"line\">  <span class=\"attr\">sitemap:</span> <span class=\"string\">站点地图</span></span><br><span class=\"line\">  <span class=\"attr\">commonweal:</span> <span class=\"string\">公益</span> <span class=\"number\">404</span></span><br><span class=\"line\">  <span class=\"attr\">link:</span> <span class=\"string\">友人帐</span></span><br></pre></td></tr></table></figure>\n\n<p>第二种方法可以直接在第一步中的<strong>主题配置文件</strong>一步到位（但是以后更改language时菜单内容依然会是如下中文）：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"string\">首页:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"string\">标签:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">  <span class=\"string\">分类:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span></span><br><span class=\"line\">  <span class=\"string\">归档:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class=\"line\">  <span class=\"comment\"># List||fas fa-list:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Music: /music/ || fas fa-music</span></span><br><span class=\"line\">  <span class=\"comment\">#   Movie: /movies/ || fas fa-video</span></span><br><span class=\"line\">  <span class=\"string\">友人帐:</span> <span class=\"string\">/link/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-link</span></span><br><span class=\"line\">  <span class=\"string\">关于我:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># Enable / Disable menu icons / item badges.    </span></span><br><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">true</span>       <span class=\"comment\"># 是否显示各个页面的图标</span></span><br><span class=\"line\">  <span class=\"attr\">badges:</span> <span class=\"literal\">true</span>      <span class=\"comment\"># 是否显示分类/标签/归档页的内容量</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成菜单栏关键页面\"><a href=\"#生成菜单栏关键页面\" class=\"headerlink\" title=\"生成菜单栏关键页面\"></a>生成菜单栏关键页面</h4><p>进入 Hexo 博客的根目录，右键<code>Bash</code>：</p>\n<h5 id=\"标签页\"><a href=\"#标签页\" class=\"headerlink\" title=\"标签页\"></a>标签页</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/tags/index.md</code> 文件，修改如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2023-05-13 21:03:07</span><br><span class=\"line\"><span class=\"section\">type: &quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加”tags”属性</strong></p>\n<p>打开需要添加标签的文章，为其添加<code>tags</code>属性。下方的<code>tags: - Hexo - Github</code><br>就是这篇文章的多个标签。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo&amp;Github搭建个人博客</span><br><span class=\"line\">date: 2023-05-12 20:46:38</span><br><span class=\"line\">tags: </span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- Github</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>至此，成功给文章添加标签，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</p>\n<h5 id=\"分类页\"><a href=\"#分类页\" class=\"headerlink\" title=\"分类页\"></a>分类页</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/categories/index.md 文件</code>，修改如下： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2023-05-13 21:03:22</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加分类”categories”属性</strong></p>\n<p>打开需要添加分类的文章，为其添加<code>categories</code>属性。下方的<code>categories: - Blog</code>表示添加这篇文章到“Blog”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- Blog”下方添加了“- xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- Blog”下的 “- xxx”分类）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo&amp;Github搭建个人博客</span><br><span class=\"line\">date: 2023-05-12 20:46:38</span><br><span class=\"line\">tags: </span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- Github</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- Blog</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p>\n<p>打开博客目录下的<code>scaffolds/post.md</code>文件，在<code>tages:</code>下面加入<code>categories:</code>，保存，以后执行<code>hexo new &quot;文章名&quot;</code>命令生成的文件页面里就有<code>categories:</code>项了。</p>\n<p>scaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</p>\n<h5 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page link</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/link/index.md</code> 文件，修改如下： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 友情链接</span><br><span class=\"line\">date: 2023-05-13 21:03:32</span><br><span class=\"line\">type: &quot;link&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>添加友情链接</strong></p>\n<p>在上述<code>index.md</code>文件内容下方，根据个人喜好填写其中内容：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># 友人帐</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">## [Plucky](https://plucky923.github.io/)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">![Plucky](images/index/R</span><span class=\"string\">-C.jpg)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">### 简介：饥饿艺术家</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">-----------------------------------------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">## [Solar1s](https://solar1s.t0nkov.site/)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">![Solar1s](images/index/android</span><span class=\"string\">-chrome-384x384.png)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"comment\">### 简介：A postgraduate student of School of Cyber Science and Engineering, SouthEast University in Nanjing.</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>source/about-me/index.md</code> 文件，修改如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 关于我</span><br><span class=\"line\">date: 2023-05-13 21:03:41</span><br><span class=\"line\">type: &quot;about&quot;</span><br><span class=\"line\">---</span><br><span class=\"line\"># 下方填写一些个人公开信息</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 注意：如果有启用评论，默认页面带有评论。需要关闭的话，添加字段<code>comments</code>并将值设置为false。 </p>\n</blockquote>\n<h3 id=\"设置阅读原文按钮\"><a href=\"#设置阅读原文按钮\" class=\"headerlink\" title=\"设置阅读原文按钮\"></a>设置阅读原文按钮</h3><p>NexT主题下的首页默认是显示每一篇文章的全文的，如果文章很长就要往下拉很远才能看到下一篇文章，而我们要设置成每一篇文章只预览前5行，然后底部显示一个阅读原文的按钮，点击可以进入阅读全文。</p>\n<p>首先安装插件，打开站点根目录，右键Bash：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>\n\n<p>打开<strong>站点配置文件</strong><code>_config.yml</code>添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">excerpt:\t\t\t# 一定要顶格写，注意格式</span><br><span class=\"line\">  depth: 5\t\t\t# 他的大小就是全文阅读预览长度设置</span><br><span class=\"line\">  excerpt_excludes: []</span><br><span class=\"line\">  more_excludes: []</span><br><span class=\"line\">  hideWholePostExcerpts: true</span><br></pre></td></tr></table></figure>\n\n<p>打开NexT主题的<strong>主题配置文件</strong>，即站点根目录<code>\\themes\\next\\_config.yml</code>，搜索<code>excerpt_description</code>，然后改为true：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Use `description` in front-matter to specify post excerpt.</span><br><span class=\"line\">excerpt_description: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置已读进度条\"><a href=\"#设置已读进度条\" class=\"headerlink\" title=\"设置已读进度条\"></a>设置已读进度条</h3><p>修改<strong>主题配置文件</strong>，将<code>reading_progress</code> 的<code>enable</code>设置为<code>true</code>即可，位置颜色和高度都可以自行调整。</p>\n<h3 id=\"边角的-GitHub-banner\"><a href=\"#边角的-GitHub-banner\" class=\"headerlink\" title=\"边角的 GitHub banner\"></a>边角的 GitHub banner</h3><p>在<strong>主题配置文件</strong>中修改 <code>github_banner</code> 字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github_banner:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  permalink: https://github.com/你的用户名</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h3><p>编辑<strong>主题配置文件</strong>，修改字段<code>avatar</code>，头像图片放在 <code>/themes/source/images/</code> 中，其中可以设置头像的地址 ，头像的形状，以及旋转动画：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">  url: #/images/avatar.jpeg   #图片的位置，也可以是http://xxx.com/avatar.png</span><br><span class=\"line\">  rounded: true               #头像框为圆形</span><br><span class=\"line\">  rotated: true\t\t\t\t #头像随光标旋转</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"github备份本地文件\"><a href=\"#github备份本地文件\" class=\"headerlink\" title=\"github备份本地文件\"></a>github备份本地文件</h2><h3 id=\"本地博客站点备份\"><a href=\"#本地博客站点备份\" class=\"headerlink\" title=\"本地博客站点备份\"></a>本地博客站点备份</h3><p>因为站点实际上是部署在本地的，现在在 GitHub 上只有一些静态文件，一旦本地文件丢失或者损坏，就要重新搭建网站，甚至文章也会丢失，为了在这种情况发生的情况下能够快速恢复本地站点，可以在 GitHub 上新建分支，用于备份本地站点文件。</p>\n<blockquote>\n<p><strong>注：</strong>该部分根据个人需要自行选择。除用作备份，还可解决多个PC设备间站点同步问题，如实现办公和个人电脑间站点的同步。</p>\n</blockquote>\n<p>之前我们的本地站点文件夹为 <code>Blog</code> ，在其他合适的位置新建文件夹 <code>Hexo</code>，将GitHub远程仓库复制到本地，右键启用<code>Git Bash Here</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> 你的仓库地址 Hexo </span><br></pre></td></tr></table></figure>\n\n<p>删除除了版本控制 <code>.git</code> 之外的所有文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> Hexo &amp;&amp; <span class=\"built_in\">rm</span> -r *</span><br></pre></td></tr></table></figure>\n\n<p>将 <code>Blog</code> 文件夹下的所有文件复制到 <code>Hexo</code> 文件夹</p>\n<p>如果使用的主题是从Github克隆的，那么手动或者使用命令删除它的Git文件（以next主题为例），否则无法将主题文件<code>push</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -r themes/next/.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"github配置\"><a href=\"#github配置\" class=\"headerlink\" title=\"github配置\"></a>github配置</h3><p>创建新分支 <code>hexo</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo</span><br></pre></td></tr></table></figure>\n\n<p>推送到<code>hexo</code>分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . <span class=\"comment\"># 保存到暂存区</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Hexo branch&quot;</span> <span class=\"comment\"># 提交信息为hexo分支</span></span><br><span class=\"line\">git push --set-upstream origin hexo <span class=\"comment\"># 设置为上游分支</span></span><br></pre></td></tr></table></figure>\n\n<p>那么到此原来的 <code>Blog</code> 文件夹就可以删除了，当然也可以作为本地备份。</p>\n<h3 id=\"博客站点及备份更新\"><a href=\"#博客站点及备份更新\" class=\"headerlink\" title=\"博客站点及备份更新\"></a>博客站点及备份更新</h3><h4 id=\"博客站点更新\"><a href=\"#博客站点更新\" class=\"headerlink\" title=\"博客站点更新\"></a>博客站点更新</h4><p>更新到 <code>master/main</code> 分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d <span class=\"comment\"># 生成并部署失败则反复hexo d即可</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"博客备份更新\"><a href=\"#博客备份更新\" class=\"headerlink\" title=\"博客备份更新\"></a>博客备份更新</h4><p>备份到 <code>hexo</code> 分支，更新远程仓库的本地备份</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . </span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;提交信息&quot;</span> </span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Hexo&Github搭建个人博客","date":"2023-05-12T12:46:38.000Z","typora-root-url":"../","_content":"\n# Hexo&Github搭建个人博客\n\n## Nodejs\n\n> 教程：[nodejs安装和环境配置-Windows_nodejs安装及环境配置](https://blog.csdn.net/weixin_52799373/article/details/123840137) \n\n## git\n\n> 教程：[Windows系统Git安装教程（详解Git安装过程）](https://www.cnblogs.com/xueweisuoyong/p/11914045.html) \n\n## 本地部署\n\n创建一个名为`Blog`的文件，作为博客根目录，在里面右键启用`Git Bash Here`\n\n### Hexo安装\n\n```\nnpm install hexo-cli -g\n```\n\n### 初始化Hexo博客\n\n```\nhexo init\n```\n\n如下图所示即为成功：![1680873666633](/images/Hexo&Github搭建个人博客/1680873666633.png)\n\n### 生成本地Hexo页面\n\n搭建本地博客完成后若想再次在本地访问博客则可直接从此步骤开始。\n\n```\nhexo server\n或者hexo s\n```\n\n如下图所示即为成功：![1680873683510](/images/Hexo&Github搭建个人博客/1680873683510.png)\n\n然后在浏览器中打开`http://localhost:4000/`，就能看到本地博客；按下`Ctrl+C`则关闭本地服务器。\n\n## Github部署\n\n### github注册\n\n> 官方网址：[GitHub](https://github.com/) \n\n点击右上角`Sign up`完成注册。\n\n### 新建仓库\n\n在github个人首页，点击`Create repository`，如下图所示：![1680873809468](/images/Hexo&Github搭建个人博客/1680873809468.png)\n\n命名为`username.github.io`（username 是你的用户名)，如下图：![1680873944366](/images/Hexo&Github搭建个人博客/1680873944366.png)\n\n如果创建成功后页面为404，则尝试挂一下加速器，改host可能会有此问题，或者裸连。\n\n创建成功后能在右上角Code选项下看见仓库的地址，这个仓库地址后面会用到。\n\n### Git与github配置\n\n此处为全局配置，所以可以在任意位置打开git bash, 设置用户名称和邮件地址（替换成自己的githubID和注册的邮箱）\n\n```\ngit config --global user.name \"Placebo27\"\ngit config --global user.email \"placeb0@qq.com\"\n```\n\n#### 获取本地SSH公钥\n\n**生成SSH公私钥对**\n\n```\nssh-keygen -t rsa -C \"你的邮箱地址\"\n```\n\n一共四次回车，第二次回车前输入`y`\n\n**复制SSH公钥**\n\n在上一步SSH生成成功后的文件路径`C:/Users/用户名/.ssh`中找到`id_rsa.pub`文件，用文件编辑器打开并复制其内容；或者使用如下命令复制其内容（cmd或者Bash中皆可）：\n\n```\nclip < C:/Users/用户名/.ssh/id_rsa.pub\n```\n\n#### Github添加SSH key\n\n打开 github 点击头像 -> Settings -> SSH and GPG keys -> New SSH key 新建 SSH key：\n\n![1680956656990](/images/Hexo&Github搭建个人博客/1680956656990.png)\n\n![1680956631099](/images/Hexo&Github搭建个人博客/1680956631099.png)\n\n![1680956679681](/images/Hexo&Github搭建个人博客/1680956679681.png)\n\nTitle可以随便起，将上述SSH公钥粘贴到Key文本框中：![1680957120218](/images/Hexo&Github搭建个人博客/1680957120218.png)\n\n#### 测试SSH key是否配置成功\n\n```\nssh -T git@github.com\n```\n\n第一次连接测试需要输入`yes`，若出现`successfully authenticated`则配置成功。\n\n#### Git修改deploy配置项\n\n打开`Blog/_config.yml`，修改底部deploy配置项：\n\n```\ndeploy:\n  type: git\n  repository: 你的github仓库地址\n  branch: main\n```\n\n### hexo-deployer-git自动部署发布工具安装\n\n```\nnpm install hexo-deployer-git --save\n```\n\n![1680875583179](/images/Hexo&Github搭建个人博客/1680875583179.png)\n\n### 生成public上传文件夹\n\n进入到`Blog`博客根目录下，右键选择`Git Bash Here`：\n\n如果不是首次上传则先清除本地的缓存（首次上传清不清除无所谓）：\n\n```\nhexo clean\n或者hexo cl\n```\n\n```\nhexo generate\n或者hexo g\n```\n\n![1680876225334](/images/Hexo&Github搭建个人博客/1680876225334.png)\n\n### 部署到github\n\n将生成的public文件夹部署到github上，把本地hexo博客内容提交到github仓库：\n\n```\nhexo deploy\n或者hexo d\n```\n\n如果发生如下报错：![1680876607176](/images/Hexo&Github搭建个人博客/1680876607176.png)\n\n出现该问题不要惊慌，这个错误其实很简单，是因为同步文件缺失导致的，很明显我们push的hexo静态文件会缺失README.md这个文件，所以我们只需要把远端的README.md文件同步下来或者新建一个readme.md文档即可。\n\n这里我选择新建README.md文档。（此操作后来发现，没什么用，但是也记录下来）\n\n![1680877252167](/images/Hexo&Github搭建个人博客/1680877252167.png)\n\n**实际解决方法：**\n\n 1.在文件浏览器中勾选显示隐藏的项目 \n\n 2.进入我们博客目录的`.deploy_git.git`子目录，找到config文件。 \n\n 3.打开config文件，添加以下内容 ：\n\n```\n[user]\n\temail=你的邮箱\n\tname=GitHub用户名\n```\n\n若又出现以下错误，无法访问错误， 不要惊慌，多次尝试，或者更换网络再次尝试（加速器）：![1680877644122](/images/Hexo&Github搭建个人博客/1680877644122.png)\n\n然后会弹出一个小窗口，登陆你的github账户进行连接，链接成功你会收到一封邮件。\n\n![1680877867261](/images/Hexo&Github搭建个人博客/1680877867261.png)\n\n这样就成功了，打开你的github个人仓库会看到你推送的文件。\n\n![1680878108104](/images/Hexo&Github搭建个人博客/1680878108104.png)\n\n然后通过你的仓库后面的链接`https://username.github.io`访问你的个人博客。\n\n![1680878256004](/images/Hexo&Github搭建个人博客/1680878256004.png)\n\n![1680878360529](/images/Hexo&Github搭建个人博客/1680878360529.png)\n\n","source":"_posts/Hexo&Github搭建个人博客.md","raw":"---\ntitle: Hexo&Github搭建个人博客\ndate: 2023-05-12 20:46:38\ntags: \n- Hexo\n- Github\ncategories: \n- Blog\ntypora-root-url: ../\n---\n\n# Hexo&Github搭建个人博客\n\n## Nodejs\n\n> 教程：[nodejs安装和环境配置-Windows_nodejs安装及环境配置](https://blog.csdn.net/weixin_52799373/article/details/123840137) \n\n## git\n\n> 教程：[Windows系统Git安装教程（详解Git安装过程）](https://www.cnblogs.com/xueweisuoyong/p/11914045.html) \n\n## 本地部署\n\n创建一个名为`Blog`的文件，作为博客根目录，在里面右键启用`Git Bash Here`\n\n### Hexo安装\n\n```\nnpm install hexo-cli -g\n```\n\n### 初始化Hexo博客\n\n```\nhexo init\n```\n\n如下图所示即为成功：![1680873666633](/images/Hexo&Github搭建个人博客/1680873666633.png)\n\n### 生成本地Hexo页面\n\n搭建本地博客完成后若想再次在本地访问博客则可直接从此步骤开始。\n\n```\nhexo server\n或者hexo s\n```\n\n如下图所示即为成功：![1680873683510](/images/Hexo&Github搭建个人博客/1680873683510.png)\n\n然后在浏览器中打开`http://localhost:4000/`，就能看到本地博客；按下`Ctrl+C`则关闭本地服务器。\n\n## Github部署\n\n### github注册\n\n> 官方网址：[GitHub](https://github.com/) \n\n点击右上角`Sign up`完成注册。\n\n### 新建仓库\n\n在github个人首页，点击`Create repository`，如下图所示：![1680873809468](/images/Hexo&Github搭建个人博客/1680873809468.png)\n\n命名为`username.github.io`（username 是你的用户名)，如下图：![1680873944366](/images/Hexo&Github搭建个人博客/1680873944366.png)\n\n如果创建成功后页面为404，则尝试挂一下加速器，改host可能会有此问题，或者裸连。\n\n创建成功后能在右上角Code选项下看见仓库的地址，这个仓库地址后面会用到。\n\n### Git与github配置\n\n此处为全局配置，所以可以在任意位置打开git bash, 设置用户名称和邮件地址（替换成自己的githubID和注册的邮箱）\n\n```\ngit config --global user.name \"Placebo27\"\ngit config --global user.email \"placeb0@qq.com\"\n```\n\n#### 获取本地SSH公钥\n\n**生成SSH公私钥对**\n\n```\nssh-keygen -t rsa -C \"你的邮箱地址\"\n```\n\n一共四次回车，第二次回车前输入`y`\n\n**复制SSH公钥**\n\n在上一步SSH生成成功后的文件路径`C:/Users/用户名/.ssh`中找到`id_rsa.pub`文件，用文件编辑器打开并复制其内容；或者使用如下命令复制其内容（cmd或者Bash中皆可）：\n\n```\nclip < C:/Users/用户名/.ssh/id_rsa.pub\n```\n\n#### Github添加SSH key\n\n打开 github 点击头像 -> Settings -> SSH and GPG keys -> New SSH key 新建 SSH key：\n\n![1680956656990](/images/Hexo&Github搭建个人博客/1680956656990.png)\n\n![1680956631099](/images/Hexo&Github搭建个人博客/1680956631099.png)\n\n![1680956679681](/images/Hexo&Github搭建个人博客/1680956679681.png)\n\nTitle可以随便起，将上述SSH公钥粘贴到Key文本框中：![1680957120218](/images/Hexo&Github搭建个人博客/1680957120218.png)\n\n#### 测试SSH key是否配置成功\n\n```\nssh -T git@github.com\n```\n\n第一次连接测试需要输入`yes`，若出现`successfully authenticated`则配置成功。\n\n#### Git修改deploy配置项\n\n打开`Blog/_config.yml`，修改底部deploy配置项：\n\n```\ndeploy:\n  type: git\n  repository: 你的github仓库地址\n  branch: main\n```\n\n### hexo-deployer-git自动部署发布工具安装\n\n```\nnpm install hexo-deployer-git --save\n```\n\n![1680875583179](/images/Hexo&Github搭建个人博客/1680875583179.png)\n\n### 生成public上传文件夹\n\n进入到`Blog`博客根目录下，右键选择`Git Bash Here`：\n\n如果不是首次上传则先清除本地的缓存（首次上传清不清除无所谓）：\n\n```\nhexo clean\n或者hexo cl\n```\n\n```\nhexo generate\n或者hexo g\n```\n\n![1680876225334](/images/Hexo&Github搭建个人博客/1680876225334.png)\n\n### 部署到github\n\n将生成的public文件夹部署到github上，把本地hexo博客内容提交到github仓库：\n\n```\nhexo deploy\n或者hexo d\n```\n\n如果发生如下报错：![1680876607176](/images/Hexo&Github搭建个人博客/1680876607176.png)\n\n出现该问题不要惊慌，这个错误其实很简单，是因为同步文件缺失导致的，很明显我们push的hexo静态文件会缺失README.md这个文件，所以我们只需要把远端的README.md文件同步下来或者新建一个readme.md文档即可。\n\n这里我选择新建README.md文档。（此操作后来发现，没什么用，但是也记录下来）\n\n![1680877252167](/images/Hexo&Github搭建个人博客/1680877252167.png)\n\n**实际解决方法：**\n\n 1.在文件浏览器中勾选显示隐藏的项目 \n\n 2.进入我们博客目录的`.deploy_git.git`子目录，找到config文件。 \n\n 3.打开config文件，添加以下内容 ：\n\n```\n[user]\n\temail=你的邮箱\n\tname=GitHub用户名\n```\n\n若又出现以下错误，无法访问错误， 不要惊慌，多次尝试，或者更换网络再次尝试（加速器）：![1680877644122](/images/Hexo&Github搭建个人博客/1680877644122.png)\n\n然后会弹出一个小窗口，登陆你的github账户进行连接，链接成功你会收到一封邮件。\n\n![1680877867261](/images/Hexo&Github搭建个人博客/1680877867261.png)\n\n这样就成功了，打开你的github个人仓库会看到你推送的文件。\n\n![1680878108104](/images/Hexo&Github搭建个人博客/1680878108104.png)\n\n然后通过你的仓库后面的链接`https://username.github.io`访问你的个人博客。\n\n![1680878256004](/images/Hexo&Github搭建个人博客/1680878256004.png)\n\n![1680878360529](/images/Hexo&Github搭建个人博客/1680878360529.png)\n\n","slug":"Hexo&Github搭建个人博客","published":1,"updated":"2023-06-02T13:47:04.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliesczs00003dcfy0fx444n3","content":"<h1 id=\"Hexo-amp-Github搭建个人博客\"><a href=\"#Hexo-amp-Github搭建个人博客\" class=\"headerlink\" title=\"Hexo&amp;Github搭建个人博客\"></a>Hexo&amp;Github搭建个人博客</h1><h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><blockquote>\n<p>教程：<a href=\"https://blog.csdn.net/weixin_52799373/article/details/123840137\">nodejs安装和环境配置-Windows_nodejs安装及环境配置</a> </p>\n</blockquote>\n<h2 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h2><blockquote>\n<p>教程：<a href=\"https://www.cnblogs.com/xueweisuoyong/p/11914045.html\">Windows系统Git安装教程（详解Git安装过程）</a> </p>\n</blockquote>\n<h2 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h2><p>创建一个名为<code>Blog</code>的文件，作为博客根目录，在里面右键启用<code>Git Bash Here</code></p>\n<h3 id=\"Hexo安装\"><a href=\"#Hexo安装\" class=\"headerlink\" title=\"Hexo安装\"></a>Hexo安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"初始化Hexo博客\"><a href=\"#初始化Hexo博客\" class=\"headerlink\" title=\"初始化Hexo博客\"></a>初始化Hexo博客</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n\n<p>如下图所示即为成功：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873666633.png\" alt=\"1680873666633\"></p>\n<h3 id=\"生成本地Hexo页面\"><a href=\"#生成本地Hexo页面\" class=\"headerlink\" title=\"生成本地Hexo页面\"></a>生成本地Hexo页面</h3><p>搭建本地博客完成后若想再次在本地访问博客则可直接从此步骤开始。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br><span class=\"line\">或者hexo s</span><br></pre></td></tr></table></figure>\n\n<p>如下图所示即为成功：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873683510.png\" alt=\"1680873683510\"></p>\n<p>然后在浏览器中打开<code>http://localhost:4000/</code>，就能看到本地博客；按下<code>Ctrl+C</code>则关闭本地服务器。</p>\n<h2 id=\"Github部署\"><a href=\"#Github部署\" class=\"headerlink\" title=\"Github部署\"></a>Github部署</h2><h3 id=\"github注册\"><a href=\"#github注册\" class=\"headerlink\" title=\"github注册\"></a>github注册</h3><blockquote>\n<p>官方网址：<a href=\"https://github.com/\">GitHub</a> </p>\n</blockquote>\n<p>点击右上角<code>Sign up</code>完成注册。</p>\n<h3 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3><p>在github个人首页，点击<code>Create repository</code>，如下图所示：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873809468.png\" alt=\"1680873809468\"></p>\n<p>命名为<code>username.github.io</code>（username 是你的用户名)，如下图：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873944366.png\" alt=\"1680873944366\"></p>\n<p>如果创建成功后页面为404，则尝试挂一下加速器，改host可能会有此问题，或者裸连。</p>\n<p>创建成功后能在右上角Code选项下看见仓库的地址，这个仓库地址后面会用到。</p>\n<h3 id=\"Git与github配置\"><a href=\"#Git与github配置\" class=\"headerlink\" title=\"Git与github配置\"></a>Git与github配置</h3><p>此处为全局配置，所以可以在任意位置打开git bash, 设置用户名称和邮件地址（替换成自己的githubID和注册的邮箱）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;Placebo27&quot;</span><br><span class=\"line\">git config --global user.email &quot;placeb0@qq.com&quot;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获取本地SSH公钥\"><a href=\"#获取本地SSH公钥\" class=\"headerlink\" title=\"获取本地SSH公钥\"></a>获取本地SSH公钥</h4><p><strong>生成SSH公私钥对</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure>\n\n<p>一共四次回车，第二次回车前输入<code>y</code></p>\n<p><strong>复制SSH公钥</strong></p>\n<p>在上一步SSH生成成功后的文件路径<code>C:/Users/用户名/.ssh</code>中找到<code>id_rsa.pub</code>文件，用文件编辑器打开并复制其内容；或者使用如下命令复制其内容（cmd或者Bash中皆可）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip &lt; C:/Users/用户名/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Github添加SSH-key\"><a href=\"#Github添加SSH-key\" class=\"headerlink\" title=\"Github添加SSH key\"></a>Github添加SSH key</h4><p>打开 github 点击头像 -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key 新建 SSH key：</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680956656990.png\" alt=\"1680956656990\"></p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680956631099.png\" alt=\"1680956631099\"></p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680956679681.png\" alt=\"1680956679681\"></p>\n<p>Title可以随便起，将上述SSH公钥粘贴到Key文本框中：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680957120218.png\" alt=\"1680957120218\"></p>\n<h4 id=\"测试SSH-key是否配置成功\"><a href=\"#测试SSH-key是否配置成功\" class=\"headerlink\" title=\"测试SSH key是否配置成功\"></a>测试SSH key是否配置成功</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>第一次连接测试需要输入<code>yes</code>，若出现<code>successfully authenticated</code>则配置成功。</p>\n<h4 id=\"Git修改deploy配置项\"><a href=\"#Git修改deploy配置项\" class=\"headerlink\" title=\"Git修改deploy配置项\"></a>Git修改deploy配置项</h4><p>打开<code>Blog/_config.yml</code>，修改底部deploy配置项：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: 你的github仓库地址</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-deployer-git自动部署发布工具安装\"><a href=\"#hexo-deployer-git自动部署发布工具安装\" class=\"headerlink\" title=\"hexo-deployer-git自动部署发布工具安装\"></a>hexo-deployer-git自动部署发布工具安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680875583179.png\" alt=\"1680875583179\"></p>\n<h3 id=\"生成public上传文件夹\"><a href=\"#生成public上传文件夹\" class=\"headerlink\" title=\"生成public上传文件夹\"></a>生成public上传文件夹</h3><p>进入到<code>Blog</code>博客根目录下，右键选择<code>Git Bash Here</code>：</p>\n<p>如果不是首次上传则先清除本地的缓存（首次上传清不清除无所谓）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">或者hexo cl</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">或者hexo g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680876225334.png\" alt=\"1680876225334\"></p>\n<h3 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h3><p>将生成的public文件夹部署到github上，把本地hexo博客内容提交到github仓库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br><span class=\"line\">或者hexo d</span><br></pre></td></tr></table></figure>\n\n<p>如果发生如下报错：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680876607176.png\" alt=\"1680876607176\"></p>\n<p>出现该问题不要惊慌，这个错误其实很简单，是因为同步文件缺失导致的，很明显我们push的hexo静态文件会缺失README.md这个文件，所以我们只需要把远端的README.md文件同步下来或者新建一个readme.md文档即可。</p>\n<p>这里我选择新建README.md文档。（此操作后来发现，没什么用，但是也记录下来）</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680877252167.png\" alt=\"1680877252167\"></p>\n<p><strong>实际解决方法：</strong></p>\n<p> 1.在文件浏览器中勾选显示隐藏的项目 </p>\n<p> 2.进入我们博客目录的<code>.deploy_git.git</code>子目录，找到config文件。 </p>\n<p> 3.打开config文件，添加以下内容 ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[user]</span><br><span class=\"line\">\temail=你的邮箱</span><br><span class=\"line\">\tname=GitHub用户名</span><br></pre></td></tr></table></figure>\n\n<p>若又出现以下错误，无法访问错误， 不要惊慌，多次尝试，或者更换网络再次尝试（加速器）：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680877644122.png\" alt=\"1680877644122\"></p>\n<p>然后会弹出一个小窗口，登陆你的github账户进行连接，链接成功你会收到一封邮件。</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680877867261.png\" alt=\"1680877867261\"></p>\n<p>这样就成功了，打开你的github个人仓库会看到你推送的文件。</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680878108104.png\" alt=\"1680878108104\"></p>\n<p>然后通过你的仓库后面的链接<code>https://username.github.io</code>访问你的个人博客。</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680878256004.png\" alt=\"1680878256004\"></p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680878360529.png\" alt=\"1680878360529\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hexo-amp-Github搭建个人博客\"><a href=\"#Hexo-amp-Github搭建个人博客\" class=\"headerlink\" title=\"Hexo&amp;Github搭建个人博客\"></a>Hexo&amp;Github搭建个人博客</h1><h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><blockquote>\n<p>教程：<a href=\"https://blog.csdn.net/weixin_52799373/article/details/123840137\">nodejs安装和环境配置-Windows_nodejs安装及环境配置</a> </p>\n</blockquote>\n<h2 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h2><blockquote>\n<p>教程：<a href=\"https://www.cnblogs.com/xueweisuoyong/p/11914045.html\">Windows系统Git安装教程（详解Git安装过程）</a> </p>\n</blockquote>\n<h2 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h2><p>创建一个名为<code>Blog</code>的文件，作为博客根目录，在里面右键启用<code>Git Bash Here</code></p>\n<h3 id=\"Hexo安装\"><a href=\"#Hexo安装\" class=\"headerlink\" title=\"Hexo安装\"></a>Hexo安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"初始化Hexo博客\"><a href=\"#初始化Hexo博客\" class=\"headerlink\" title=\"初始化Hexo博客\"></a>初始化Hexo博客</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n\n<p>如下图所示即为成功：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873666633.png\" alt=\"1680873666633\"></p>\n<h3 id=\"生成本地Hexo页面\"><a href=\"#生成本地Hexo页面\" class=\"headerlink\" title=\"生成本地Hexo页面\"></a>生成本地Hexo页面</h3><p>搭建本地博客完成后若想再次在本地访问博客则可直接从此步骤开始。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br><span class=\"line\">或者hexo s</span><br></pre></td></tr></table></figure>\n\n<p>如下图所示即为成功：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873683510.png\" alt=\"1680873683510\"></p>\n<p>然后在浏览器中打开<code>http://localhost:4000/</code>，就能看到本地博客；按下<code>Ctrl+C</code>则关闭本地服务器。</p>\n<h2 id=\"Github部署\"><a href=\"#Github部署\" class=\"headerlink\" title=\"Github部署\"></a>Github部署</h2><h3 id=\"github注册\"><a href=\"#github注册\" class=\"headerlink\" title=\"github注册\"></a>github注册</h3><blockquote>\n<p>官方网址：<a href=\"https://github.com/\">GitHub</a> </p>\n</blockquote>\n<p>点击右上角<code>Sign up</code>完成注册。</p>\n<h3 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3><p>在github个人首页，点击<code>Create repository</code>，如下图所示：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873809468.png\" alt=\"1680873809468\"></p>\n<p>命名为<code>username.github.io</code>（username 是你的用户名)，如下图：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680873944366.png\" alt=\"1680873944366\"></p>\n<p>如果创建成功后页面为404，则尝试挂一下加速器，改host可能会有此问题，或者裸连。</p>\n<p>创建成功后能在右上角Code选项下看见仓库的地址，这个仓库地址后面会用到。</p>\n<h3 id=\"Git与github配置\"><a href=\"#Git与github配置\" class=\"headerlink\" title=\"Git与github配置\"></a>Git与github配置</h3><p>此处为全局配置，所以可以在任意位置打开git bash, 设置用户名称和邮件地址（替换成自己的githubID和注册的邮箱）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;Placebo27&quot;</span><br><span class=\"line\">git config --global user.email &quot;placeb0@qq.com&quot;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获取本地SSH公钥\"><a href=\"#获取本地SSH公钥\" class=\"headerlink\" title=\"获取本地SSH公钥\"></a>获取本地SSH公钥</h4><p><strong>生成SSH公私钥对</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure>\n\n<p>一共四次回车，第二次回车前输入<code>y</code></p>\n<p><strong>复制SSH公钥</strong></p>\n<p>在上一步SSH生成成功后的文件路径<code>C:/Users/用户名/.ssh</code>中找到<code>id_rsa.pub</code>文件，用文件编辑器打开并复制其内容；或者使用如下命令复制其内容（cmd或者Bash中皆可）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip &lt; C:/Users/用户名/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Github添加SSH-key\"><a href=\"#Github添加SSH-key\" class=\"headerlink\" title=\"Github添加SSH key\"></a>Github添加SSH key</h4><p>打开 github 点击头像 -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key 新建 SSH key：</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680956656990.png\" alt=\"1680956656990\"></p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680956631099.png\" alt=\"1680956631099\"></p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680956679681.png\" alt=\"1680956679681\"></p>\n<p>Title可以随便起，将上述SSH公钥粘贴到Key文本框中：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680957120218.png\" alt=\"1680957120218\"></p>\n<h4 id=\"测试SSH-key是否配置成功\"><a href=\"#测试SSH-key是否配置成功\" class=\"headerlink\" title=\"测试SSH key是否配置成功\"></a>测试SSH key是否配置成功</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>第一次连接测试需要输入<code>yes</code>，若出现<code>successfully authenticated</code>则配置成功。</p>\n<h4 id=\"Git修改deploy配置项\"><a href=\"#Git修改deploy配置项\" class=\"headerlink\" title=\"Git修改deploy配置项\"></a>Git修改deploy配置项</h4><p>打开<code>Blog/_config.yml</code>，修改底部deploy配置项：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: 你的github仓库地址</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-deployer-git自动部署发布工具安装\"><a href=\"#hexo-deployer-git自动部署发布工具安装\" class=\"headerlink\" title=\"hexo-deployer-git自动部署发布工具安装\"></a>hexo-deployer-git自动部署发布工具安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680875583179.png\" alt=\"1680875583179\"></p>\n<h3 id=\"生成public上传文件夹\"><a href=\"#生成public上传文件夹\" class=\"headerlink\" title=\"生成public上传文件夹\"></a>生成public上传文件夹</h3><p>进入到<code>Blog</code>博客根目录下，右键选择<code>Git Bash Here</code>：</p>\n<p>如果不是首次上传则先清除本地的缓存（首次上传清不清除无所谓）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">或者hexo cl</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">或者hexo g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680876225334.png\" alt=\"1680876225334\"></p>\n<h3 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h3><p>将生成的public文件夹部署到github上，把本地hexo博客内容提交到github仓库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br><span class=\"line\">或者hexo d</span><br></pre></td></tr></table></figure>\n\n<p>如果发生如下报错：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680876607176.png\" alt=\"1680876607176\"></p>\n<p>出现该问题不要惊慌，这个错误其实很简单，是因为同步文件缺失导致的，很明显我们push的hexo静态文件会缺失README.md这个文件，所以我们只需要把远端的README.md文件同步下来或者新建一个readme.md文档即可。</p>\n<p>这里我选择新建README.md文档。（此操作后来发现，没什么用，但是也记录下来）</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680877252167.png\" alt=\"1680877252167\"></p>\n<p><strong>实际解决方法：</strong></p>\n<p> 1.在文件浏览器中勾选显示隐藏的项目 </p>\n<p> 2.进入我们博客目录的<code>.deploy_git.git</code>子目录，找到config文件。 </p>\n<p> 3.打开config文件，添加以下内容 ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[user]</span><br><span class=\"line\">\temail=你的邮箱</span><br><span class=\"line\">\tname=GitHub用户名</span><br></pre></td></tr></table></figure>\n\n<p>若又出现以下错误，无法访问错误， 不要惊慌，多次尝试，或者更换网络再次尝试（加速器）：<img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680877644122.png\" alt=\"1680877644122\"></p>\n<p>然后会弹出一个小窗口，登陆你的github账户进行连接，链接成功你会收到一封邮件。</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680877867261.png\" alt=\"1680877867261\"></p>\n<p>这样就成功了，打开你的github个人仓库会看到你推送的文件。</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680878108104.png\" alt=\"1680878108104\"></p>\n<p>然后通过你的仓库后面的链接<code>https://username.github.io</code>访问你的个人博客。</p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680878256004.png\" alt=\"1680878256004\"></p>\n<p><img src=\"/images/Hexo&Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1680878360529.png\" alt=\"1680878360529\"></p>\n"},{"title":"JavaScript学习路线","date":"2023-06-02T16:04:22.000Z","_content":"\n# JavaScript学习路线\n\n学习JavaScript的路线可以分为以下几个阶段。在学习过程中，你可以多做实践项目，加深对知识点的理解。\n\n## 基础知识\n\n学习JavaScript需要掌握以下基础内容：\n\n1. 基本语法和数据类型：JavaScript是一种弱类型脚本语言，需要掌握变量、运算符、控制流语句等基本语法，以及基本的数据类型（数字、字符串、布尔、数组、对象等）。\n2. 学习HTML和CSS的基本知识，它们是与JavaScript一起构建网页的关键技术。\n3. DOM操作：DOM是文档对象模型，用于操作HTML和XML文档中的元素。JavaScript可以操作DOM树，控制网页的元素和属性，实现动态交互效果。\n4. 事件处理：JavaScript可以响应用户的事件，例如鼠标点击，键盘输入等。需要掌握事件类型和事件处理函数的编写方法。\n5. Ajax和JSON：Ajax可以在不刷新整个网页的情况下向服务器发送请求和接收响应，实现动态交互。JSON是一种轻量级的数据交换格式，常用于数据的传输和通信。\n6. jQuery库：jQuery是一个流行的JavaScript库，集成了丰富的DOM操作和Ajax请求等功能，可以方便地实现各种交互效果，减少了代码的编写量。\n7. Node.js：Node.js是基于JavaScript语言开发的后端服务器框架，可以使用JavaScript编写服务器端程序，实现高效的网络应用。\n8. ES6语法和模块化：ES6是JavaScript的最新标准，引入了很多新的语法和特性，例如let和const关键字、箭头函数、模板字符串、类和继承等。模块化可以让JavaScript代码更加可维护和可扩展，方便了大型项目的开发。\n\n推荐资源：\n\n- [MDN Web Docs](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript)\n- [W3Schools](https://www.w3schools.com/js/)\n\n## 进阶知识\n\n- 深入理解函数及闭包，学习高阶函数、回调函数等概念。\n- 学习异步编程，包括回调、Promise、async/await等。\n- 熟悉ES6（ECMAScript 2015）及之后的新特性，例如箭头函数、解构赋值、模块化等。\n- 学习浏览器中的API，例如Fetch API、Web Storage、Geolocation等。\n\n推荐资源：\n\n- [You Don't Know JS (book series)](https://github.com/getify/You-Dont-Know-JS)\n- [JavaScript.info](https://zh.javascript.info/)\n\n## 框架和库\n\n- 学习常用的JavaScript库，例如jQuery、Lodash等。\n- 学习至少一个流行的前端框架，例如React、Vue或Angular。\n- 了解Node.js，学习后端JavaScript编程及相关框架（如Express）。\n\n推荐资源：\n\n- [React 官方文档](https://zh-hans.reactjs.org/)\n- [Vue 官方文档](https://cn.vuejs.org/)\n- [Angular 官方文档](https://angular.cn/)\n- [Node.js 官方文档](https://nodejs.org/zh-cn/docs/)\n\n## 工程实践和工具\n\n- 学习使用版本控制系统，如Git。\n- 了解前端构建工具，如Webpack、Rollup等。\n- 学习前端测试框架，如Jest、Mocha等。\n- 掌握代码质量工具，如ESLint、Prettier等。\n\n推荐资源：\n\n- [Pro Git（中文版）](https://git-scm.com/book/zh/v2)\n- [Webpack 官方文档](https://webpack.js.org/concepts/)\n- [Jest 官方文档](https://jestjs.io/zh-Hans/)\n\n## 持续学习\n\n- 阅读技术博客、论坛、专栏，关注JavaScript的新特性和最佳实践。\n- 参与开源项目，提升自己的编程能力和协作能力。\n- 学习其他前端技术，如WebGL、WebRTC、WebAssembly等。\n\n根据上述学习路线，你可以逐步掌握JavaScript编程的各个方面。祝你学习愉快！\n\n## 适合初学者的JavaScript练手项目\n\n对于初学者来说，从简单的项目开始练手是非常有帮助的。以下是一些建议的JavaScript练手项目：\n\n1. **计算器**：实现一个简单的计算器，支持加减乘除等基本运算。可以练习HTML、CSS和JavaScript的基本知识。\n\n2. **待办事项应用**：创建一个待办事项列表应用，允许用户添加、删除和修改待办事项。可以学习DOM操作和事件处理。\n\n3. **天气应用**：利用公开的天气API，创建一个查询天气的应用。可以学习对接外部API和异步编程。\n\n4. **简单的问答小游戏**：设计一个简单的问答小游戏，例如猜数字游戏、成语接龙等。可以练习逻辑处理和事件处理。\n\n5. **图片轮播**：实现一个图片轮播组件，可以自动轮播，支持用户手动切换图片。可以学习CSS动画和JavaScript定时器。\n\n6. **Markdown预览器**：创建一个Markdown预览器，允许用户输入Markdown文本，并实时预览渲染后的HTML。可以学习使用第三方库。\n\n7. **货币转换器**：实现一个货币转换器，允许用户输入金额和选择货币类型，实时计算转换结果。可以学习处理用户输入和调用API。\n\n8. **简单的博客系统**：创建一个简单的博客系统，支持展示博客列表、查看博客详情等功能。可以学习前端路由和数据展示。\n\n在完成这些项目时，请尝试使用原生JavaScript，以便更好地理解基本概念。当你对JavaScript有了更深入的了解后，可以使用前端框架（如React、Vue或Angular）尝试更复杂的项目。同时，不要忘了查阅相关文档和学习资源来解决遇到的问题。祝你学习顺利！\n","source":"_posts/JavaScript学习路线.md","raw":"---\ntitle: JavaScript学习路线\ntags:\n  - JavaScript\ncategories:\n  - 前端\n  - JavaScript\ndate: 2023-06-03 00:04:22\n\n---\n\n# JavaScript学习路线\n\n学习JavaScript的路线可以分为以下几个阶段。在学习过程中，你可以多做实践项目，加深对知识点的理解。\n\n## 基础知识\n\n学习JavaScript需要掌握以下基础内容：\n\n1. 基本语法和数据类型：JavaScript是一种弱类型脚本语言，需要掌握变量、运算符、控制流语句等基本语法，以及基本的数据类型（数字、字符串、布尔、数组、对象等）。\n2. 学习HTML和CSS的基本知识，它们是与JavaScript一起构建网页的关键技术。\n3. DOM操作：DOM是文档对象模型，用于操作HTML和XML文档中的元素。JavaScript可以操作DOM树，控制网页的元素和属性，实现动态交互效果。\n4. 事件处理：JavaScript可以响应用户的事件，例如鼠标点击，键盘输入等。需要掌握事件类型和事件处理函数的编写方法。\n5. Ajax和JSON：Ajax可以在不刷新整个网页的情况下向服务器发送请求和接收响应，实现动态交互。JSON是一种轻量级的数据交换格式，常用于数据的传输和通信。\n6. jQuery库：jQuery是一个流行的JavaScript库，集成了丰富的DOM操作和Ajax请求等功能，可以方便地实现各种交互效果，减少了代码的编写量。\n7. Node.js：Node.js是基于JavaScript语言开发的后端服务器框架，可以使用JavaScript编写服务器端程序，实现高效的网络应用。\n8. ES6语法和模块化：ES6是JavaScript的最新标准，引入了很多新的语法和特性，例如let和const关键字、箭头函数、模板字符串、类和继承等。模块化可以让JavaScript代码更加可维护和可扩展，方便了大型项目的开发。\n\n推荐资源：\n\n- [MDN Web Docs](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript)\n- [W3Schools](https://www.w3schools.com/js/)\n\n## 进阶知识\n\n- 深入理解函数及闭包，学习高阶函数、回调函数等概念。\n- 学习异步编程，包括回调、Promise、async/await等。\n- 熟悉ES6（ECMAScript 2015）及之后的新特性，例如箭头函数、解构赋值、模块化等。\n- 学习浏览器中的API，例如Fetch API、Web Storage、Geolocation等。\n\n推荐资源：\n\n- [You Don't Know JS (book series)](https://github.com/getify/You-Dont-Know-JS)\n- [JavaScript.info](https://zh.javascript.info/)\n\n## 框架和库\n\n- 学习常用的JavaScript库，例如jQuery、Lodash等。\n- 学习至少一个流行的前端框架，例如React、Vue或Angular。\n- 了解Node.js，学习后端JavaScript编程及相关框架（如Express）。\n\n推荐资源：\n\n- [React 官方文档](https://zh-hans.reactjs.org/)\n- [Vue 官方文档](https://cn.vuejs.org/)\n- [Angular 官方文档](https://angular.cn/)\n- [Node.js 官方文档](https://nodejs.org/zh-cn/docs/)\n\n## 工程实践和工具\n\n- 学习使用版本控制系统，如Git。\n- 了解前端构建工具，如Webpack、Rollup等。\n- 学习前端测试框架，如Jest、Mocha等。\n- 掌握代码质量工具，如ESLint、Prettier等。\n\n推荐资源：\n\n- [Pro Git（中文版）](https://git-scm.com/book/zh/v2)\n- [Webpack 官方文档](https://webpack.js.org/concepts/)\n- [Jest 官方文档](https://jestjs.io/zh-Hans/)\n\n## 持续学习\n\n- 阅读技术博客、论坛、专栏，关注JavaScript的新特性和最佳实践。\n- 参与开源项目，提升自己的编程能力和协作能力。\n- 学习其他前端技术，如WebGL、WebRTC、WebAssembly等。\n\n根据上述学习路线，你可以逐步掌握JavaScript编程的各个方面。祝你学习愉快！\n\n## 适合初学者的JavaScript练手项目\n\n对于初学者来说，从简单的项目开始练手是非常有帮助的。以下是一些建议的JavaScript练手项目：\n\n1. **计算器**：实现一个简单的计算器，支持加减乘除等基本运算。可以练习HTML、CSS和JavaScript的基本知识。\n\n2. **待办事项应用**：创建一个待办事项列表应用，允许用户添加、删除和修改待办事项。可以学习DOM操作和事件处理。\n\n3. **天气应用**：利用公开的天气API，创建一个查询天气的应用。可以学习对接外部API和异步编程。\n\n4. **简单的问答小游戏**：设计一个简单的问答小游戏，例如猜数字游戏、成语接龙等。可以练习逻辑处理和事件处理。\n\n5. **图片轮播**：实现一个图片轮播组件，可以自动轮播，支持用户手动切换图片。可以学习CSS动画和JavaScript定时器。\n\n6. **Markdown预览器**：创建一个Markdown预览器，允许用户输入Markdown文本，并实时预览渲染后的HTML。可以学习使用第三方库。\n\n7. **货币转换器**：实现一个货币转换器，允许用户输入金额和选择货币类型，实时计算转换结果。可以学习处理用户输入和调用API。\n\n8. **简单的博客系统**：创建一个简单的博客系统，支持展示博客列表、查看博客详情等功能。可以学习前端路由和数据展示。\n\n在完成这些项目时，请尝试使用原生JavaScript，以便更好地理解基本概念。当你对JavaScript有了更深入的了解后，可以使用前端框架（如React、Vue或Angular）尝试更复杂的项目。同时，不要忘了查阅相关文档和学习资源来解决遇到的问题。祝你学习顺利！\n","slug":"JavaScript学习路线","published":1,"updated":"2023-06-02T16:05:30.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliesczs30007dcfy3pquhh7r","content":"<h1 id=\"JavaScript学习路线\"><a href=\"#JavaScript学习路线\" class=\"headerlink\" title=\"JavaScript学习路线\"></a>JavaScript学习路线</h1><p>学习JavaScript的路线可以分为以下几个阶段。在学习过程中，你可以多做实践项目，加深对知识点的理解。</p>\n<h2 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h2><p>学习JavaScript需要掌握以下基础内容：</p>\n<ol>\n<li>基本语法和数据类型：JavaScript是一种弱类型脚本语言，需要掌握变量、运算符、控制流语句等基本语法，以及基本的数据类型（数字、字符串、布尔、数组、对象等）。</li>\n<li>学习HTML和CSS的基本知识，它们是与JavaScript一起构建网页的关键技术。</li>\n<li>DOM操作：DOM是文档对象模型，用于操作HTML和XML文档中的元素。JavaScript可以操作DOM树，控制网页的元素和属性，实现动态交互效果。</li>\n<li>事件处理：JavaScript可以响应用户的事件，例如鼠标点击，键盘输入等。需要掌握事件类型和事件处理函数的编写方法。</li>\n<li>Ajax和JSON：Ajax可以在不刷新整个网页的情况下向服务器发送请求和接收响应，实现动态交互。JSON是一种轻量级的数据交换格式，常用于数据的传输和通信。</li>\n<li>jQuery库：jQuery是一个流行的JavaScript库，集成了丰富的DOM操作和Ajax请求等功能，可以方便地实现各种交互效果，减少了代码的编写量。</li>\n<li>Node.js：Node.js是基于JavaScript语言开发的后端服务器框架，可以使用JavaScript编写服务器端程序，实现高效的网络应用。</li>\n<li>ES6语法和模块化：ES6是JavaScript的最新标准，引入了很多新的语法和特性，例如let和const关键字、箭头函数、模板字符串、类和继承等。模块化可以让JavaScript代码更加可维护和可扩展，方便了大型项目的开发。</li>\n</ol>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">MDN Web Docs</a></li>\n<li><a href=\"https://www.w3schools.com/js/\">W3Schools</a></li>\n</ul>\n<h2 id=\"进阶知识\"><a href=\"#进阶知识\" class=\"headerlink\" title=\"进阶知识\"></a>进阶知识</h2><ul>\n<li>深入理解函数及闭包，学习高阶函数、回调函数等概念。</li>\n<li>学习异步编程，包括回调、Promise、async/await等。</li>\n<li>熟悉ES6（ECMAScript 2015）及之后的新特性，例如箭头函数、解构赋值、模块化等。</li>\n<li>学习浏览器中的API，例如Fetch API、Web Storage、Geolocation等。</li>\n</ul>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://github.com/getify/You-Dont-Know-JS\">You Don’t Know JS (book series)</a></li>\n<li><a href=\"https://zh.javascript.info/\">JavaScript.info</a></li>\n</ul>\n<h2 id=\"框架和库\"><a href=\"#框架和库\" class=\"headerlink\" title=\"框架和库\"></a>框架和库</h2><ul>\n<li>学习常用的JavaScript库，例如jQuery、Lodash等。</li>\n<li>学习至少一个流行的前端框架，例如React、Vue或Angular。</li>\n<li>了解Node.js，学习后端JavaScript编程及相关框架（如Express）。</li>\n</ul>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://zh-hans.reactjs.org/\">React 官方文档</a></li>\n<li><a href=\"https://cn.vuejs.org/\">Vue 官方文档</a></li>\n<li><a href=\"https://angular.cn/\">Angular 官方文档</a></li>\n<li><a href=\"https://nodejs.org/zh-cn/docs/\">Node.js 官方文档</a></li>\n</ul>\n<h2 id=\"工程实践和工具\"><a href=\"#工程实践和工具\" class=\"headerlink\" title=\"工程实践和工具\"></a>工程实践和工具</h2><ul>\n<li>学习使用版本控制系统，如Git。</li>\n<li>了解前端构建工具，如Webpack、Rollup等。</li>\n<li>学习前端测试框架，如Jest、Mocha等。</li>\n<li>掌握代码质量工具，如ESLint、Prettier等。</li>\n</ul>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/zh/v2\">Pro Git（中文版）</a></li>\n<li><a href=\"https://webpack.js.org/concepts/\">Webpack 官方文档</a></li>\n<li><a href=\"https://jestjs.io/zh-Hans/\">Jest 官方文档</a></li>\n</ul>\n<h2 id=\"持续学习\"><a href=\"#持续学习\" class=\"headerlink\" title=\"持续学习\"></a>持续学习</h2><ul>\n<li>阅读技术博客、论坛、专栏，关注JavaScript的新特性和最佳实践。</li>\n<li>参与开源项目，提升自己的编程能力和协作能力。</li>\n<li>学习其他前端技术，如WebGL、WebRTC、WebAssembly等。</li>\n</ul>\n<p>根据上述学习路线，你可以逐步掌握JavaScript编程的各个方面。祝你学习愉快！</p>\n<h2 id=\"适合初学者的JavaScript练手项目\"><a href=\"#适合初学者的JavaScript练手项目\" class=\"headerlink\" title=\"适合初学者的JavaScript练手项目\"></a>适合初学者的JavaScript练手项目</h2><p>对于初学者来说，从简单的项目开始练手是非常有帮助的。以下是一些建议的JavaScript练手项目：</p>\n<ol>\n<li><p><strong>计算器</strong>：实现一个简单的计算器，支持加减乘除等基本运算。可以练习HTML、CSS和JavaScript的基本知识。</p>\n</li>\n<li><p><strong>待办事项应用</strong>：创建一个待办事项列表应用，允许用户添加、删除和修改待办事项。可以学习DOM操作和事件处理。</p>\n</li>\n<li><p><strong>天气应用</strong>：利用公开的天气API，创建一个查询天气的应用。可以学习对接外部API和异步编程。</p>\n</li>\n<li><p><strong>简单的问答小游戏</strong>：设计一个简单的问答小游戏，例如猜数字游戏、成语接龙等。可以练习逻辑处理和事件处理。</p>\n</li>\n<li><p><strong>图片轮播</strong>：实现一个图片轮播组件，可以自动轮播，支持用户手动切换图片。可以学习CSS动画和JavaScript定时器。</p>\n</li>\n<li><p><strong>Markdown预览器</strong>：创建一个Markdown预览器，允许用户输入Markdown文本，并实时预览渲染后的HTML。可以学习使用第三方库。</p>\n</li>\n<li><p><strong>货币转换器</strong>：实现一个货币转换器，允许用户输入金额和选择货币类型，实时计算转换结果。可以学习处理用户输入和调用API。</p>\n</li>\n<li><p><strong>简单的博客系统</strong>：创建一个简单的博客系统，支持展示博客列表、查看博客详情等功能。可以学习前端路由和数据展示。</p>\n</li>\n</ol>\n<p>在完成这些项目时，请尝试使用原生JavaScript，以便更好地理解基本概念。当你对JavaScript有了更深入的了解后，可以使用前端框架（如React、Vue或Angular）尝试更复杂的项目。同时，不要忘了查阅相关文档和学习资源来解决遇到的问题。祝你学习顺利！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"JavaScript学习路线\"><a href=\"#JavaScript学习路线\" class=\"headerlink\" title=\"JavaScript学习路线\"></a>JavaScript学习路线</h1><p>学习JavaScript的路线可以分为以下几个阶段。在学习过程中，你可以多做实践项目，加深对知识点的理解。</p>\n<h2 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h2><p>学习JavaScript需要掌握以下基础内容：</p>\n<ol>\n<li>基本语法和数据类型：JavaScript是一种弱类型脚本语言，需要掌握变量、运算符、控制流语句等基本语法，以及基本的数据类型（数字、字符串、布尔、数组、对象等）。</li>\n<li>学习HTML和CSS的基本知识，它们是与JavaScript一起构建网页的关键技术。</li>\n<li>DOM操作：DOM是文档对象模型，用于操作HTML和XML文档中的元素。JavaScript可以操作DOM树，控制网页的元素和属性，实现动态交互效果。</li>\n<li>事件处理：JavaScript可以响应用户的事件，例如鼠标点击，键盘输入等。需要掌握事件类型和事件处理函数的编写方法。</li>\n<li>Ajax和JSON：Ajax可以在不刷新整个网页的情况下向服务器发送请求和接收响应，实现动态交互。JSON是一种轻量级的数据交换格式，常用于数据的传输和通信。</li>\n<li>jQuery库：jQuery是一个流行的JavaScript库，集成了丰富的DOM操作和Ajax请求等功能，可以方便地实现各种交互效果，减少了代码的编写量。</li>\n<li>Node.js：Node.js是基于JavaScript语言开发的后端服务器框架，可以使用JavaScript编写服务器端程序，实现高效的网络应用。</li>\n<li>ES6语法和模块化：ES6是JavaScript的最新标准，引入了很多新的语法和特性，例如let和const关键字、箭头函数、模板字符串、类和继承等。模块化可以让JavaScript代码更加可维护和可扩展，方便了大型项目的开发。</li>\n</ol>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">MDN Web Docs</a></li>\n<li><a href=\"https://www.w3schools.com/js/\">W3Schools</a></li>\n</ul>\n<h2 id=\"进阶知识\"><a href=\"#进阶知识\" class=\"headerlink\" title=\"进阶知识\"></a>进阶知识</h2><ul>\n<li>深入理解函数及闭包，学习高阶函数、回调函数等概念。</li>\n<li>学习异步编程，包括回调、Promise、async/await等。</li>\n<li>熟悉ES6（ECMAScript 2015）及之后的新特性，例如箭头函数、解构赋值、模块化等。</li>\n<li>学习浏览器中的API，例如Fetch API、Web Storage、Geolocation等。</li>\n</ul>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://github.com/getify/You-Dont-Know-JS\">You Don’t Know JS (book series)</a></li>\n<li><a href=\"https://zh.javascript.info/\">JavaScript.info</a></li>\n</ul>\n<h2 id=\"框架和库\"><a href=\"#框架和库\" class=\"headerlink\" title=\"框架和库\"></a>框架和库</h2><ul>\n<li>学习常用的JavaScript库，例如jQuery、Lodash等。</li>\n<li>学习至少一个流行的前端框架，例如React、Vue或Angular。</li>\n<li>了解Node.js，学习后端JavaScript编程及相关框架（如Express）。</li>\n</ul>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://zh-hans.reactjs.org/\">React 官方文档</a></li>\n<li><a href=\"https://cn.vuejs.org/\">Vue 官方文档</a></li>\n<li><a href=\"https://angular.cn/\">Angular 官方文档</a></li>\n<li><a href=\"https://nodejs.org/zh-cn/docs/\">Node.js 官方文档</a></li>\n</ul>\n<h2 id=\"工程实践和工具\"><a href=\"#工程实践和工具\" class=\"headerlink\" title=\"工程实践和工具\"></a>工程实践和工具</h2><ul>\n<li>学习使用版本控制系统，如Git。</li>\n<li>了解前端构建工具，如Webpack、Rollup等。</li>\n<li>学习前端测试框架，如Jest、Mocha等。</li>\n<li>掌握代码质量工具，如ESLint、Prettier等。</li>\n</ul>\n<p>推荐资源：</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/zh/v2\">Pro Git（中文版）</a></li>\n<li><a href=\"https://webpack.js.org/concepts/\">Webpack 官方文档</a></li>\n<li><a href=\"https://jestjs.io/zh-Hans/\">Jest 官方文档</a></li>\n</ul>\n<h2 id=\"持续学习\"><a href=\"#持续学习\" class=\"headerlink\" title=\"持续学习\"></a>持续学习</h2><ul>\n<li>阅读技术博客、论坛、专栏，关注JavaScript的新特性和最佳实践。</li>\n<li>参与开源项目，提升自己的编程能力和协作能力。</li>\n<li>学习其他前端技术，如WebGL、WebRTC、WebAssembly等。</li>\n</ul>\n<p>根据上述学习路线，你可以逐步掌握JavaScript编程的各个方面。祝你学习愉快！</p>\n<h2 id=\"适合初学者的JavaScript练手项目\"><a href=\"#适合初学者的JavaScript练手项目\" class=\"headerlink\" title=\"适合初学者的JavaScript练手项目\"></a>适合初学者的JavaScript练手项目</h2><p>对于初学者来说，从简单的项目开始练手是非常有帮助的。以下是一些建议的JavaScript练手项目：</p>\n<ol>\n<li><p><strong>计算器</strong>：实现一个简单的计算器，支持加减乘除等基本运算。可以练习HTML、CSS和JavaScript的基本知识。</p>\n</li>\n<li><p><strong>待办事项应用</strong>：创建一个待办事项列表应用，允许用户添加、删除和修改待办事项。可以学习DOM操作和事件处理。</p>\n</li>\n<li><p><strong>天气应用</strong>：利用公开的天气API，创建一个查询天气的应用。可以学习对接外部API和异步编程。</p>\n</li>\n<li><p><strong>简单的问答小游戏</strong>：设计一个简单的问答小游戏，例如猜数字游戏、成语接龙等。可以练习逻辑处理和事件处理。</p>\n</li>\n<li><p><strong>图片轮播</strong>：实现一个图片轮播组件，可以自动轮播，支持用户手动切换图片。可以学习CSS动画和JavaScript定时器。</p>\n</li>\n<li><p><strong>Markdown预览器</strong>：创建一个Markdown预览器，允许用户输入Markdown文本，并实时预览渲染后的HTML。可以学习使用第三方库。</p>\n</li>\n<li><p><strong>货币转换器</strong>：实现一个货币转换器，允许用户输入金额和选择货币类型，实时计算转换结果。可以学习处理用户输入和调用API。</p>\n</li>\n<li><p><strong>简单的博客系统</strong>：创建一个简单的博客系统，支持展示博客列表、查看博客详情等功能。可以学习前端路由和数据展示。</p>\n</li>\n</ol>\n<p>在完成这些项目时，请尝试使用原生JavaScript，以便更好地理解基本概念。当你对JavaScript有了更深入的了解后，可以使用前端框架（如React、Vue或Angular）尝试更复杂的项目。同时，不要忘了查阅相关文档和学习资源来解决遇到的问题。祝你学习顺利！</p>\n"},{"title":"RT-Thread开源贡献入门级指南","date":"2023-06-02T16:33:29.000Z","_content":"\n## RT-Thread简介\n\nRT-Thread 是一款主要由中国开源社区主导开发的开源实时操作系统。据最新2021 RT-Thread开发者大会上官方公布的数据，其装机量已经超过14亿，开源企业用户已经有数万家，有超过100家国内外芯片厂家的支持，RT-Thread Studio工具拥有了超过15万用户。\n\n> RT-Thread文档中心：[RT-Thread 简介](https://www.rt-thread.org/document/site/#/rt-thread-version/rt-thread-standard/README) \n>\n> RT-Thread学习路线：[docs-online: RT-Thread在线文档中心 (gitee.com)](https://gitee.com/rtthread/docs-online#学习路线) \n>\n> 仓库地址：[RT-Thread](https://gitee.com/rtthread/rt-thread)\n\n### 将RT-Thread运行在开发板上\n\n以stm3232u575-st-nucleo为例，请参考下列说明文档（其他开发板同理）\n\n> NUCLEO-U575ZI-1开发板BSP说明：[rt-thread/README_zh.md at master · RT-Thread/rt-thread · GitHub](https://github.com/RT-Thread/rt-thread/blob/master/bsp/stm32/stm32u575-st-nucleo/README_zh.md) \n\n## RT-Thread开源贡献\n\n### 文档或注释修改类\n\n#### 失效链接\n\n对gitee下RT-Thread/docs-online项目——RT-Thread在线文档中心里的链接进行查阅，寻找失效的链接或是访问速度比较慢的重定向链接进行修复。\n\n**工作说明**\n\n1. 修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接，形如：`http://docs.micropython.org/en/latest/pyboard/library/`\n2. 不修复将会导致文档跳转访问速度变慢\n\n形成的第一个开源贡献成果如下：\n\n> [【修改】 修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接http://docs.micropython.org/en/latest/pyboard/library/ · Pull Request !490 · RT-Thread/docs-online - Gitee.com](https://gitee.com/rtthread/docs-online/pulls/490) \n\n### 安全修复类\n\n#### 数据类型使用不当\n\n> 问题描述：[[pin\\][5.0.0] 修正pin框架数据类型使用不当 by ZosCat1 · Pull Request #6934 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/6934) \n>\n> 修改示例：[[HUST CSE\\][bsp] fix mismatched function types in rt_pin_ops by hustlixiang21 · Pull Request #7161 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/7161) \n>\n> 同类修改示例：[[HUST CSE\\][bsp]fix mismatched function types in rt_pin_ops for all drv_gpio.c by hustlixiang21 · Pull Request #7185 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/7185) \n\n**工作说明**\n\n1. pin的数据类型有些采用uint16 有些使用rt_bsse_t, 还有些采用int16_t，应该统一为rt_base_t。\n2. 部分变量使用的数据类型明显超过其所需，例如enabled变量使用的是一个rt_uint32_t，但是这个变量只需要存储enable/disable二值即可，结果搞了个32位的整形。修改均是一些非重大影响，但是看起来非常难受的问题。影响到sensor框架重构。\n3. 把不匹配的参数类型修改成正确的类型。具体来说把drv_gpio.c中下列函数的形参或返回值修改为跟rt_pin_ops操作方法中的成员形参与返回值一致。重新修改drv_gpio.c中的函数原型。\n\nstruct rt_pin_ops原型：\n\n```\nstruct rt_pin_ops\n{\n    void (*pin_mode)(struct rt_device *device, rt_base_t pin, rt_uint8_t mode);\n    void (*pin_write)(struct rt_device *device, rt_base_t pin, rt_uint8_t value);\n    rt_int8_t  (*pin_read)(struct rt_device *device, rt_base_t pin);\n    rt_err_t (*pin_attach_irq)(struct rt_device *device, rt_base_t pin,\n            rt_uint8_t mode, void (*hdr)(void *args), void *args);\n    rt_err_t (*pin_detach_irq)(struct rt_device *device, rt_base_t pin);\n    rt_err_t (*pin_irq_enable)(struct rt_device *device, rt_base_t pin, rt_uint8_t enabled);\n    rt_base_t (*pin_get)(const char *name);\n};\n```\n\n将drv_gpio.c中下列函数形参或返回值改为与rt_pin_ops形参返回值类型一致，修改之后drv_gpio.c函数原型如下：\n\n```\nstatic void at32_pin_mode(rt_device_t dev, rt_base_t pin, rt_uint8_t mode)\nstatic void at32_pin_write(rt_device_t dev, rt_base_t pin, rt_uint8_t value)\nstatic rt_int8_t at32_pin_read(rt_device_t dev, rt_base_t pin)\nstatic rt_err_t at32_pin_attach_irq(struct rt_device *device, rt_base_t pin,\n                                    rt_uint8_t mode, void (*hdr)(void *args), void *args)\nstatic rt_err_t at32_pin_dettach_irq(struct rt_device *device, rt_base_t pin)\nstatic rt_err_t at32_pin_irq_enable(struct rt_device *device, rt_base_t pin,\n                                    rt_uint8_t enabled)\nstatic rt_base_t at32_pin_get(const char *name)\n```\n\n快速修改：\n\n> static ***void***  (rt_device_t dev, rt_base_t pin, **rt_uint8_t** mode) \n> static ***void***  (rt_device_t dev, rt_base_t pin, **rt_uint8_t** value)\n> static **rt_int8_t** (*rt_device_t dev, **rt_base_t** pin*)\n> **rt_int8_t** *value* = PIN_LOW;\n> static ***rt_err_t*** (struct rt_device \\*device, **rt_base_t** pin,\n>                                  **rt_uint8_t** mode, void (*hdr)(void *args), void *args)\n> static ***rt_err_t*** (struct rt_device \\*device, **rt_base_t** pin)\n> static ***rt_err_t*** (struct rt_device \\*device, rt_base_t pin,\n>                                  **rt_uint8_t** enabled)\n\n以此形成的第二个开源贡献成果如下：\n\n> [[bsp\\] fix mismatched function types in rt_pin_ops for all drv_gpio.c by Placebo27 · Pull Request #7457 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/7457) \n\n**小插曲**\n\n提交PR之后有个CI（Continuous Integration，持续集成）检测  **Check File Format and License / Scan code format and license** 不通过，原因是代码格式不规范，有些之前遗留下来的小问题比如空格之类的 。解决办法就是用官方的**源码格式自动化调整工具**跑一下。\n\n> Formatting源码格式自动化调整工具：[mysterywolf/formatting: 源码格式自动化调整工具 (github.com)](https://github.com/mysterywolf/formatting) \n\n### Formatting 源码格式自动化调整工具\n\n该文件会自动递归遍历**指定文件夹**下的所有文件或者**指定的文件**（默认对`.c`/`.h`/`.cpp`/`.hpp`，也可以改成你想要的文件类型）进行扫描：\n\n- 将源文件编码统一为UTF-8\n- 将TAB键替换为4空格\n- 将每行末尾多余的空格删除，并统一换行符为'\\n'\n- 将RT-Thread版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)\n- 将上海睿赛德版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)\n\n**工作路径**\n\n注意格式自动化调整工具的路径与所要遍历的文件路径之间的关系：\n\n```\n../rt-thread/\n```\n\n**部分遍历文件列表**\n\n> 1. ../rt-thread/bsp/allwinner/libraries/drivers/drv_pin.c\n> 2. ../rt-thread/bsp/apollo2/board/gpio.c\n> 3. ../rt-thread/bsp/beaglebone/drivers/gpio.c\n> 4. ../rt-thread/bsp/bouffalo_lab/libraries/rt_drivers/drv_gpio.c\n> 5. ../rt-thread/bsp/essemi/es32f0654/drivers/drv_gpio.c\n> 6. ../rt-thread/bsp/essemi/es32f369x/drivers/drv_gpio.c\n> 7. ../rt-thread/bsp/fm33lc026/libraries/HAL_Drivers/drv_gpio.c\n> 8. ../rt-thread/bsp/ft32/libraries/Drivers/drv_gpio.c\n> 9. ../rt-thread/bsp/gd32/arm/libraries/gd32_drivers/drv_gpio.c\n> 10. ../rt-thread/bsp/gd32/risc-v/libraries/gd32_drivers/drv_gpio.c\n> 11. ../rt-thread/bsp/gd32105c-eval/drivers/drv_gpio.c\n> 12. ../rt-thread/bsp/gd32107c-eval/drivers/drv_gpio.c\n> 13. ../rt-thread/bsp/gd32303e-eval/drivers/drv_gpio.c\n> 14. ../rt-thread/bsp/gd32350r-eval/drivers/drv_gpio.c\n> 15. ../rt-thread/bsp/gd32e230k-start/drivers/drv_gpio.c\n> 16. ../rt-thread/bsp/gd32vf103v-eval/drivers/drv_gpio.c\n> 17. ../rt-thread/bsp/hc32/libraries/hc32_drivers/drv_gpio.c\n> 18. ../rt-thread/bsp/hc32l136/drivers/drv_gpio.c\n> 19. ../rt-thread/bsp/hc32l196/drivers/drv_gpio.c\n> 20. ../rt-thread/bsp/hk32/libraries/rt_drivers/drv_gpio.c\n> 21. ../rt-thread/bsp/hpmicro/libraries/drivers/drv_gpio.c\n\n**人工判读**\n\nbsp/loongson/ls1cdev/drivers/drv_gpio.c\n\n**格式调整结果**\n\n> **Commit：**[bsp] Formatting  Source code format\n\n`git status`命令结果：\n\n```bash\n        modified:   bsp/hc32l136/drivers/drv_gpio.c\n        modified:   bsp/mm32l3xx/drivers/drv_gpio.c\n        modified:   bsp/rv32m1_vega/ri5cy/driver/drv_gpio.c\n        modified:   bsp/smartfusion2/drivers/drv_gpio.c\n```\n\n","source":"_posts/RT-Thread开源贡献入门级指南.md","raw":"---\ntitle: RT-Thread开源贡献入门级指南\ntags:\n  - github\n  - rt-thread\ncategories:\n  - 开源社区贡献\ndate: 2023-06-03 00:33:29\n\n---\n\n## RT-Thread简介\n\nRT-Thread 是一款主要由中国开源社区主导开发的开源实时操作系统。据最新2021 RT-Thread开发者大会上官方公布的数据，其装机量已经超过14亿，开源企业用户已经有数万家，有超过100家国内外芯片厂家的支持，RT-Thread Studio工具拥有了超过15万用户。\n\n> RT-Thread文档中心：[RT-Thread 简介](https://www.rt-thread.org/document/site/#/rt-thread-version/rt-thread-standard/README) \n>\n> RT-Thread学习路线：[docs-online: RT-Thread在线文档中心 (gitee.com)](https://gitee.com/rtthread/docs-online#学习路线) \n>\n> 仓库地址：[RT-Thread](https://gitee.com/rtthread/rt-thread)\n\n### 将RT-Thread运行在开发板上\n\n以stm3232u575-st-nucleo为例，请参考下列说明文档（其他开发板同理）\n\n> NUCLEO-U575ZI-1开发板BSP说明：[rt-thread/README_zh.md at master · RT-Thread/rt-thread · GitHub](https://github.com/RT-Thread/rt-thread/blob/master/bsp/stm32/stm32u575-st-nucleo/README_zh.md) \n\n## RT-Thread开源贡献\n\n### 文档或注释修改类\n\n#### 失效链接\n\n对gitee下RT-Thread/docs-online项目——RT-Thread在线文档中心里的链接进行查阅，寻找失效的链接或是访问速度比较慢的重定向链接进行修复。\n\n**工作说明**\n\n1. 修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接，形如：`http://docs.micropython.org/en/latest/pyboard/library/`\n2. 不修复将会导致文档跳转访问速度变慢\n\n形成的第一个开源贡献成果如下：\n\n> [【修改】 修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接http://docs.micropython.org/en/latest/pyboard/library/ · Pull Request !490 · RT-Thread/docs-online - Gitee.com](https://gitee.com/rtthread/docs-online/pulls/490) \n\n### 安全修复类\n\n#### 数据类型使用不当\n\n> 问题描述：[[pin\\][5.0.0] 修正pin框架数据类型使用不当 by ZosCat1 · Pull Request #6934 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/6934) \n>\n> 修改示例：[[HUST CSE\\][bsp] fix mismatched function types in rt_pin_ops by hustlixiang21 · Pull Request #7161 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/7161) \n>\n> 同类修改示例：[[HUST CSE\\][bsp]fix mismatched function types in rt_pin_ops for all drv_gpio.c by hustlixiang21 · Pull Request #7185 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/7185) \n\n**工作说明**\n\n1. pin的数据类型有些采用uint16 有些使用rt_bsse_t, 还有些采用int16_t，应该统一为rt_base_t。\n2. 部分变量使用的数据类型明显超过其所需，例如enabled变量使用的是一个rt_uint32_t，但是这个变量只需要存储enable/disable二值即可，结果搞了个32位的整形。修改均是一些非重大影响，但是看起来非常难受的问题。影响到sensor框架重构。\n3. 把不匹配的参数类型修改成正确的类型。具体来说把drv_gpio.c中下列函数的形参或返回值修改为跟rt_pin_ops操作方法中的成员形参与返回值一致。重新修改drv_gpio.c中的函数原型。\n\nstruct rt_pin_ops原型：\n\n```\nstruct rt_pin_ops\n{\n    void (*pin_mode)(struct rt_device *device, rt_base_t pin, rt_uint8_t mode);\n    void (*pin_write)(struct rt_device *device, rt_base_t pin, rt_uint8_t value);\n    rt_int8_t  (*pin_read)(struct rt_device *device, rt_base_t pin);\n    rt_err_t (*pin_attach_irq)(struct rt_device *device, rt_base_t pin,\n            rt_uint8_t mode, void (*hdr)(void *args), void *args);\n    rt_err_t (*pin_detach_irq)(struct rt_device *device, rt_base_t pin);\n    rt_err_t (*pin_irq_enable)(struct rt_device *device, rt_base_t pin, rt_uint8_t enabled);\n    rt_base_t (*pin_get)(const char *name);\n};\n```\n\n将drv_gpio.c中下列函数形参或返回值改为与rt_pin_ops形参返回值类型一致，修改之后drv_gpio.c函数原型如下：\n\n```\nstatic void at32_pin_mode(rt_device_t dev, rt_base_t pin, rt_uint8_t mode)\nstatic void at32_pin_write(rt_device_t dev, rt_base_t pin, rt_uint8_t value)\nstatic rt_int8_t at32_pin_read(rt_device_t dev, rt_base_t pin)\nstatic rt_err_t at32_pin_attach_irq(struct rt_device *device, rt_base_t pin,\n                                    rt_uint8_t mode, void (*hdr)(void *args), void *args)\nstatic rt_err_t at32_pin_dettach_irq(struct rt_device *device, rt_base_t pin)\nstatic rt_err_t at32_pin_irq_enable(struct rt_device *device, rt_base_t pin,\n                                    rt_uint8_t enabled)\nstatic rt_base_t at32_pin_get(const char *name)\n```\n\n快速修改：\n\n> static ***void***  (rt_device_t dev, rt_base_t pin, **rt_uint8_t** mode) \n> static ***void***  (rt_device_t dev, rt_base_t pin, **rt_uint8_t** value)\n> static **rt_int8_t** (*rt_device_t dev, **rt_base_t** pin*)\n> **rt_int8_t** *value* = PIN_LOW;\n> static ***rt_err_t*** (struct rt_device \\*device, **rt_base_t** pin,\n>                                  **rt_uint8_t** mode, void (*hdr)(void *args), void *args)\n> static ***rt_err_t*** (struct rt_device \\*device, **rt_base_t** pin)\n> static ***rt_err_t*** (struct rt_device \\*device, rt_base_t pin,\n>                                  **rt_uint8_t** enabled)\n\n以此形成的第二个开源贡献成果如下：\n\n> [[bsp\\] fix mismatched function types in rt_pin_ops for all drv_gpio.c by Placebo27 · Pull Request #7457 · RT-Thread/rt-thread (github.com)](https://github.com/RT-Thread/rt-thread/pull/7457) \n\n**小插曲**\n\n提交PR之后有个CI（Continuous Integration，持续集成）检测  **Check File Format and License / Scan code format and license** 不通过，原因是代码格式不规范，有些之前遗留下来的小问题比如空格之类的 。解决办法就是用官方的**源码格式自动化调整工具**跑一下。\n\n> Formatting源码格式自动化调整工具：[mysterywolf/formatting: 源码格式自动化调整工具 (github.com)](https://github.com/mysterywolf/formatting) \n\n### Formatting 源码格式自动化调整工具\n\n该文件会自动递归遍历**指定文件夹**下的所有文件或者**指定的文件**（默认对`.c`/`.h`/`.cpp`/`.hpp`，也可以改成你想要的文件类型）进行扫描：\n\n- 将源文件编码统一为UTF-8\n- 将TAB键替换为4空格\n- 将每行末尾多余的空格删除，并统一换行符为'\\n'\n- 将RT-Thread版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)\n- 将上海睿赛德版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)\n\n**工作路径**\n\n注意格式自动化调整工具的路径与所要遍历的文件路径之间的关系：\n\n```\n../rt-thread/\n```\n\n**部分遍历文件列表**\n\n> 1. ../rt-thread/bsp/allwinner/libraries/drivers/drv_pin.c\n> 2. ../rt-thread/bsp/apollo2/board/gpio.c\n> 3. ../rt-thread/bsp/beaglebone/drivers/gpio.c\n> 4. ../rt-thread/bsp/bouffalo_lab/libraries/rt_drivers/drv_gpio.c\n> 5. ../rt-thread/bsp/essemi/es32f0654/drivers/drv_gpio.c\n> 6. ../rt-thread/bsp/essemi/es32f369x/drivers/drv_gpio.c\n> 7. ../rt-thread/bsp/fm33lc026/libraries/HAL_Drivers/drv_gpio.c\n> 8. ../rt-thread/bsp/ft32/libraries/Drivers/drv_gpio.c\n> 9. ../rt-thread/bsp/gd32/arm/libraries/gd32_drivers/drv_gpio.c\n> 10. ../rt-thread/bsp/gd32/risc-v/libraries/gd32_drivers/drv_gpio.c\n> 11. ../rt-thread/bsp/gd32105c-eval/drivers/drv_gpio.c\n> 12. ../rt-thread/bsp/gd32107c-eval/drivers/drv_gpio.c\n> 13. ../rt-thread/bsp/gd32303e-eval/drivers/drv_gpio.c\n> 14. ../rt-thread/bsp/gd32350r-eval/drivers/drv_gpio.c\n> 15. ../rt-thread/bsp/gd32e230k-start/drivers/drv_gpio.c\n> 16. ../rt-thread/bsp/gd32vf103v-eval/drivers/drv_gpio.c\n> 17. ../rt-thread/bsp/hc32/libraries/hc32_drivers/drv_gpio.c\n> 18. ../rt-thread/bsp/hc32l136/drivers/drv_gpio.c\n> 19. ../rt-thread/bsp/hc32l196/drivers/drv_gpio.c\n> 20. ../rt-thread/bsp/hk32/libraries/rt_drivers/drv_gpio.c\n> 21. ../rt-thread/bsp/hpmicro/libraries/drivers/drv_gpio.c\n\n**人工判读**\n\nbsp/loongson/ls1cdev/drivers/drv_gpio.c\n\n**格式调整结果**\n\n> **Commit：**[bsp] Formatting  Source code format\n\n`git status`命令结果：\n\n```bash\n        modified:   bsp/hc32l136/drivers/drv_gpio.c\n        modified:   bsp/mm32l3xx/drivers/drv_gpio.c\n        modified:   bsp/rv32m1_vega/ri5cy/driver/drv_gpio.c\n        modified:   bsp/smartfusion2/drivers/drv_gpio.c\n```\n\n","slug":"RT-Thread开源贡献入门级指南","published":1,"updated":"2023-06-02T16:34:30.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliesczs50009dcfygk4gb8g3","content":"<h2 id=\"RT-Thread简介\"><a href=\"#RT-Thread简介\" class=\"headerlink\" title=\"RT-Thread简介\"></a>RT-Thread简介</h2><p>RT-Thread 是一款主要由中国开源社区主导开发的开源实时操作系统。据最新2021 RT-Thread开发者大会上官方公布的数据，其装机量已经超过14亿，开源企业用户已经有数万家，有超过100家国内外芯片厂家的支持，RT-Thread Studio工具拥有了超过15万用户。</p>\n<blockquote>\n<p>RT-Thread文档中心：<a href=\"https://www.rt-thread.org/document/site/#/rt-thread-version/rt-thread-standard/README\">RT-Thread 简介</a> </p>\n<p>RT-Thread学习路线：<a href=\"https://gitee.com/rtthread/docs-online#%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF\">docs-online: RT-Thread在线文档中心 (gitee.com)</a> </p>\n<p>仓库地址：<a href=\"https://gitee.com/rtthread/rt-thread\">RT-Thread</a></p>\n</blockquote>\n<h3 id=\"将RT-Thread运行在开发板上\"><a href=\"#将RT-Thread运行在开发板上\" class=\"headerlink\" title=\"将RT-Thread运行在开发板上\"></a>将RT-Thread运行在开发板上</h3><p>以stm3232u575-st-nucleo为例，请参考下列说明文档（其他开发板同理）</p>\n<blockquote>\n<p>NUCLEO-U575ZI-1开发板BSP说明：<a href=\"https://github.com/RT-Thread/rt-thread/blob/master/bsp/stm32/stm32u575-st-nucleo/README_zh.md\">rt-thread/README_zh.md at master · RT-Thread/rt-thread · GitHub</a> </p>\n</blockquote>\n<h2 id=\"RT-Thread开源贡献\"><a href=\"#RT-Thread开源贡献\" class=\"headerlink\" title=\"RT-Thread开源贡献\"></a>RT-Thread开源贡献</h2><h3 id=\"文档或注释修改类\"><a href=\"#文档或注释修改类\" class=\"headerlink\" title=\"文档或注释修改类\"></a>文档或注释修改类</h3><h4 id=\"失效链接\"><a href=\"#失效链接\" class=\"headerlink\" title=\"失效链接\"></a>失效链接</h4><p>对gitee下RT-Thread/docs-online项目——RT-Thread在线文档中心里的链接进行查阅，寻找失效的链接或是访问速度比较慢的重定向链接进行修复。</p>\n<p><strong>工作说明</strong></p>\n<ol>\n<li>修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接，形如：<code>http://docs.micropython.org/en/latest/pyboard/library/</code></li>\n<li>不修复将会导致文档跳转访问速度变慢</li>\n</ol>\n<p>形成的第一个开源贡献成果如下：</p>\n<blockquote>\n<p><a href=\"https://gitee.com/rtthread/docs-online/pulls/490\">【修改】 修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接http://docs.micropython.org/en/latest/pyboard/library/ · Pull Request !490 · RT-Thread/docs-online - Gitee.com</a> </p>\n</blockquote>\n<h3 id=\"安全修复类\"><a href=\"#安全修复类\" class=\"headerlink\" title=\"安全修复类\"></a>安全修复类</h3><h4 id=\"数据类型使用不当\"><a href=\"#数据类型使用不当\" class=\"headerlink\" title=\"数据类型使用不当\"></a>数据类型使用不当</h4><blockquote>\n<p>问题描述：[<a href=\"https://github.com/RT-Thread/rt-thread/pull/6934\">pin][5.0.0] 修正pin框架数据类型使用不当 by ZosCat1 · Pull Request #6934 · RT-Thread/rt-thread (github.com)</a> </p>\n<p>修改示例：[<a href=\"https://github.com/RT-Thread/rt-thread/pull/7161\">HUST CSE][bsp] fix mismatched function types in rt_pin_ops by hustlixiang21 · Pull Request #7161 · RT-Thread/rt-thread (github.com)</a> </p>\n<p>同类修改示例：[<a href=\"https://github.com/RT-Thread/rt-thread/pull/7185\">HUST CSE][bsp]fix mismatched function types in rt_pin_ops for all drv_gpio.c by hustlixiang21 · Pull Request #7185 · RT-Thread/rt-thread (github.com)</a> </p>\n</blockquote>\n<p><strong>工作说明</strong></p>\n<ol>\n<li>pin的数据类型有些采用uint16 有些使用rt_bsse_t, 还有些采用int16_t，应该统一为rt_base_t。</li>\n<li>部分变量使用的数据类型明显超过其所需，例如enabled变量使用的是一个rt_uint32_t，但是这个变量只需要存储enable/disable二值即可，结果搞了个32位的整形。修改均是一些非重大影响，但是看起来非常难受的问题。影响到sensor框架重构。</li>\n<li>把不匹配的参数类型修改成正确的类型。具体来说把drv_gpio.c中下列函数的形参或返回值修改为跟rt_pin_ops操作方法中的成员形参与返回值一致。重新修改drv_gpio.c中的函数原型。</li>\n</ol>\n<p>struct rt_pin_ops原型：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct rt_pin_ops</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    void (*pin_mode)(struct rt_device *device, rt_base_t pin, rt_uint8_t mode);</span><br><span class=\"line\">    void (*pin_write)(struct rt_device *device, rt_base_t pin, rt_uint8_t value);</span><br><span class=\"line\">    rt_int8_t  (*pin_read)(struct rt_device *device, rt_base_t pin);</span><br><span class=\"line\">    rt_err_t (*pin_attach_irq)(struct rt_device *device, rt_base_t pin,</span><br><span class=\"line\">            rt_uint8_t mode, void (*hdr)(void *args), void *args);</span><br><span class=\"line\">    rt_err_t (*pin_detach_irq)(struct rt_device *device, rt_base_t pin);</span><br><span class=\"line\">    rt_err_t (*pin_irq_enable)(struct rt_device *device, rt_base_t pin, rt_uint8_t enabled);</span><br><span class=\"line\">    rt_base_t (*pin_get)(const char *name);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>将drv_gpio.c中下列函数形参或返回值改为与rt_pin_ops形参返回值类型一致，修改之后drv_gpio.c函数原型如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static void at32_pin_mode(rt_device_t dev, rt_base_t pin, rt_uint8_t mode)</span><br><span class=\"line\">static void at32_pin_write(rt_device_t dev, rt_base_t pin, rt_uint8_t value)</span><br><span class=\"line\">static rt_int8_t at32_pin_read(rt_device_t dev, rt_base_t pin)</span><br><span class=\"line\">static rt_err_t at32_pin_attach_irq(struct rt_device *device, rt_base_t pin,</span><br><span class=\"line\">                                    rt_uint8_t mode, void (*hdr)(void *args), void *args)</span><br><span class=\"line\">static rt_err_t at32_pin_dettach_irq(struct rt_device *device, rt_base_t pin)</span><br><span class=\"line\">static rt_err_t at32_pin_irq_enable(struct rt_device *device, rt_base_t pin,</span><br><span class=\"line\">                                    rt_uint8_t enabled)</span><br><span class=\"line\">static rt_base_t at32_pin_get(const char *name)</span><br></pre></td></tr></table></figure>\n\n<p>快速修改：</p>\n<blockquote>\n<p>static <em><strong>void</strong></em>  (rt_device_t dev, rt_base_t pin, <strong>rt_uint8_t</strong> mode)<br>static <em><strong>void</strong></em>  (rt_device_t dev, rt_base_t pin, <strong>rt_uint8_t</strong> value)<br>static <strong>rt_int8_t</strong> (<em>rt_device_t dev, <strong>rt_base_t</strong> pin</em>)<br><strong>rt_int8_t</strong> <em>value</em> = PIN_LOW;<br>static <em><strong>rt_err_t</strong></em> (struct rt_device *device, <strong>rt_base_t</strong> pin,<br>                                 <strong>rt_uint8_t</strong> mode, void (*hdr)(void *args), void *args)<br>static <em><strong>rt_err_t</strong></em> (struct rt_device *device, <strong>rt_base_t</strong> pin)<br>static <em><strong>rt_err_t</strong></em> (struct rt_device *device, rt_base_t pin,<br>                                 <strong>rt_uint8_t</strong> enabled)</p>\n</blockquote>\n<p>以此形成的第二个开源贡献成果如下：</p>\n<blockquote>\n<p>[<a href=\"https://github.com/RT-Thread/rt-thread/pull/7457\">bsp] fix mismatched function types in rt_pin_ops for all drv_gpio.c by Placebo27 · Pull Request #7457 · RT-Thread/rt-thread (github.com)</a> </p>\n</blockquote>\n<p><strong>小插曲</strong></p>\n<p>提交PR之后有个CI（Continuous Integration，持续集成）检测  <strong>Check File Format and License / Scan code format and license</strong> 不通过，原因是代码格式不规范，有些之前遗留下来的小问题比如空格之类的 。解决办法就是用官方的<strong>源码格式自动化调整工具</strong>跑一下。</p>\n<blockquote>\n<p>Formatting源码格式自动化调整工具：<a href=\"https://github.com/mysterywolf/formatting\">mysterywolf/formatting: 源码格式自动化调整工具 (github.com)</a> </p>\n</blockquote>\n<h3 id=\"Formatting-源码格式自动化调整工具\"><a href=\"#Formatting-源码格式自动化调整工具\" class=\"headerlink\" title=\"Formatting 源码格式自动化调整工具\"></a>Formatting 源码格式自动化调整工具</h3><p>该文件会自动递归遍历<strong>指定文件夹</strong>下的所有文件或者<strong>指定的文件</strong>（默认对<code>.c</code>/<code>.h</code>/<code>.cpp</code>/<code>.hpp</code>，也可以改成你想要的文件类型）进行扫描：</p>\n<ul>\n<li>将源文件编码统一为UTF-8</li>\n<li>将TAB键替换为4空格</li>\n<li>将每行末尾多余的空格删除，并统一换行符为’\\n’</li>\n<li>将RT-Thread版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)</li>\n<li>将上海睿赛德版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)</li>\n</ul>\n<p><strong>工作路径</strong></p>\n<p>注意格式自动化调整工具的路径与所要遍历的文件路径之间的关系：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">../rt-thread/</span><br></pre></td></tr></table></figure>\n\n<p><strong>部分遍历文件列表</strong></p>\n<blockquote>\n<ol>\n<li>../rt-thread/bsp/allwinner/libraries/drivers/drv_pin.c</li>\n<li>../rt-thread/bsp/apollo2/board/gpio.c</li>\n<li>../rt-thread/bsp/beaglebone/drivers/gpio.c</li>\n<li>../rt-thread/bsp/bouffalo_lab/libraries/rt_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/essemi/es32f0654/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/essemi/es32f369x/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/fm33lc026/libraries/HAL_Drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/ft32/libraries/Drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32/arm/libraries/gd32_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32/risc-v/libraries/gd32_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32105c-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32107c-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32303e-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32350r-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32e230k-start/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32vf103v-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hc32/libraries/hc32_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hc32l136/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hc32l196/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hk32/libraries/rt_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hpmicro/libraries/drivers/drv_gpio.c</li>\n</ol>\n</blockquote>\n<p><strong>人工判读</strong></p>\n<p>bsp/loongson/ls1cdev/drivers/drv_gpio.c</p>\n<p><strong>格式调整结果</strong></p>\n<blockquote>\n<p><strong>Commit：</strong>[bsp] Formatting  Source code format</p>\n</blockquote>\n<p><code>git status</code>命令结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:   bsp/hc32l136/drivers/drv_gpio.c</span><br><span class=\"line\">modified:   bsp/mm32l3xx/drivers/drv_gpio.c</span><br><span class=\"line\">modified:   bsp/rv32m1_vega/ri5cy/driver/drv_gpio.c</span><br><span class=\"line\">modified:   bsp/smartfusion2/drivers/drv_gpio.c</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"RT-Thread简介\"><a href=\"#RT-Thread简介\" class=\"headerlink\" title=\"RT-Thread简介\"></a>RT-Thread简介</h2><p>RT-Thread 是一款主要由中国开源社区主导开发的开源实时操作系统。据最新2021 RT-Thread开发者大会上官方公布的数据，其装机量已经超过14亿，开源企业用户已经有数万家，有超过100家国内外芯片厂家的支持，RT-Thread Studio工具拥有了超过15万用户。</p>\n<blockquote>\n<p>RT-Thread文档中心：<a href=\"https://www.rt-thread.org/document/site/#/rt-thread-version/rt-thread-standard/README\">RT-Thread 简介</a> </p>\n<p>RT-Thread学习路线：<a href=\"https://gitee.com/rtthread/docs-online#%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF\">docs-online: RT-Thread在线文档中心 (gitee.com)</a> </p>\n<p>仓库地址：<a href=\"https://gitee.com/rtthread/rt-thread\">RT-Thread</a></p>\n</blockquote>\n<h3 id=\"将RT-Thread运行在开发板上\"><a href=\"#将RT-Thread运行在开发板上\" class=\"headerlink\" title=\"将RT-Thread运行在开发板上\"></a>将RT-Thread运行在开发板上</h3><p>以stm3232u575-st-nucleo为例，请参考下列说明文档（其他开发板同理）</p>\n<blockquote>\n<p>NUCLEO-U575ZI-1开发板BSP说明：<a href=\"https://github.com/RT-Thread/rt-thread/blob/master/bsp/stm32/stm32u575-st-nucleo/README_zh.md\">rt-thread/README_zh.md at master · RT-Thread/rt-thread · GitHub</a> </p>\n</blockquote>\n<h2 id=\"RT-Thread开源贡献\"><a href=\"#RT-Thread开源贡献\" class=\"headerlink\" title=\"RT-Thread开源贡献\"></a>RT-Thread开源贡献</h2><h3 id=\"文档或注释修改类\"><a href=\"#文档或注释修改类\" class=\"headerlink\" title=\"文档或注释修改类\"></a>文档或注释修改类</h3><h4 id=\"失效链接\"><a href=\"#失效链接\" class=\"headerlink\" title=\"失效链接\"></a>失效链接</h4><p>对gitee下RT-Thread/docs-online项目——RT-Thread在线文档中心里的链接进行查阅，寻找失效的链接或是访问速度比较慢的重定向链接进行修复。</p>\n<p><strong>工作说明</strong></p>\n<ol>\n<li>修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接，形如：<code>http://docs.micropython.org/en/latest/pyboard/library/</code></li>\n<li>不修复将会导致文档跳转访问速度变慢</li>\n</ol>\n<p>形成的第一个开源贡献成果如下：</p>\n<blockquote>\n<p><a href=\"https://gitee.com/rtthread/docs-online/pulls/490\">【修改】 修复了24个rt-thread-version/rt-thread-standard/packages-manual/micropython-docs/目录下的文档中访问速度比较慢的重定向链接http://docs.micropython.org/en/latest/pyboard/library/ · Pull Request !490 · RT-Thread/docs-online - Gitee.com</a> </p>\n</blockquote>\n<h3 id=\"安全修复类\"><a href=\"#安全修复类\" class=\"headerlink\" title=\"安全修复类\"></a>安全修复类</h3><h4 id=\"数据类型使用不当\"><a href=\"#数据类型使用不当\" class=\"headerlink\" title=\"数据类型使用不当\"></a>数据类型使用不当</h4><blockquote>\n<p>问题描述：[<a href=\"https://github.com/RT-Thread/rt-thread/pull/6934\">pin][5.0.0] 修正pin框架数据类型使用不当 by ZosCat1 · Pull Request #6934 · RT-Thread/rt-thread (github.com)</a> </p>\n<p>修改示例：[<a href=\"https://github.com/RT-Thread/rt-thread/pull/7161\">HUST CSE][bsp] fix mismatched function types in rt_pin_ops by hustlixiang21 · Pull Request #7161 · RT-Thread/rt-thread (github.com)</a> </p>\n<p>同类修改示例：[<a href=\"https://github.com/RT-Thread/rt-thread/pull/7185\">HUST CSE][bsp]fix mismatched function types in rt_pin_ops for all drv_gpio.c by hustlixiang21 · Pull Request #7185 · RT-Thread/rt-thread (github.com)</a> </p>\n</blockquote>\n<p><strong>工作说明</strong></p>\n<ol>\n<li>pin的数据类型有些采用uint16 有些使用rt_bsse_t, 还有些采用int16_t，应该统一为rt_base_t。</li>\n<li>部分变量使用的数据类型明显超过其所需，例如enabled变量使用的是一个rt_uint32_t，但是这个变量只需要存储enable/disable二值即可，结果搞了个32位的整形。修改均是一些非重大影响，但是看起来非常难受的问题。影响到sensor框架重构。</li>\n<li>把不匹配的参数类型修改成正确的类型。具体来说把drv_gpio.c中下列函数的形参或返回值修改为跟rt_pin_ops操作方法中的成员形参与返回值一致。重新修改drv_gpio.c中的函数原型。</li>\n</ol>\n<p>struct rt_pin_ops原型：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct rt_pin_ops</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    void (*pin_mode)(struct rt_device *device, rt_base_t pin, rt_uint8_t mode);</span><br><span class=\"line\">    void (*pin_write)(struct rt_device *device, rt_base_t pin, rt_uint8_t value);</span><br><span class=\"line\">    rt_int8_t  (*pin_read)(struct rt_device *device, rt_base_t pin);</span><br><span class=\"line\">    rt_err_t (*pin_attach_irq)(struct rt_device *device, rt_base_t pin,</span><br><span class=\"line\">            rt_uint8_t mode, void (*hdr)(void *args), void *args);</span><br><span class=\"line\">    rt_err_t (*pin_detach_irq)(struct rt_device *device, rt_base_t pin);</span><br><span class=\"line\">    rt_err_t (*pin_irq_enable)(struct rt_device *device, rt_base_t pin, rt_uint8_t enabled);</span><br><span class=\"line\">    rt_base_t (*pin_get)(const char *name);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>将drv_gpio.c中下列函数形参或返回值改为与rt_pin_ops形参返回值类型一致，修改之后drv_gpio.c函数原型如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static void at32_pin_mode(rt_device_t dev, rt_base_t pin, rt_uint8_t mode)</span><br><span class=\"line\">static void at32_pin_write(rt_device_t dev, rt_base_t pin, rt_uint8_t value)</span><br><span class=\"line\">static rt_int8_t at32_pin_read(rt_device_t dev, rt_base_t pin)</span><br><span class=\"line\">static rt_err_t at32_pin_attach_irq(struct rt_device *device, rt_base_t pin,</span><br><span class=\"line\">                                    rt_uint8_t mode, void (*hdr)(void *args), void *args)</span><br><span class=\"line\">static rt_err_t at32_pin_dettach_irq(struct rt_device *device, rt_base_t pin)</span><br><span class=\"line\">static rt_err_t at32_pin_irq_enable(struct rt_device *device, rt_base_t pin,</span><br><span class=\"line\">                                    rt_uint8_t enabled)</span><br><span class=\"line\">static rt_base_t at32_pin_get(const char *name)</span><br></pre></td></tr></table></figure>\n\n<p>快速修改：</p>\n<blockquote>\n<p>static <em><strong>void</strong></em>  (rt_device_t dev, rt_base_t pin, <strong>rt_uint8_t</strong> mode)<br>static <em><strong>void</strong></em>  (rt_device_t dev, rt_base_t pin, <strong>rt_uint8_t</strong> value)<br>static <strong>rt_int8_t</strong> (<em>rt_device_t dev, <strong>rt_base_t</strong> pin</em>)<br><strong>rt_int8_t</strong> <em>value</em> = PIN_LOW;<br>static <em><strong>rt_err_t</strong></em> (struct rt_device *device, <strong>rt_base_t</strong> pin,<br>                                 <strong>rt_uint8_t</strong> mode, void (*hdr)(void *args), void *args)<br>static <em><strong>rt_err_t</strong></em> (struct rt_device *device, <strong>rt_base_t</strong> pin)<br>static <em><strong>rt_err_t</strong></em> (struct rt_device *device, rt_base_t pin,<br>                                 <strong>rt_uint8_t</strong> enabled)</p>\n</blockquote>\n<p>以此形成的第二个开源贡献成果如下：</p>\n<blockquote>\n<p>[<a href=\"https://github.com/RT-Thread/rt-thread/pull/7457\">bsp] fix mismatched function types in rt_pin_ops for all drv_gpio.c by Placebo27 · Pull Request #7457 · RT-Thread/rt-thread (github.com)</a> </p>\n</blockquote>\n<p><strong>小插曲</strong></p>\n<p>提交PR之后有个CI（Continuous Integration，持续集成）检测  <strong>Check File Format and License / Scan code format and license</strong> 不通过，原因是代码格式不规范，有些之前遗留下来的小问题比如空格之类的 。解决办法就是用官方的<strong>源码格式自动化调整工具</strong>跑一下。</p>\n<blockquote>\n<p>Formatting源码格式自动化调整工具：<a href=\"https://github.com/mysterywolf/formatting\">mysterywolf/formatting: 源码格式自动化调整工具 (github.com)</a> </p>\n</blockquote>\n<h3 id=\"Formatting-源码格式自动化调整工具\"><a href=\"#Formatting-源码格式自动化调整工具\" class=\"headerlink\" title=\"Formatting 源码格式自动化调整工具\"></a>Formatting 源码格式自动化调整工具</h3><p>该文件会自动递归遍历<strong>指定文件夹</strong>下的所有文件或者<strong>指定的文件</strong>（默认对<code>.c</code>/<code>.h</code>/<code>.cpp</code>/<code>.hpp</code>，也可以改成你想要的文件类型）进行扫描：</p>\n<ul>\n<li>将源文件编码统一为UTF-8</li>\n<li>将TAB键替换为4空格</li>\n<li>将每行末尾多余的空格删除，并统一换行符为’\\n’</li>\n<li>将RT-Thread版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)</li>\n<li>将上海睿赛德版权信息的截至年份修改至今年(若文件不涉及此问题，程序会自动忽略)</li>\n</ul>\n<p><strong>工作路径</strong></p>\n<p>注意格式自动化调整工具的路径与所要遍历的文件路径之间的关系：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">../rt-thread/</span><br></pre></td></tr></table></figure>\n\n<p><strong>部分遍历文件列表</strong></p>\n<blockquote>\n<ol>\n<li>../rt-thread/bsp/allwinner/libraries/drivers/drv_pin.c</li>\n<li>../rt-thread/bsp/apollo2/board/gpio.c</li>\n<li>../rt-thread/bsp/beaglebone/drivers/gpio.c</li>\n<li>../rt-thread/bsp/bouffalo_lab/libraries/rt_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/essemi/es32f0654/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/essemi/es32f369x/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/fm33lc026/libraries/HAL_Drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/ft32/libraries/Drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32/arm/libraries/gd32_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32/risc-v/libraries/gd32_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32105c-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32107c-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32303e-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32350r-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32e230k-start/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/gd32vf103v-eval/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hc32/libraries/hc32_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hc32l136/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hc32l196/drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hk32/libraries/rt_drivers/drv_gpio.c</li>\n<li>../rt-thread/bsp/hpmicro/libraries/drivers/drv_gpio.c</li>\n</ol>\n</blockquote>\n<p><strong>人工判读</strong></p>\n<p>bsp/loongson/ls1cdev/drivers/drv_gpio.c</p>\n<p><strong>格式调整结果</strong></p>\n<blockquote>\n<p><strong>Commit：</strong>[bsp] Formatting  Source code format</p>\n</blockquote>\n<p><code>git status</code>命令结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:   bsp/hc32l136/drivers/drv_gpio.c</span><br><span class=\"line\">modified:   bsp/mm32l3xx/drivers/drv_gpio.c</span><br><span class=\"line\">modified:   bsp/rv32m1_vega/ri5cy/driver/drv_gpio.c</span><br><span class=\"line\">modified:   bsp/smartfusion2/drivers/drv_gpio.c</span><br></pre></td></tr></table></figure>\n\n"},{"title":"将平板扩展为Windows主机的副屏（以ipad为例，无线链接）","date":"2023-06-02T15:50:55.000Z","typora-root-url":"../","_content":"\n# 将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\n\n## Spacedesk安装\n\n### Windows主机（服务器）\n\n打开Spacedesk官网： [spacedesk](https://www.spacedesk.net/#download) \n\n选择对应系统的版本进行下载与安装：![1685153282219](/images/ipad副屏扩展/1685153282219.png)\n\n### ipad平板（客户机）\n\n打开App Store，搜索spacedesk，进行安装。\n\n### 其他客户机\n\n在Spacedesk官网下拉，可以看到更多的选择，挑选自己的客户机进行下载与安装：![1685153636049](/images/ipad副屏扩展/1685153636049.png)\n\n## Spacedesk使用\n\n### Windows主机服务器\n\n打开服务器端Spacedesk，可以看到如下界面：![1685153786552](/images/ipad副屏扩展/1685153786552.png)\n\n其中左侧为工具栏，右侧显示左侧功能的相关信息。默认右侧显示CONTROL控制面板，上方开关代表是否开启服务；Automatic Start勾选代表了开机自启，不需要则取消勾选。\n\n### 以ipad为例的其他客户机\n\n打开软件，允许查找同一网络上的设备，给予网络访问权限。将此设备与服务器PC连接到同一个局域网环境下，即连接到同一个路由器。此时客户机软件已能看见服务器PC。\n\n点击下方齿轮设置，下方切换Quality/Performance选项，可以实时调整画面质量，只需拉动设置条，也可以对颜色深度和FPS帧率进行调整。这里将FPS调整为**60帧**，画面质量随个人意愿设置，颜色深度可以维持Low color质量，保证流畅度和速度。点击左上角Save保存并退出。\n\n此时可以点击服务器PC的ip地址进行链接，就可以看见服务器PC在客户机上的投影了。\n\n### 显示器扩展\n\n使用`WIN+p`快捷键打开投影设置，选择下方扩展选项，即可看到客户机成为扩展显示器。\n\n使用`WIN+i`快捷键打开设置，选择系统->屏幕选项，可以拖动屏幕重新排列显示器位置。\n\n单击选择客户机扩展显示器，下拉更改分辨率为最大，然后将缩放调整为200%，可根据个人情况向大的方向调整。\n\n**链接多个设备**\n\n打开其他客户机，进行相关配置，然后打开Spacedesk点击主机IP地址链接即可，屏幕设置相同。\n\n## 副屏使用\n\n### 副屏美化\n\n如果你有Wallpaper engine的话，打开它，即可看见显示器选择选项：\n\n![1685156321847](/images/ipad副屏扩展/1685156321847.png)\n\n选择显示器2，更换壁纸即可。\n\n### 主副屏切换程序\n\n通过`win键+shift+左右箭头`来回切换程序在主副屏幕显示。\n","source":"_posts/ipad副屏扩展.md","raw":"---\ntitle: 将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\ntags:\n  - ipad\n  - Spacedesk\ncategories:\n  - 工具\ndate: 2023-06-02 23:50:55\ntypora-root-url: ../\n---\n\n# 将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\n\n## Spacedesk安装\n\n### Windows主机（服务器）\n\n打开Spacedesk官网： [spacedesk](https://www.spacedesk.net/#download) \n\n选择对应系统的版本进行下载与安装：![1685153282219](/images/ipad副屏扩展/1685153282219.png)\n\n### ipad平板（客户机）\n\n打开App Store，搜索spacedesk，进行安装。\n\n### 其他客户机\n\n在Spacedesk官网下拉，可以看到更多的选择，挑选自己的客户机进行下载与安装：![1685153636049](/images/ipad副屏扩展/1685153636049.png)\n\n## Spacedesk使用\n\n### Windows主机服务器\n\n打开服务器端Spacedesk，可以看到如下界面：![1685153786552](/images/ipad副屏扩展/1685153786552.png)\n\n其中左侧为工具栏，右侧显示左侧功能的相关信息。默认右侧显示CONTROL控制面板，上方开关代表是否开启服务；Automatic Start勾选代表了开机自启，不需要则取消勾选。\n\n### 以ipad为例的其他客户机\n\n打开软件，允许查找同一网络上的设备，给予网络访问权限。将此设备与服务器PC连接到同一个局域网环境下，即连接到同一个路由器。此时客户机软件已能看见服务器PC。\n\n点击下方齿轮设置，下方切换Quality/Performance选项，可以实时调整画面质量，只需拉动设置条，也可以对颜色深度和FPS帧率进行调整。这里将FPS调整为**60帧**，画面质量随个人意愿设置，颜色深度可以维持Low color质量，保证流畅度和速度。点击左上角Save保存并退出。\n\n此时可以点击服务器PC的ip地址进行链接，就可以看见服务器PC在客户机上的投影了。\n\n### 显示器扩展\n\n使用`WIN+p`快捷键打开投影设置，选择下方扩展选项，即可看到客户机成为扩展显示器。\n\n使用`WIN+i`快捷键打开设置，选择系统->屏幕选项，可以拖动屏幕重新排列显示器位置。\n\n单击选择客户机扩展显示器，下拉更改分辨率为最大，然后将缩放调整为200%，可根据个人情况向大的方向调整。\n\n**链接多个设备**\n\n打开其他客户机，进行相关配置，然后打开Spacedesk点击主机IP地址链接即可，屏幕设置相同。\n\n## 副屏使用\n\n### 副屏美化\n\n如果你有Wallpaper engine的话，打开它，即可看见显示器选择选项：\n\n![1685156321847](/images/ipad副屏扩展/1685156321847.png)\n\n选择显示器2，更换壁纸即可。\n\n### 主副屏切换程序\n\n通过`win键+shift+左右箭头`来回切换程序在主副屏幕显示。\n","slug":"ipad副屏扩展","published":1,"updated":"2023-06-02T16:00:40.790Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliesczs5000adcfy4vj177ui","content":"<h1 id=\"将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\"><a href=\"#将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\" class=\"headerlink\" title=\"将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\"></a>将平板扩展为Windows主机的副屏（以ipad为例，无线链接）</h1><h2 id=\"Spacedesk安装\"><a href=\"#Spacedesk安装\" class=\"headerlink\" title=\"Spacedesk安装\"></a>Spacedesk安装</h2><h3 id=\"Windows主机（服务器）\"><a href=\"#Windows主机（服务器）\" class=\"headerlink\" title=\"Windows主机（服务器）\"></a>Windows主机（服务器）</h3><p>打开Spacedesk官网： <a href=\"https://www.spacedesk.net/#download\">spacedesk</a> </p>\n<p>选择对应系统的版本进行下载与安装：<img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685153282219.png\" alt=\"1685153282219\"></p>\n<h3 id=\"ipad平板（客户机）\"><a href=\"#ipad平板（客户机）\" class=\"headerlink\" title=\"ipad平板（客户机）\"></a>ipad平板（客户机）</h3><p>打开App Store，搜索spacedesk，进行安装。</p>\n<h3 id=\"其他客户机\"><a href=\"#其他客户机\" class=\"headerlink\" title=\"其他客户机\"></a>其他客户机</h3><p>在Spacedesk官网下拉，可以看到更多的选择，挑选自己的客户机进行下载与安装：<img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685153636049.png\" alt=\"1685153636049\"></p>\n<h2 id=\"Spacedesk使用\"><a href=\"#Spacedesk使用\" class=\"headerlink\" title=\"Spacedesk使用\"></a>Spacedesk使用</h2><h3 id=\"Windows主机服务器\"><a href=\"#Windows主机服务器\" class=\"headerlink\" title=\"Windows主机服务器\"></a>Windows主机服务器</h3><p>打开服务器端Spacedesk，可以看到如下界面：<img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685153786552.png\" alt=\"1685153786552\"></p>\n<p>其中左侧为工具栏，右侧显示左侧功能的相关信息。默认右侧显示CONTROL控制面板，上方开关代表是否开启服务；Automatic Start勾选代表了开机自启，不需要则取消勾选。</p>\n<h3 id=\"以ipad为例的其他客户机\"><a href=\"#以ipad为例的其他客户机\" class=\"headerlink\" title=\"以ipad为例的其他客户机\"></a>以ipad为例的其他客户机</h3><p>打开软件，允许查找同一网络上的设备，给予网络访问权限。将此设备与服务器PC连接到同一个局域网环境下，即连接到同一个路由器。此时客户机软件已能看见服务器PC。</p>\n<p>点击下方齿轮设置，下方切换Quality/Performance选项，可以实时调整画面质量，只需拉动设置条，也可以对颜色深度和FPS帧率进行调整。这里将FPS调整为<strong>60帧</strong>，画面质量随个人意愿设置，颜色深度可以维持Low color质量，保证流畅度和速度。点击左上角Save保存并退出。</p>\n<p>此时可以点击服务器PC的ip地址进行链接，就可以看见服务器PC在客户机上的投影了。</p>\n<h3 id=\"显示器扩展\"><a href=\"#显示器扩展\" class=\"headerlink\" title=\"显示器扩展\"></a>显示器扩展</h3><p>使用<code>WIN+p</code>快捷键打开投影设置，选择下方扩展选项，即可看到客户机成为扩展显示器。</p>\n<p>使用<code>WIN+i</code>快捷键打开设置，选择系统-&gt;屏幕选项，可以拖动屏幕重新排列显示器位置。</p>\n<p>单击选择客户机扩展显示器，下拉更改分辨率为最大，然后将缩放调整为200%，可根据个人情况向大的方向调整。</p>\n<p><strong>链接多个设备</strong></p>\n<p>打开其他客户机，进行相关配置，然后打开Spacedesk点击主机IP地址链接即可，屏幕设置相同。</p>\n<h2 id=\"副屏使用\"><a href=\"#副屏使用\" class=\"headerlink\" title=\"副屏使用\"></a>副屏使用</h2><h3 id=\"副屏美化\"><a href=\"#副屏美化\" class=\"headerlink\" title=\"副屏美化\"></a>副屏美化</h3><p>如果你有Wallpaper engine的话，打开它，即可看见显示器选择选项：</p>\n<p><img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685156321847.png\" alt=\"1685156321847\"></p>\n<p>选择显示器2，更换壁纸即可。</p>\n<h3 id=\"主副屏切换程序\"><a href=\"#主副屏切换程序\" class=\"headerlink\" title=\"主副屏切换程序\"></a>主副屏切换程序</h3><p>通过<code>win键+shift+左右箭头</code>来回切换程序在主副屏幕显示。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\"><a href=\"#将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\" class=\"headerlink\" title=\"将平板扩展为Windows主机的副屏（以ipad为例，无线链接）\"></a>将平板扩展为Windows主机的副屏（以ipad为例，无线链接）</h1><h2 id=\"Spacedesk安装\"><a href=\"#Spacedesk安装\" class=\"headerlink\" title=\"Spacedesk安装\"></a>Spacedesk安装</h2><h3 id=\"Windows主机（服务器）\"><a href=\"#Windows主机（服务器）\" class=\"headerlink\" title=\"Windows主机（服务器）\"></a>Windows主机（服务器）</h3><p>打开Spacedesk官网： <a href=\"https://www.spacedesk.net/#download\">spacedesk</a> </p>\n<p>选择对应系统的版本进行下载与安装：<img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685153282219.png\" alt=\"1685153282219\"></p>\n<h3 id=\"ipad平板（客户机）\"><a href=\"#ipad平板（客户机）\" class=\"headerlink\" title=\"ipad平板（客户机）\"></a>ipad平板（客户机）</h3><p>打开App Store，搜索spacedesk，进行安装。</p>\n<h3 id=\"其他客户机\"><a href=\"#其他客户机\" class=\"headerlink\" title=\"其他客户机\"></a>其他客户机</h3><p>在Spacedesk官网下拉，可以看到更多的选择，挑选自己的客户机进行下载与安装：<img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685153636049.png\" alt=\"1685153636049\"></p>\n<h2 id=\"Spacedesk使用\"><a href=\"#Spacedesk使用\" class=\"headerlink\" title=\"Spacedesk使用\"></a>Spacedesk使用</h2><h3 id=\"Windows主机服务器\"><a href=\"#Windows主机服务器\" class=\"headerlink\" title=\"Windows主机服务器\"></a>Windows主机服务器</h3><p>打开服务器端Spacedesk，可以看到如下界面：<img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685153786552.png\" alt=\"1685153786552\"></p>\n<p>其中左侧为工具栏，右侧显示左侧功能的相关信息。默认右侧显示CONTROL控制面板，上方开关代表是否开启服务；Automatic Start勾选代表了开机自启，不需要则取消勾选。</p>\n<h3 id=\"以ipad为例的其他客户机\"><a href=\"#以ipad为例的其他客户机\" class=\"headerlink\" title=\"以ipad为例的其他客户机\"></a>以ipad为例的其他客户机</h3><p>打开软件，允许查找同一网络上的设备，给予网络访问权限。将此设备与服务器PC连接到同一个局域网环境下，即连接到同一个路由器。此时客户机软件已能看见服务器PC。</p>\n<p>点击下方齿轮设置，下方切换Quality/Performance选项，可以实时调整画面质量，只需拉动设置条，也可以对颜色深度和FPS帧率进行调整。这里将FPS调整为<strong>60帧</strong>，画面质量随个人意愿设置，颜色深度可以维持Low color质量，保证流畅度和速度。点击左上角Save保存并退出。</p>\n<p>此时可以点击服务器PC的ip地址进行链接，就可以看见服务器PC在客户机上的投影了。</p>\n<h3 id=\"显示器扩展\"><a href=\"#显示器扩展\" class=\"headerlink\" title=\"显示器扩展\"></a>显示器扩展</h3><p>使用<code>WIN+p</code>快捷键打开投影设置，选择下方扩展选项，即可看到客户机成为扩展显示器。</p>\n<p>使用<code>WIN+i</code>快捷键打开设置，选择系统-&gt;屏幕选项，可以拖动屏幕重新排列显示器位置。</p>\n<p>单击选择客户机扩展显示器，下拉更改分辨率为最大，然后将缩放调整为200%，可根据个人情况向大的方向调整。</p>\n<p><strong>链接多个设备</strong></p>\n<p>打开其他客户机，进行相关配置，然后打开Spacedesk点击主机IP地址链接即可，屏幕设置相同。</p>\n<h2 id=\"副屏使用\"><a href=\"#副屏使用\" class=\"headerlink\" title=\"副屏使用\"></a>副屏使用</h2><h3 id=\"副屏美化\"><a href=\"#副屏美化\" class=\"headerlink\" title=\"副屏美化\"></a>副屏美化</h3><p>如果你有Wallpaper engine的话，打开它，即可看见显示器选择选项：</p>\n<p><img src=\"/images/ipad%E5%89%AF%E5%B1%8F%E6%89%A9%E5%B1%95/1685156321847.png\" alt=\"1685156321847\"></p>\n<p>选择显示器2，更换壁纸即可。</p>\n<h3 id=\"主副屏切换程序\"><a href=\"#主副屏切换程序\" class=\"headerlink\" title=\"主副屏切换程序\"></a>主副屏切换程序</h3><p>通过<code>win键+shift+左右箭头</code>来回切换程序在主副屏幕显示。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-05-12T13:42:48.212Z","updated":"2023-04-07T12:30:09.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliesczs8000ddcfy6sqwfc5m","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cliesczrw0001dcfy8qbqeb2o","category_id":"cliesczs10004dcfy21icbgcq","_id":"cliesczs9000fdcfy8y8v9s5i"},{"post_id":"cliesczs00003dcfy0fx444n3","category_id":"cliesczs10004dcfy21icbgcq","_id":"cliesczs9000idcfy9qui46kg"},{"post_id":"cliesczs50009dcfygk4gb8g3","category_id":"cliesczsa000kdcfy5uph6q0n","_id":"cliesczsb000qdcfy6cwea098"},{"post_id":"cliesczs5000adcfy4vj177ui","category_id":"cliesczsa000ndcfy0b7bb2ue","_id":"cliesczsc000udcfya235fbvl"},{"post_id":"cliesczs30007dcfy3pquhh7r","category_id":"cliesczs8000edcfygwgv4ch3","_id":"cliesczsc000wdcfy0qhadfen"},{"post_id":"cliesczs30007dcfy3pquhh7r","category_id":"cliesczsb000sdcfy7rjia872","_id":"cliesczsc000zdcfy41335dhz"}],"PostTag":[{"post_id":"cliesczrw0001dcfy8qbqeb2o","tag_id":"cliesczs20005dcfy2ibfa6ou","_id":"cliesczs9000hdcfy7li0f7w1"},{"post_id":"cliesczrw0001dcfy8qbqeb2o","tag_id":"cliesczs6000cdcfycztx7y2g","_id":"cliesczs9000jdcfygkzqe7hm"},{"post_id":"cliesczs00003dcfy0fx444n3","tag_id":"cliesczs20005dcfy2ibfa6ou","_id":"cliesczsb000odcfy5yyfg5jx"},{"post_id":"cliesczs00003dcfy0fx444n3","tag_id":"cliesczs6000cdcfycztx7y2g","_id":"cliesczsb000pdcfy5r4l521s"},{"post_id":"cliesczs30007dcfy3pquhh7r","tag_id":"cliesczsa000mdcfyfpfe5p8k","_id":"cliesczsb000tdcfy92233emq"},{"post_id":"cliesczs50009dcfygk4gb8g3","tag_id":"cliesczsb000rdcfydkut0q1w","_id":"cliesczsc000ydcfycqfgbfmx"},{"post_id":"cliesczs50009dcfygk4gb8g3","tag_id":"cliesczsc000vdcfygppf8sb3","_id":"cliesczsc0010dcfy7jcz2oii"},{"post_id":"cliesczs5000adcfy4vj177ui","tag_id":"cliesczsc000xdcfy99of8vvp","_id":"cliesczsd0012dcfy05jt4epb"},{"post_id":"cliesczs5000adcfy4vj177ui","tag_id":"cliesczsc0011dcfy5wnaglr3","_id":"cliesczsd0013dcfydvpj54jf"}],"Tag":[{"name":"Hexo","_id":"cliesczs20005dcfy2ibfa6ou"},{"name":"Github","_id":"cliesczs6000cdcfycztx7y2g"},{"name":"JavaScript","_id":"cliesczsa000mdcfyfpfe5p8k"},{"name":"github","_id":"cliesczsb000rdcfydkut0q1w"},{"name":"rt-thread","_id":"cliesczsc000vdcfygppf8sb3"},{"name":"ipad","_id":"cliesczsc000xdcfy99of8vvp"},{"name":"Spacedesk","_id":"cliesczsc0011dcfy5wnaglr3"}]}}